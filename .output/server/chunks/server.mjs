import { v as vue_cjs_prod, s as serverRenderer, r as require$$0 } from './renderer.mjs';
import { hasProtocol, isEqual, withBase, withQuery, joinURL } from 'ufo';
import { createError, appendHeader, sendRedirect } from 'h3';
import { format } from 'date-fns';
import ru from 'date-fns/locale/ru/index.js';
import { u as useRuntimeConfig$1 } from './node-server.mjs';
import 'unenv/runtime/mock/proxy';
import 'stream';
import 'node-fetch-native/polyfill';
import 'http';
import 'https';
import 'destr';
import 'ohmyfetch';
import 'radix3';
import 'unenv/runtime/fetch/index';
import 'hookable';
import 'scule';
import 'ohash';
import 'unstorage';
import 'fs';
import 'pathe';
import 'url';

var vueTablerIcons = {};

(function (exports) {

	Object.defineProperty(exports, '__esModule', { value: true });

	var vue = vue_cjs_prod;

	var TwoFactorAuthIcon = {
	  name: 'TwoFactorAuthIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-2fa",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 16h-4l3.47 -4.66a2 2 0 1 0 -3.47 -1.54"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16v-8h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "12",
	      "x2": "13",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 16v-6a2 2 0 0 1 4 0v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "13",
	      "x2": "21",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ThreedCubeSphereIcon = {
	  name: 'ThreedCubeSphereIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-3d-cube-sphere",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 17.6l-2 -1.1v-2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 10v-2.5l2 -1.1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4.1l2 -1.1l2 1.1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 6.4l2 1.1v2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 14v2.5l-2 1.12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 19.9l-2 1.1l-2 -1.1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "14",
	      "y2": "10.9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "8.6",
	      "x2": "20",
	      "y2": "7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "14.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18.5",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-2 -1.12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "8.6",
	      "x2": "4",
	      "y2": "7.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ThreedRotateIcon = {
	  name: 'ThreedRotateIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-3d-rotate",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 15.5l4 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 13l4 2.5v4.5l4 -2.5v-4.5l-4 -2.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 13v4.5l4 2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 4a7 7 0 0 1 7 7v4l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ABOffIcon = {
	  name: 'ABOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-a-b-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 16v-5.5a2.5 2.5 0 0 1 5 0v5.5m0 -4h-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8h3a2 2 0 1 1 0 4h-3m3 0a2 2 0 0 1 .83 3.82m-3.83 -3.82v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ABIcon = {
	  name: 'ABIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-a-b",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 16v-5.5a2.5 2.5 0 0 1 5 0v5.5m0 -4h-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "6",
	      "x2": "12",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16v-8h3a2 2 0 0 1 0 4h-3m3 0a2 2 0 0 1 0 4h-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AbacusIcon = {
	  name: 'AbacusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-abacus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 3v18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 21v-18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7h14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 15h14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 13v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 13v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 5v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 5v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 5v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21h18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AccessPointOffIcon = {
	  name: 'AccessPointOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-access-point-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.828 9.172a4 4 0 0 1 1.172 2.828"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.657 6.343a8 8 0 0 1 1.635 8.952"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.168 14.828a4 4 0 0 1 0 -5.656"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.337 17.657a8 8 0 0 1 0 -11.314"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AccessPointIcon = {
	  name: 'AccessPointIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-access-point",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.828 9.172a4 4 0 0 1 0 5.656"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.657 6.343a8 8 0 0 1 0 11.314"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.168 14.828a4 4 0 0 1 0 -5.656"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.337 17.657a8 8 0 0 1 0 -11.314"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AccessibleOffIcon = {
	  name: 'AccessibleOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-accessible-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16.5l2 -3l2 3m-2 -3v-1.5m2.627 -1.376l.373 -.124m-6 0l2.231 .744"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8a0.5 .5 0 1 0 -.5 -.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AccessibleIcon = {
	  name: 'AccessibleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-accessible",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16.5l2 -3l2 3m-2 -3v-2l3 -1m-6 0l3 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "7.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ActivityHeartbeatIcon = {
	  name: 'ActivityHeartbeatIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-activity-heartbeat",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h4.5l1.5 -6l4 12l2 -9l1.5 3h4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ActivityIcon = {
	  name: 'ActivityIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-activity",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h4l3 8l4 -16l3 8h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Ad2Icon = {
	  name: 'Ad2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ad-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.933 5h-6.933v16h13v-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 17h-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 13h5v-4h-5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 5v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 6l2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 9h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AdIcon = {
	  name: 'AdIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ad",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 15v-4a2 2 0 0 1 4 0v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "13",
	      "x2": "11",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 9v6h-1.5a1.5 1.5 0 1 1 1.5 -1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AddressBookIcon = {
	  name: 'AddressBookIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-address-book",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 6v12a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "13",
	      "cy": "11",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AdjustmentsAltIcon = {
	  name: 'AdjustmentsAltIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-adjustments-alt",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "8",
	      "width": "4",
	      "height": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "4",
	      "x2": "6",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "12",
	      "x2": "6",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "10",
	      "y": "14",
	      "width": "4",
	      "height": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "16",
	      "y": "5",
	      "width": "4",
	      "height": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "4",
	      "x2": "18",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "9",
	      "x2": "18",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AdjustmentsHorizontalIcon = {
	  name: 'AdjustmentsHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-adjustments-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "12",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "6",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "18",
	      "x2": "15",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "18",
	      "x2": "20",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AdjustmentsOffIcon = {
	  name: 'AdjustmentsOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-adjustments-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "10",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 12v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "16",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "7",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 4v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 9v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 18v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AdjustmentsIcon = {
	  name: 'AdjustmentsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-adjustments",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "10",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "4",
	      "x2": "6",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "12",
	      "x2": "6",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "16",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "7",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "4",
	      "x2": "18",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "9",
	      "x2": "18",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AerialLiftIcon = {
	  name: 'AerialLiftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-aerial-lift",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 5l16 -2m-8 1v10m-5.106 -6h10.306c2.45 3 2.45 9 -.2 12h-10.106c-2.544 -3 -2.544 -9 0 -12zm-1.894 6h14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AffiliateIcon = {
	  name: 'AffiliateIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-affiliate",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.931 6.936l1.275 4.249m5.607 5.609l4.251 1.275"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.683 12.317l5.759 -5.759"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5.5",
	      "cy": "5.5",
	      "r": "1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18.5",
	      "cy": "5.5",
	      "r": "1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18.5",
	      "cy": "18.5",
	      "r": "1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "15.5",
	      "r": "4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AlarmOffIcon = {
	  name: 'AlarmOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-alarm-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.587 7.566a7 7 0 1 0 9.833 9.864m1.35 -2.645a7 7 0 0 0 -8.536 -8.56"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v1h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.261 5.265l-1.011 .735"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4l2.75 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AlarmIcon = {
	  name: 'AlarmIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-alarm",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "13",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "12 10 12 13 14 13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "4",
	      "x2": "4.25",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "4",
	      "x2": "19.75",
	      "y2": "6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AlbumIcon = {
	  name: 'AlbumIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-album",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4v7l2 -2l2 2v-7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AlertCircleIcon = {
	  name: 'AlertCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-alert-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12.01",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AlertOctagonIcon = {
	  name: 'AlertOctagonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-alert-octagon",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.7 3h6.6c.3 0 .5 .1 .7 .3l4.7 4.7c.2 .2 .3 .4 .3 .7v6.6c0 .3 -.1 .5 -.3 .7l-4.7 4.7c-.2 .2 -.4 .3 -.7 .3h-6.6c-.3 0 -.5 -.1 -.7 -.3l-4.7 -4.7c-.2 -.2 -.3 -.4 -.3 -.7v-6.6c0 -.3 .1 -.5 .3 -.7l4.7 -4.7c.2 -.2 .4 -.3 .7 -.3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12.01",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AlertTriangleIcon = {
	  name: 'AlertTriangleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-alert-triangle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9v2m0 4v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AlienIcon = {
	  name: 'AlienIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-alien",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 17a2.5 2.5 0 0 0 2 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3c-4.664 0 -7.396 2.331 -7.862 5.595a11.816 11.816 0 0 0 2 8.592a10.777 10.777 0 0 0 3.199 3.064c1.666 1 3.664 1 5.33 0a10.777 10.777 0 0 0 3.199 -3.064a11.89 11.89 0 0 0 2 -8.592c-.466 -3.265 -3.198 -5.595 -7.862 -5.595z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "11",
	      "x2": "10",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "11",
	      "x2": "14",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AlignCenterIcon = {
	  name: 'AlignCenterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-align-center",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "18",
	      "x2": "18",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AlignJustifiedIcon = {
	  name: 'AlignJustifiedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-align-justified",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "18",
	      "x2": "16",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AlignLeftIcon = {
	  name: 'AlignLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-align-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "14",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "18",
	      "x2": "18",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AlignRightIcon = {
	  name: 'AlignRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-align-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "18",
	      "x2": "20",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AmbulanceIcon = {
	  name: 'AmbulanceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ambulance",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 17h-2v-11a1 1 0 0 1 1 -1h9v12m-4 0h6m4 0h2v-6h-8m0 -5h5l3 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10h4m-2 -2v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AnchorIcon = {
	  name: 'AnchorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-anchor",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9v12m-8 -8a8 8 0 0 0 16 0m1 0h-2m-14 0h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "6",
	      "r": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AngleIcon = {
	  name: 'AngleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-angle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 19h-18l9 -15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.615 15.171h.015"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.515 11.771h.015"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.715 8.671h.015"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.415 5.971h.015"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AntennaBars1Icon = {
	  name: 'AntennaBars1Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-antenna-bars-1",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "18",
	      "x2": "6",
	      "y2": "18.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "18",
	      "x2": "10",
	      "y2": "18.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "18",
	      "x2": "14",
	      "y2": "18.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "18",
	      "x2": "18",
	      "y2": "18.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AntennaBars2Icon = {
	  name: 'AntennaBars2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-antenna-bars-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "18",
	      "x2": "6",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "18",
	      "x2": "10",
	      "y2": "18.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "18",
	      "x2": "14",
	      "y2": "18.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "18",
	      "x2": "18",
	      "y2": "18.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AntennaBars3Icon = {
	  name: 'AntennaBars3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-antenna-bars-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "18",
	      "x2": "6",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "18",
	      "x2": "10",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "18",
	      "x2": "14",
	      "y2": "18.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "18",
	      "x2": "18",
	      "y2": "18.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AntennaBars4Icon = {
	  name: 'AntennaBars4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-antenna-bars-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "18",
	      "x2": "6",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "18",
	      "x2": "10",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "18",
	      "x2": "14",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "18",
	      "x2": "18",
	      "y2": "18.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AntennaBars5Icon = {
	  name: 'AntennaBars5Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-antenna-bars-5",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "18",
	      "x2": "6",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "18",
	      "x2": "10",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "18",
	      "x2": "14",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "18",
	      "x2": "18",
	      "y2": "6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AntennaBarsOffIcon = {
	  name: 'AntennaBarsOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-antenna-bars-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 18v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 18v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 18v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 14v-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AntennaIcon = {
	  name: 'AntennaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-antenna",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4.5v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5v16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 5.5v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 8h-16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ApertureIcon = {
	  name: 'ApertureIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-aperture",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3.6",
	      "y1": "15",
	      "x2": "14.15",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3.6",
	      "y1": "15",
	      "x2": "14.15",
	      "y2": "15",
	      "transform": "rotate(72 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3.6",
	      "y1": "15",
	      "x2": "14.15",
	      "y2": "15",
	      "transform": "rotate(144 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3.6",
	      "y1": "15",
	      "x2": "14.15",
	      "y2": "15",
	      "transform": "rotate(216 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3.6",
	      "y1": "15",
	      "x2": "14.15",
	      "y2": "15",
	      "transform": "rotate(288 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ApiAppOffIcon = {
	  name: 'ApiAppOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-api-app-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15h-6.5a2.5 2.5 0 1 1 0 -5h.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 15v3.5a2.5 2.5 0 1 1 -5 0v-.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 9h5.5a2.5 2.5 0 1 1 0 5h-.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12v-3m.042 -3.957a2.5 2.5 0 0 1 4.958 .457v.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ApiAppIcon = {
	  name: 'ApiAppIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-api-app",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15h-6.5a2.5 2.5 0 1 1 0 -5h.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 12v6.5a2.5 2.5 0 1 1 -5 0v-.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9h6.5a2.5 2.5 0 1 1 0 5h-.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12v-6.5a2.5 2.5 0 0 1 5 0v.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ApiIcon = {
	  name: 'ApiIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-api",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 13h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16v-8h3a2 2 0 0 1 2 2v1a2 2 0 0 1 -2 2h-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 8v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 16v-5.5a2.5 2.5 0 0 0 -5 0v5.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AppWindowIcon = {
	  name: 'AppWindowIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-app-window",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 8h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 8h.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AppleIcon = {
	  name: 'AppleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-apple",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11v-6a2 2 0 0 1 2 -2h2v1a2 2 0 0 1 -2 2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10.5c1.333 .667 2.667 .667 4 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AppsOffIcon = {
	  name: 'AppsOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-apps-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4h1a1 1 0 0 1 1 1v1m-.29 3.704a0.997 .997 0 0 1 -.71 .296h-4a1 1 0 0 1 -1 -1v-4c0 -.276 .111 -.525 .292 -.706"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 14h1a1 1 0 0 1 1 1v1m-.29 3.704a0.997 .997 0 0 1 -.71 .296h-4a1 1 0 0 1 -1 -1v-4c0 -.276 .111 -.525 .292 -.706"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "14",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 7h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AppsIcon = {
	  name: 'AppsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-apps",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "14",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "14",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "7",
	      "x2": "20",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "4",
	      "x2": "17",
	      "y2": "10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArchiveOffIcon = {
	  name: 'ArchiveOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-archive-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4h11a2 2 0 1 1 0 4h-7m-4 0h-3a2 2 0 0 1 -.826 -3.822"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 8v10a2 2 0 0 0 2 2h10a2 2 0 0 0 1.824 -1.18m.176 -3.82v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArchiveIcon = {
	  name: 'ArchiveIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-archive",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "4",
	      "width": "18",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 8v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "12",
	      "x2": "14",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Armchair2Icon = {
	  name: 'Armchair2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-armchair-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 10v-4a3 3 0 0 1 3 -3h8a3 3 0 0 1 3 3v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 15v-2a3 3 0 1 1 3 3v3h-14v-3a3 3 0 1 1 3 -3v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 19v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 19v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArmchairIcon = {
	  name: 'ArmchairIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-armchair",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 11a2 2 0 0 1 2 2v2h10v-2a2 2 0 1 1 4 0v4a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-4a2 2 0 0 1 2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 11v-5a3 3 0 0 1 3 -3h8a3 3 0 0 1 3 3v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 19v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 19v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowAutofitContentIcon = {
	  name: 'ArrowAutofitContentIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-autofit-content",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4l-3 3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 4l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "14",
	      "width": "16",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 7h-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 7h-7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowAutofitDownIcon = {
	  name: 'ArrowAutofitDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-autofit-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20h-6a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 4v17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 18l3 3l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowAutofitHeightIcon = {
	  name: 'ArrowAutofitHeightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-autofit-height",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20h-6a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 14v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 3v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 18l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 6l3 -3l3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowAutofitLeftIcon = {
	  name: 'ArrowAutofitLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-autofit-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v-6a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 18h-17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15l-3 3l3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowAutofitRightIcon = {
	  name: 'ArrowAutofitRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-autofit-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12v-6a2 2 0 0 0 -2 -2h-12a2 2 0 0 0 -2 2v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18h17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowAutofitUpIcon = {
	  name: 'ArrowAutofitUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-autofit-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4h-6a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20v-17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 6l3 -3l3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowAutofitWidthIcon = {
	  name: 'ArrowAutofitWidthIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-autofit-width",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v-6a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 18h-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 18h-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15l-3 3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBackUpIcon = {
	  name: 'ArrowBackUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-back-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 13l-4 -4l4 -4m-4 4h11a4 4 0 0 1 0 8h-1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBackIcon = {
	  name: 'ArrowBackIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-back",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 11l-4 4l4 4m-4 -4h11a4 4 0 0 0 0 -8h-1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBarDownIcon = {
	  name: 'ArrowBarDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bar-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "12",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "16",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "8",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBarLeftIcon = {
	  name: 'ArrowBarLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bar-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "14",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "8",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "8",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBarRightIcon = {
	  name: 'ArrowBarRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bar-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "10",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "16",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "16",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "4",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBarToDownIcon = {
	  name: 'ArrowBarToDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bar-to-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14",
	      "x2": "12",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14",
	      "x2": "16",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14",
	      "x2": "8",
	      "y2": "10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBarToLeftIcon = {
	  name: 'ArrowBarToLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bar-to-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "12",
	      "x2": "14",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "12",
	      "x2": "14",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "4",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBarToRightIcon = {
	  name: 'ArrowBarToRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bar-to-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "12",
	      "x2": "4",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "12",
	      "x2": "10",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "12",
	      "x2": "10",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBarToUpIcon = {
	  name: 'ArrowBarToUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bar-to-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "10",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "10",
	      "x2": "16",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "10",
	      "x2": "8",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBarUpIcon = {
	  name: 'ArrowBarUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bar-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "16",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "8",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBearLeft2Icon = {
	  name: 'ArrowBearLeft2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bear-left-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 3h-5v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 3l7.536 7.536a5 5 0 0 1 1.464 3.534v6.93"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 5l-4.5 4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBearLeftIcon = {
	  name: 'ArrowBearLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bear-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 3h-5v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 3l7.536 7.536a5 5 0 0 1 1.464 3.534v6.93"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBearRight2Icon = {
	  name: 'ArrowBearRight2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bear-right-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3h5v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 3l-7.536 7.536a5 5 0 0 0 -1.464 3.534v6.93"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 5l4.5 4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBearRightIcon = {
	  name: 'ArrowBearRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bear-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3h5v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3l-7.536 7.536a5 5 0 0 0 -1.464 3.534v6.93"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigDownLineIcon = {
	  name: 'ArrowBigDownLineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-down-line",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 12h3.586a1 1 0 0 1 .707 1.707l-6.586 6.586a1 1 0 0 1 -1.414 0l-6.586 -6.586a1 1 0 0 1 .707 -1.707h3.586v-6h6v6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3h-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigDownLinesIcon = {
	  name: 'ArrowBigDownLinesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-down-lines",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 12h3.586a1 1 0 0 1 .707 1.707l-6.586 6.586a1 1 0 0 1 -1.414 0l-6.586 -6.586a1 1 0 0 1 .707 -1.707h3.586v-3h6v3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3h-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 6h-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigDownIcon = {
	  name: 'ArrowBigDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 4v8h3.586a1 1 0 0 1 .707 1.707l-6.586 6.586a1 1 0 0 1 -1.414 0l-6.586 -6.586a1 1 0 0 1 .707 -1.707h3.586v-8a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigLeftLineIcon = {
	  name: 'ArrowBigLeftLineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-left-line",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15v3.586a1 1 0 0 1 -1.707 .707l-6.586 -6.586a1 1 0 0 1 0 -1.414l6.586 -6.586a1 1 0 0 1 1.707 .707v3.586h6v6h-6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 15v-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigLeftLinesIcon = {
	  name: 'ArrowBigLeftLinesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-left-lines",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15v3.586a1 1 0 0 1 -1.707 .707l-6.586 -6.586a1 1 0 0 1 0 -1.414l6.586 -6.586a1 1 0 0 1 1.707 .707v3.586h3v6h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 15v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15v-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigLeftIcon = {
	  name: 'ArrowBigLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 15h-8v3.586a1 1 0 0 1 -1.707 .707l-6.586 -6.586a1 1 0 0 1 0 -1.414l6.586 -6.586a1 1 0 0 1 1.707 .707v3.586h8a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigRightLineIcon = {
	  name: 'ArrowBigRightLineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-right-line",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9v-3.586a1 1 0 0 1 1.707 -.707l6.586 6.586a1 1 0 0 1 0 1.414l-6.586 6.586a1 1 0 0 1 -1.707 -.707v-3.586h-6v-6h6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 9v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigRightLinesIcon = {
	  name: 'ArrowBigRightLinesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-right-lines",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9v-3.586a1 1 0 0 1 1.707 -.707l6.586 6.586a1 1 0 0 1 0 1.414l-6.586 6.586a1 1 0 0 1 -1.707 -.707v-3.586h-3v-6h3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 9v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 9v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigRightIcon = {
	  name: 'ArrowBigRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 9h8v-3.586a1 1 0 0 1 1.707 -.707l6.586 6.586a1 1 0 0 1 0 1.414l-6.586 6.586a1 1 0 0 1 -1.707 -.707v-3.586h-8a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigTopIcon = {
	  name: 'ArrowBigTopIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-top",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 20v-8h-3.586a1 1 0 0 1 -.707 -1.707l6.586 -6.586a1 1 0 0 1 1.414 0l6.586 6.586a1 1 0 0 1 -.707 1.707h-3.586v8a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigUpLineIcon = {
	  name: 'ArrowBigUpLineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-up-line",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12h-3.586a1 1 0 0 1 -.707 -1.707l6.586 -6.586a1 1 0 0 1 1.414 0l6.586 6.586a1 1 0 0 1 -.707 1.707h-3.586v6h-6v-6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 21h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBigUpLinesIcon = {
	  name: 'ArrowBigUpLinesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-big-up-lines",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12h-3.586a1 1 0 0 1 -.707 -1.707l6.586 -6.586a1 1 0 0 1 1.414 0l6.586 6.586a1 1 0 0 1 -.707 1.707h-3.586v3h-6v-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 21h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBottomBarIcon = {
	  name: 'ArrowBottomBarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bottom-bar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 3h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBottomCircleIcon = {
	  name: 'ArrowBottomCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bottom-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBottomSquareIcon = {
	  name: 'ArrowBottomSquareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bottom-square",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4h-4v-4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowBottomTailIcon = {
	  name: 'ArrowBottomTailIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-bottom-tail",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 3l3 3l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowCurveLeftIcon = {
	  name: 'ArrowCurveLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-curve-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 7l-4 -4l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 3v4.394a6.737 6.737 0 0 0 3 5.606a6.737 6.737 0 0 1 3 5.606v2.394"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowCurveRightIcon = {
	  name: 'ArrowCurveRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-curve-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 7l4 -4l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4.394a6.737 6.737 0 0 1 -3 5.606a6.737 6.737 0 0 0 -3 5.606v2.394"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowDownCircleIcon = {
	  name: 'ArrowDownCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-down-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowDownLeftCircleIcon = {
	  name: 'ArrowDownLeftCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-down-left-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "9",
	      "x2": "9",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "15 15 9 15 9 9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowDownLeftIcon = {
	  name: 'ArrowDownLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-down-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "7",
	      "x2": "7",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 17 7 17 7 8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowDownRightCircleIcon = {
	  name: 'ArrowDownRightCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-down-right-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "15",
	      "x2": "9",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "15 9 15 15 9 9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowDownRightIcon = {
	  name: 'ArrowDownRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-down-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "7",
	      "x2": "17",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "17 8 17 17 8 17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowDownIcon = {
	  name: 'ArrowDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "13",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "13",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowForkIcon = {
	  name: 'ArrowForkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-fork",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 3h5v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 3h-5v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 3l-7.536 7.536a5 5 0 0 0 -1.464 3.534v6.93"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l7.536 7.536a5 5 0 0 1 1.464 3.534v.93"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowForwardUpIcon = {
	  name: 'ArrowForwardUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-forward-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 13l4 -4l-4 -4m4 4h-11a4 4 0 0 0 0 8h1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowForwardIcon = {
	  name: 'ArrowForwardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-forward",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 11l4 4l-4 4m4 -4h-11a4 4 0 0 1 0 -8h1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowLeftBarIcon = {
	  name: 'ArrowLeftBarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-left-bar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12h-18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 9l-3 3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 9v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowLeftCircleIcon = {
	  name: 'ArrowLeftCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-left-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12h-14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 9l-3 3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowLeftRightIcon = {
	  name: 'ArrowLeftRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-left-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 13l4 -4l-4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 13l-4 -4l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14a5 5 0 0 1 5 -5h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19v-5a5 5 0 0 0 -5 -5h-4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowLeftSquareIcon = {
	  name: 'ArrowLeftSquareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-left-square",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12h-14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 9l-3 3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 14h-4v-4h4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowLeftTailIcon = {
	  name: 'ArrowLeftTailIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-left-tail",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 12h-15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 9l-3 3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 9l-3 3l3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowLeftIcon = {
	  name: 'ArrowLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "11",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "11",
	      "y2": "6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowLoopLeft2Icon = {
	  name: 'ArrowLoopLeft2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-loop-left-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 21v-6m0 -6v-1a4 4 0 1 1 4 4h-13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16l-4 -4l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowLoopLeftIcon = {
	  name: 'ArrowLoopLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-loop-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 21v-13a4 4 0 1 1 4 4h-13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16l-4 -4l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowLoopRight2Icon = {
	  name: 'ArrowLoopRight2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-loop-right-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-6m0 -6v-1a4 4 0 1 0 -4 4h13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 16l4 -4l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowLoopRightIcon = {
	  name: 'ArrowLoopRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-loop-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-13a4 4 0 1 0 -4 4h13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 16l4 -4l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowMergeIcon = {
	  name: 'ArrowMergeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-merge",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 7l4 -4l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v5.394a6.737 6.737 0 0 1 -3 5.606a6.737 6.737 0 0 0 -3 5.606v1.394"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v5.394a6.737 6.737 0 0 0 3 5.606a6.737 6.737 0 0 1 3 5.606v1.394"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowNarrowDownIcon = {
	  name: 'ArrowNarrowDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-narrow-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "15",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "15",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowNarrowLeftIcon = {
	  name: 'ArrowNarrowLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-narrow-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "9",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "9",
	      "y2": "8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowNarrowRightIcon = {
	  name: 'ArrowNarrowRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-narrow-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "16",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "8",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowNarrowUpIcon = {
	  name: 'ArrowNarrowUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-narrow-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "9",
	      "x2": "12",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "9",
	      "x2": "12",
	      "y2": "5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRampLeft2Icon = {
	  name: 'ArrowRampLeft2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-ramp-left-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 3v8.707"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 14l-4 -4l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 21c0 -6.075 -4.925 -11 -11 -11h-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRampLeft3Icon = {
	  name: 'ArrowRampLeft3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-ramp-left-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 3v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16l-4 -4l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 21v-6a3 3 0 0 0 -3 -3h-11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRampLeftIcon = {
	  name: 'ArrowRampLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-ramp-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "3",
	      "x2": "17",
	      "y2": "11.707"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 7l4 -4l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 14l-4 -4l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21a11 11 0 0 0 -11 -11h-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRampRight2Icon = {
	  name: 'ArrowRampRight2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-ramp-right-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 3v8.707"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 14l4 -4l-4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21c0 -6.075 4.925 -11 11 -11h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRampRight3Icon = {
	  name: 'ArrowRampRight3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-ramp-right-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 3v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16l4 -4l-4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21v-6a3 3 0 0 1 3 -3h11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRampRightIcon = {
	  name: 'ArrowRampRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-ramp-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "3",
	      "x2": "7",
	      "y2": "11.707"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7l-4 -4l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 14l4 -4l-4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 21a11 11 0 0 1 11 -11h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRightBarIcon = {
	  name: 'ArrowRightBarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-right-bar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 9v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRightCircleIcon = {
	  name: 'ArrowRightCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-right-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12h14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRightSquareIcon = {
	  name: 'ArrowRightSquareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-right-square",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10h4v4h-4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRightTailIcon = {
	  name: 'ArrowRightTailIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-right-tail",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 15l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRightIcon = {
	  name: 'ArrowRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "18",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "6",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRotaryFirstLeftIcon = {
	  name: 'ArrowRotaryFirstLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-rotary-first-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "matrix(-1 0 0 1 32 0)",
	      "cx": "16",
	      "cy": "7",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 10v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.5 9.5l-8.5 8.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 18h-5v-5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRotaryFirstRightIcon = {
	  name: 'ArrowRotaryFirstRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-rotary-first-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "7",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 9.5l8.5 8.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 18h5v-5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRotaryLastLeftIcon = {
	  name: 'ArrowRotaryLastLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-rotary-last-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "matrix(-1 0 0 1 30 0)",
	      "cx": "15",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 15v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.5 9.5l-6.5 -6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 3h-5v5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRotaryLastRightIcon = {
	  name: 'ArrowRotaryLastRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-rotary-last-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.5 9.5l6.5 -6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 3h5v5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRotaryLeftIcon = {
	  name: 'ArrowRotaryLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-rotary-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "matrix(-1 0 0 1 32 0)",
	      "cx": "16",
	      "cy": "7",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 10v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 7h-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 11l-4 -4l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRotaryRightIcon = {
	  name: 'ArrowRotaryRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-rotary-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "7",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 11l4 -4l-4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7h10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowRotaryStraightIcon = {
	  name: 'ArrowRotaryStraightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-rotary-straight",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "13",
	      "cy": "13",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 16v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 3v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 7l4 -4l4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowSharpTurnLeftIcon = {
	  name: 'ArrowSharpTurnLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-sharp-turn-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 18v-11.31a0.7 .7 0 0 0 -1.195 -.495l-9.805 9.805"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 16h-5v-5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowSharpTurnRightIcon = {
	  name: 'ArrowSharpTurnRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-sharp-turn-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18v-11.31a0.7 .7 0 0 1 1.195 -.495l9.805 9.805"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 16h5v-5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowTopBarIcon = {
	  name: 'ArrowTopBarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-top-bar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "21",
	      "x2": "12",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 6l-3 -3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "21",
	      "x2": "15",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowTopCircleIcon = {
	  name: 'ArrowTopCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-top-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "17",
	      "x2": "12",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 6l-3 -3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowTopSquareIcon = {
	  name: 'ArrowTopSquareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-top-square",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "17",
	      "x2": "12",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 6l-3 -3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 21v-4h4v4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowTopTailIcon = {
	  name: 'ArrowTopTailIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-top-tail",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18",
	      "x2": "12",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 6l-3 -3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 21l-3 -3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowUpCircleIcon = {
	  name: 'ArrowUpCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-up-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "8",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "12",
	      "y2": "8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowUpLeftCircleIcon = {
	  name: 'ArrowUpLeftCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-up-left-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "9",
	      "x2": "15",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "15 9 9 9 9 15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowUpLeftIcon = {
	  name: 'ArrowUpLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-up-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "7",
	      "x2": "17",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 7 7 7 7 16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowUpRightCircleIcon = {
	  name: 'ArrowUpRightCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-up-right-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "9",
	      "x2": "9",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "15 15 15 9 9 9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowUpRightIcon = {
	  name: 'ArrowUpRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-up-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "7",
	      "x2": "7",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 7 17 7 17 16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowUpIcon = {
	  name: 'ArrowUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "11",
	      "x2": "12",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "11",
	      "x2": "12",
	      "y2": "5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowWaveLeftDownIcon = {
	  name: 'ArrowWaveLeftDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-wave-left-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 13.998h-4v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 11.998c-.887 1.284 -2.48 2.033 -4 2c-1.52 .033 -3.113 -.716 -4 -2s-2.48 -2.033 -4 -2c-1.52 -.033 -3 1 -4 2l-2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowWaveLeftUpIcon = {
	  name: 'ArrowWaveLeftUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-wave-left-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 9.996h-4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 11.996c-.887 -1.285 -2.48 -2.033 -4 -2c-1.52 -.033 -3.113 .715 -4 2c-.887 1.284 -2.48 2.033 -4 2c-1.52 .033 -3 -1 -4 -2l-2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowWaveRightDownIcon = {
	  name: 'ArrowWaveRightDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-wave-right-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 13.998h4v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 11.998c.887 1.284 2.48 2.033 4 2c1.52 .033 3.113 -.716 4 -2s2.48 -2.033 4 -2c1.52 -.033 3 1 4 2l2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowWaveRightUpIcon = {
	  name: 'ArrowWaveRightUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrow-wave-right-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 10h4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12c.887 -1.284 2.48 -2.033 4 -2c1.52 -.033 3.113 .716 4 2s2.48 2.033 4 2c1.52 .033 3 -1 4 -2l2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsCrossIcon = {
	  name: 'ArrowsCrossIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-cross",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 9l5 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20l5 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h4v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4l16 16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsDiagonal2Icon = {
	  name: 'ArrowsDiagonal2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-diagonal-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 20 20 20 20 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "14",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 4 4 4 4 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "10",
	      "y2": "10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsDiagonalMinimize2Icon = {
	  name: 'ArrowsDiagonalMinimize2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-diagonal-minimize-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 10h-4v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4l-6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 14h4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14l-6 6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsDiagonalMinimizeIcon = {
	  name: 'ArrowsDiagonalMinimizeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-diagonal-minimize",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10h4v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4l6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 14h-4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 14l6 6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsDiagonalIcon = {
	  name: 'ArrowsDiagonalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-diagonal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 4 20 4 20 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "10",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 20 4 20 4 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "10",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsDoubleNeSwIcon = {
	  name: 'ArrowsDoubleNeSwIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-double-ne-sw",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 14l11 -11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 3h4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 17v4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 10l-11 11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsDoubleNwSeIcon = {
	  name: 'ArrowsDoubleNwSeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-double-nw-se",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 21l-11 -11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 14v-4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 14h4v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "3",
	      "x2": "21",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsDoubleSeNwIcon = {
	  name: 'ArrowsDoubleSeNwIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-double-se-nw",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "10",
	      "x2": "14",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 17v4h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3h-4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 14l-11 -11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsDoubleSwNeIcon = {
	  name: 'ArrowsDoubleSwNeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-double-sw-ne",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3l-11 11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10v4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 10h4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 21l11 -11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsDownUpIcon = {
	  name: 'ArrowsDownUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-down-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "3",
	      "x2": "17",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 18l-3 3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "21",
	      "x2": "7",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 6l-3 -3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsDownIcon = {
	  name: 'ArrowsDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "21",
	      "x2": "7",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 18l-3 3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "21",
	      "x2": "17",
	      "y2": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsHorizontalIcon = {
	  name: 'ArrowsHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 8 3 12 7 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "17 8 21 12 17 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsJoin2Icon = {
	  name: 'ArrowsJoin2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-join-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7h1.948c1.913 0 3.705 .933 4.802 2.5a5.861 5.861 0 0 0 4.802 2.5h6.448"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17h1.95a5.854 5.854 0 0 0 4.798 -2.5a5.854 5.854 0 0 1 4.798 -2.5h5.454"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l3 -3l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsJoinIcon = {
	  name: 'ArrowsJoinIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-join",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7h5l3.5 5h9.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17h5l3.495 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l3 -3l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsLeftDownIcon = {
	  name: 'ArrowsLeftDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-left-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 3l-4 4l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7h11a3 3 0 0 1 3 3v11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 17l4 4l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsLeftRightIcon = {
	  name: 'ArrowsLeftRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-left-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "17",
	      "x2": "3",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10l-3 -3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "7",
	      "x2": "21",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20l3 -3l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsLeftIcon = {
	  name: 'ArrowsLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "7",
	      "x2": "21",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 20l-3 -3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4l-3 3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "17",
	      "x2": "21",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsMaximizeIcon = {
	  name: 'ArrowsMaximizeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-maximize",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 4 20 4 20 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "10",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 20 4 20 4 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "10",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 20 20 20 20 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "14",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 4 4 4 4 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "10",
	      "y2": "10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsMinimizeIcon = {
	  name: 'ArrowsMinimizeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-minimize",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "5 9 9 9 9 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "9",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "5 15 9 15 9 19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "9",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "19 9 15 9 15 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "9",
	      "x2": "21",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "19 15 15 15 15 19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "15",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsRandomIcon = {
	  name: 'ArrowsRandomIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-random",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 21.004h-4v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 21.004l5 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 9.504l-3.5 -2l2 -3.504"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7.504l6.83 -1.87"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16.004l4 -1l1 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 15.004l-3.5 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 5.004l-.5 4l-4 -.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.5 9.004l-4.5 -5.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsRightDownIcon = {
	  name: 'ArrowsRightDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-right-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17l4 4l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 21v-11a3 3 0 0 1 3 -3h11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 11l4 -4l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsRightLeftIcon = {
	  name: 'ArrowsRightLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-right-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "7",
	      "x2": "3",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 10l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 20l-3 -3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "17",
	      "x2": "21",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsRightIcon = {
	  name: 'ArrowsRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "17",
	      "x2": "3",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 4l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "7",
	      "x2": "3",
	      "y2": "7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsShuffle2Icon = {
	  name: 'ArrowsShuffle2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-shuffle-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 4l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7h3a5 5 0 0 1 5 5a5 5 0 0 0 5 5h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17h3a5 5 0 0 0 5 -5a5 5 0 0 1 5 -5h5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsShuffleIcon = {
	  name: 'ArrowsShuffleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-shuffle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 4l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7h3a5 5 0 0 1 5 5a5 5 0 0 0 5 5h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 7h-5a4.978 4.978 0 0 0 -2.998 .998m-4.002 8.003a4.984 4.984 0 0 1 -3 .999h-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsSortIcon = {
	  name: 'ArrowsSortIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-sort",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 9l4 -4l4 4m-4 -4v14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 15l-4 4l-4 -4m4 4v-14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsSplit2Icon = {
	  name: 'ArrowsSplit2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-split-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 17h-5.397a5 5 0 0 1 -4.096 -2.133l-.514 -.734a5 5 0 0 0 -4.096 -2.133h-3.897"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 7h-5.395a5 5 0 0 0 -4.098 2.135l-.51 .73a5 5 0 0 1 -4.097 2.135h-3.9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 10l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20l3 -3l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsSplitIcon = {
	  name: 'ArrowsSplitIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-split",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 17h-8l-3.5 -5h-6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 7h-8l-3.495 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 10l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20l3 -3l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsUpDownIcon = {
	  name: 'ArrowsUpDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-up-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "3",
	      "x2": "7",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6l-3 -3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 18l-3 3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "21",
	      "x2": "17",
	      "y2": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsUpLeftIcon = {
	  name: 'ArrowsUpLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-up-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 7l-4 -4l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3v11a3 3 0 0 1 -3 3h-11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 13l-4 4l4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsUpRightIcon = {
	  name: 'ArrowsUpRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-up-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21l4 -4l-4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 17h-11a3 3 0 0 1 -3 -3v-11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7l-4 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsUpIcon = {
	  name: 'ArrowsUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "3",
	      "x2": "17",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6l3 -3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 6l-3 -3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "3",
	      "x2": "7",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArrowsVerticalIcon = {
	  name: 'ArrowsVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-arrows-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 7 12 3 16 7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 17 12 21 16 17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArtboardOffIcon = {
	  name: 'ArtboardOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-artboard-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8h3a1 1 0 0 1 1 1v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.716 15.698a0.997 .997 0 0 1 -.716 .302h-6a1 1 0 0 1 -1 -1v-6c0 -.273 .11 -.52 .287 -.7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 8h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 16h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 3v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 3v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 8h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 16h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 20v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ArtboardIcon = {
	  name: 'ArtboardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-artboard",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "8",
	      "width": "8",
	      "height": "8",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "8",
	      "x2": "4",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "16",
	      "x2": "4",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "3",
	      "x2": "8",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "3",
	      "x2": "16",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "8",
	      "x2": "21",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "16",
	      "x2": "21",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "20",
	      "x2": "8",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "20",
	      "x2": "16",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AspectRatioOffIcon = {
	  name: 'AspectRatioOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-aspect-ratio-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h10a2 2 0 0 1 2 2v10m-2 2h-14a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12v-3h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12v1m-2 2h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AspectRatioIcon = {
	  name: 'AspectRatioIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-aspect-ratio",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12v-3h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12v3h-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AsteriskSimpleIcon = {
	  name: 'AsteriskSimpleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-asterisk-simple",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v-9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-9 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l9 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l6 8.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-6 8.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AsteriskIcon = {
	  name: 'AsteriskIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-asterisk",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l8 -4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-8 -4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l8 4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-8 4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AtOffIcon = {
	  name: 'AtOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-at-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.174 9.17a4 4 0 0 0 5.646 5.668m1.18 -2.838a4 4 0 0 0 -4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.695 15.697a2.5 2.5 0 0 0 1.305 -2.197v-1.5a9 9 0 0 0 -13.055 -8.047m-2.322 1.683a9 9 0 0 0 9.877 14.644"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AtIcon = {
	  name: 'AtIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-at",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 12v1.5a2.5 2.5 0 0 0 5 0v-1.5a9 9 0 1 0 -5.5 8.28"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Atom2Icon = {
	  name: 'Atom2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-atom-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "21",
	      "x2": "12",
	      "y2": "21.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "9",
	      "x2": "3",
	      "y2": "9.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "9",
	      "x2": "21",
	      "y2": "9.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 20.1a9 9 0 0 1 -5 -7.1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20.1a9 9 0 0 0 5 -7.1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.2 5a9 9 0 0 1 11.4 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AtomIcon = {
	  name: 'AtomIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-atom",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 2a4 10 0 0 0 -4 10a4 10 0 0 0 4 10a4 10 0 0 0 4 -10a4 10 0 0 0 -4 -10",
	      "transform": "rotate(45 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 2a4 10 0 0 0 -4 10a4 10 0 0 0 4 10a4 10 0 0 0 4 -10a4 10 0 0 0 -4 -10",
	      "transform": "rotate(-45 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AugmentedRealityIcon = {
	  name: 'AugmentedRealityIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-augmented-reality",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v-2a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v2a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12.5l4 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10l4 2.5v4.5l4 -2.5v-4.5l-4 -2.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10v4.5l4 2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AwardIcon = {
	  name: 'AwardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-award",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "9",
	      "r": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "9 14.2 9 21 12 19 15 21 15 14.2",
	      "transform": "rotate(-30 12 9)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "9 14.2 9 21 12 19 15 21 15 14.2",
	      "transform": "rotate(30 12 9)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AxeIcon = {
	  name: 'AxeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-axe",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 9l7.383 7.418c.823 .82 .823 2.148 0 2.967a2.11 2.11 0 0 1 -2.976 0l-7.407 -7.385"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.66 15.66l-3.32 -3.32a1.25 1.25 0 0 1 .42 -2.044l3.24 -1.296l6 -6l3 3l-6 6l-1.296 3.24a1.25 1.25 0 0 1 -2.044 .42z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AxisXIcon = {
	  name: 'AxisXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-axis-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 13v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 9v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 5v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 20l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 17h16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var AxisYIcon = {
	  name: 'AxisYIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-axis-y",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 20h-.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 20h-.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 20h-.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 7l3 -3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 20v-16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BabyCarriageIcon = {
	  name: 'BabyCarriageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-baby-carriage",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 5h2.5l1.632 4.897a6 6 0 0 0 5.693 4.103h2.675a5.5 5.5 0 0 0 0 -11h-.5v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 9h14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17l1 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 14l1 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BackhoeIcon = {
	  name: 'BackhoeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-backhoe",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "4",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "13",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "19",
	      "x2": "4",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "15",
	      "x2": "13",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12v-5h2a3 3 0 0 1 3 3v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 15v-2a1 1 0 0 1 1 -1h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21.12 9.88l-3.12 -4.88l-5 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21.12 9.88a3 3 0 0 1 -2.12 5.12a3 3 0 0 1 -2.12 -.88l4.24 -4.24z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BackpackIcon = {
	  name: 'BackpackIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-backpack",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7h2a6 6 0 0 1 6 6v6a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1v-6a6 6 0 0 1 6 -6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 7v-1a2 2 0 1 1 4 0v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 15h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BackspaceIcon = {
	  name: 'BackspaceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-backspace",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 6a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-11l-5 -5a1.5 1.5 0 0 1 0 -2l5 -5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BadgeIcon = {
	  name: 'BadgeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-badge",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v-13l-5 3l-5 -3v13l5 3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BadgesIcon = {
	  name: 'BadgesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-badges",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v-4l-5 3l-5 -3v4l5 3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 8v-4l-5 3l-5 -3v4l5 3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BallAmericanFootballIcon = {
	  name: 'BallAmericanFootballIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ball-american-football",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "9",
	      "x2": "9",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "12",
	      "x2": "12",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "10",
	      "x2": "14",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 21a5 5 0 0 0 -5 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 3c-7.18 0 -13 5.82 -13 13a5 5 0 0 0 5 5c7.18 0 13 -5.82 13 -13a5 5 0 0 0 -5 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 3a5 5 0 0 0 5 5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BallBaseballIcon = {
	  name: 'BallBaseballIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ball-baseball",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.636 18.364a9 9 0 1 0 12.728 -12.728a9 9 0 0 0 -12.728 12.728z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.495 3.02a9 9 0 0 1 -9.475 9.475"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.98 11.505a9 9 0 0 0 -9.475 9.475"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 9l2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 13l2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7l2 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 11l1 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 11l1 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 16l2 1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BallBasketballIcon = {
	  name: 'BallBasketballIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ball-basketball",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5.65",
	      "y1": "5.65",
	      "x2": "18.35",
	      "y2": "18.35"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5.65",
	      "y1": "18.35",
	      "x2": "18.35",
	      "y2": "5.65"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a9 9 0 0 0 9 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12a9 9 0 0 1 9 9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BallBowlingIcon = {
	  name: 'BallBowlingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ball-bowling",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "9",
	      "x2": "11",
	      "y2": "9.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "8",
	      "x2": "15",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "12",
	      "x2": "14",
	      "y2": "12.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BallFootballOffIcon = {
	  name: 'BallFootballOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ball-football-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.041 16.046a9 9 0 0 0 -12.084 -12.09m-2.323 1.683a9 9 0 0 0 12.726 12.73"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7l4.755 3.455l-.566 1.743l-.98 3.014l-.209 .788h-6l-1.755 -5.545l1.86 -1.351l2.313 -1.681z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "16",
	      "x2": "17.5",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.755 10.455l3.745 -1.455"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.061 16.045l-2.561 2.955"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.245 10.455l-3.745 -1.455"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BallFootballIcon = {
	  name: 'BallFootballIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ball-football",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7l4.76 3.45l-1.76 5.55h-6l-1.76 -5.55z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m3 13l2.5 3m-.74 -8.55l3.74 -1.45m-11.44 7.05l-2.56 2.95m.74 -8.55l-3.74 -1.45"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BallTennisIcon = {
	  name: 'BallTennisIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ball-tennis",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 5.3a9 9 0 0 1 0 13.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 5.3a9 9 0 0 0 0 13.4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BallVolleyballIcon = {
	  name: 'BallVolleyballIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ball-volleyball",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12a8 8 0 0 0 8 4m-12.5 -2.5a12 12 0 0 0 8.5 6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12a8 8 0 0 0 8 4m-12.5 -2.5a12 12 0 0 0 8.5 6.5",
	      "transform": "rotate(120 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12a8 8 0 0 0 8 4m-12.5 -2.5a12 12 0 0 0 8.5 6.5",
	      "transform": "rotate(240 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BallonIcon = {
	  name: 'BallonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ballon",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 8a2 2 0 0 0 -2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 8a6 6 0 1 1 12 0c0 4.97 -2.686 9 -6 9s-6 -4.03 -6 -9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v1a2 2 0 0 1 -2 2h-3a2 2 0 0 0 -2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BallpenOffIcon = {
	  name: 'BallpenOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ballpen-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 6l7 7l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10l-4.172 4.172a2.828 2.828 0 1 0 4 4l4.172 -4.172"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 12l4.414 -4.414a2 2 0 0 0 0 -2.829l-1.171 -1.171a2 2 0 0 0 -2.829 0l-4.414 4.414"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20l1.768 -1.768"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BallpenIcon = {
	  name: 'BallpenIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ballpen",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 6l7 7l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.828 18.172a2.828 2.828 0 0 0 4 0l10.586 -10.586a2 2 0 0 0 0 -2.829l-1.171 -1.171a2 2 0 0 0 -2.829 0l-10.586 10.586a2.828 2.828 0 0 0 0 4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20l1.768 -1.768"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BanIcon = {
	  name: 'BanIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ban",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5.7",
	      "y1": "5.7",
	      "x2": "18.3",
	      "y2": "18.3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BandageIcon = {
	  name: 'BandageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bandage",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "12",
	      "x2": "14",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "12",
	      "x2": "10",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "10",
	      "x2": "12",
	      "y2": "10.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14",
	      "x2": "12",
	      "y2": "14.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.5 12.5l8 -8a4.94 4.94 0 0 1 7 7l-8 8a4.94 4.94 0 0 1 -7 -7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BarbellOffIcon = {
	  name: 'BarbellOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-barbell-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 12h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 8h-2a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.298 6.288a0.997 .997 0 0 0 -.298 .712v10a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 15v2a1 1 0 0 0 1 1h1c.275 0 .523 -.11 .704 -.29m.296 -3.71v-7a1 1 0 0 0 -1 -1h-1a1 1 0 0 0 -1 1v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 8h2a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 12h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BarbellIcon = {
	  name: 'BarbellIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-barbell",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 12h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 8h-2a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 7v10a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-10a1 1 0 0 0 -1 -1h-1a1 1 0 0 0 -1 1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 7v10a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-10a1 1 0 0 0 -1 -1h-1a1 1 0 0 0 -1 1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 8h2a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 12h-1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BarcodeOffIcon = {
	  name: 'BarcodeOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-barcode-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 7v-1c0 -.552 .224 -1.052 .586 -1.414"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 17v1a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2c.551 0 1.05 -.223 1.412 -.584"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 11h1v2h-1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 11v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 11v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 11v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BarcodeIcon = {
	  name: 'BarcodeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-barcode",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 7v-1a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 17v1a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2a2 2 0 0 0 2 -2v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "11",
	      "width": "1",
	      "height": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "11",
	      "x2": "10",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "11",
	      "width": "1",
	      "height": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "11",
	      "x2": "19",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BarrelIcon = {
	  name: 'BarrelIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-barrel",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.278 4h9.444a2 2 0 0 1 1.841 1.22c.958 2.26 1.437 4.52 1.437 6.78c0 2.26 -.479 4.52 -1.437 6.78a2 2 0 0 1 -1.841 1.22h-9.444a2 2 0 0 1 -1.841 -1.22c-.958 -2.26 -1.437 -4.52 -1.437 -6.78c0 -2.26 .479 -4.52 1.437 -6.78a2 2 0 0 1 1.841 -1.22z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 4c.667 2.667 1 5.333 1 8s-.333 5.333 -1 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4c-.667 2.667 -1 5.333 -1 8s.333 5.333 1 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.5 16h15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.5 8h-15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BarrierBlockOffIcon = {
	  name: 'BarrierBlockOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-barrier-block-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7h8a1 1 0 0 1 1 1v7c0 .27 -.107 .516 -.282 .696"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16h-11a1 1 0 0 1 -1 -1v-7a1 1 0 0 1 1 -1h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 16v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 16l4.244 -4.244"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.745 9.755l2.755 -2.755"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.5 16l1.249 -1.249"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.741 12.759l3.259 -3.259"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 13.5l4.752 -4.752"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 20h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 20h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 7v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BarrierBlockIcon = {
	  name: 'BarrierBlockIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-barrier-block",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "7",
	      "width": "16",
	      "height": "9",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 16v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 16l9 -9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.5 16l6.5 -6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 13.5l6.5 -6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 16v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 20h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 20h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 7v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 7v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BaselineIcon = {
	  name: 'BaselineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-baseline",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16v-8a4 4 0 1 1 8 0v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BasketOffIcon = {
	  name: 'BasketOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-basket-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 10l1.359 -1.63"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.176 6.188l1.824 -2.188l5 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.77 18.757c-.358 .768 -1.027 1.262 -1.77 1.243h-10c-.966 .024 -1.807 -.817 -2 -2l-2 -8h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10h7l-1.397 5.587"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "15",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BasketIcon = {
	  name: 'BasketIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-basket",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 10 12 4 17 10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 10l-2 8a2 2.5 0 0 1 -2 2h-10a2 2.5 0 0 1 -2 -2l-2 -8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "15",
	      "r": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BathIcon = {
	  name: 'BathIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bath",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h16a1 1 0 0 1 1 1v3a4 4 0 0 1 -4 4h-10a4 4 0 0 1 -4 -4v-3a1 1 0 0 1 1 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 12v-7a2 2 0 0 1 2 -2h3v2.25"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21l1 -1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 21l-1 -1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Battery1Icon = {
	  name: 'Battery1Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-battery-1",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 7h11a2 2 0 0 1 2 2v.5a0.5 .5 0 0 0 .5 .5a0.5 .5 0 0 1 .5 .5v3a0.5 .5 0 0 1 -.5 .5a0.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "10",
	      "x2": "7",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Battery2Icon = {
	  name: 'Battery2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-battery-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 7h11a2 2 0 0 1 2 2v.5a0.5 .5 0 0 0 .5 .5a0.5 .5 0 0 1 .5 .5v3a0.5 .5 0 0 1 -.5 .5a0.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "10",
	      "x2": "7",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "10",
	      "x2": "10",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Battery3Icon = {
	  name: 'Battery3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-battery-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 7h11a2 2 0 0 1 2 2v.5a0.5 .5 0 0 0 .5 .5a0.5 .5 0 0 1 .5 .5v3a0.5 .5 0 0 1 -.5 .5a0.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "10",
	      "x2": "7",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "10",
	      "x2": "10",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "10",
	      "x2": "13",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Battery4Icon = {
	  name: 'Battery4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-battery-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 7h11a2 2 0 0 1 2 2v.5a0.5 .5 0 0 0 .5 .5a0.5 .5 0 0 1 .5 .5v3a0.5 .5 0 0 1 -.5 .5a0.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "10",
	      "x2": "7",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "10",
	      "x2": "10",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "10",
	      "x2": "13",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "10",
	      "x2": "16",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BatteryAutomotiveIcon = {
	  name: 'BatteryAutomotiveIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-battery-automotive",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "6",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "4",
	      "x2": "19",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6.5",
	      "y1": "13",
	      "x2": "9.5",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14.5",
	      "y1": "13",
	      "x2": "17.5",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "11.5",
	      "x2": "16",
	      "y2": "14.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BatteryCharging2Icon = {
	  name: 'BatteryCharging2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-battery-charging-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 9a2 2 0 0 1 2 -2h11a2 2 0 0 1 2 2v.5a0.5 .5 0 0 0 .5 .5a0.5 .5 0 0 1 .5 .5v3a0.5 .5 0 0 1 -.5 .5a0.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 15h6v2a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2v-2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 22v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 15v-2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 15v-2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BatteryChargingIcon = {
	  name: 'BatteryChargingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-battery-charging",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 7h1a2 2 0 0 1 2 2v.5a0.5 .5 0 0 0 .5 .5a0.5 .5 0 0 1 .5 .5v3a0.5 .5 0 0 1 -.5 .5a0.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 7h-2a2 2 0 0 0 -2 2v6a2 2 0 0 0 2 2h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8l-2 4h3l-2 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BatteryEcoIcon = {
	  name: 'BatteryEcoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-battery-eco",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 9a2 2 0 0 1 2 -2h11a2 2 0 0 1 2 2v.5a0.5 .5 0 0 0 .5 .5a0.5 .5 0 0 1 .5 .5v3a0.5 .5 0 0 1 -.5 .5a0.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 16.143c0 -2.84 2.09 -5.143 4.667 -5.143h2.333v.857c0 2.84 -2.09 5.143 -4.667 5.143h-2.333v-.857z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 20v-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BatteryOffIcon = {
	  name: 'BatteryOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-battery-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7h6a2 2 0 0 1 2 2v.5a0.5 .5 0 0 0 .5 .5a0.5 .5 0 0 1 .5 .5v3a0.5 .5 0 0 1 -.5 .5a0.5 .5 0 0 0 -.5 .5v.5m-2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BatteryIcon = {
	  name: 'BatteryIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-battery",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 7h11a2 2 0 0 1 2 2v.5a0.5 .5 0 0 0 .5 .5a0.5 .5 0 0 1 .5 .5v3a0.5 .5 0 0 1 -.5 .5a0.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BeachOffIcon = {
	  name: 'BeachOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-beach-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.071 15.102a7.502 7.502 0 0 0 -8.124 1.648"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.27 6.269l9.926 5.731a6 6 0 0 0 -10.32 -6.123"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.732 10c1.658 -2.87 2.225 -5.644 1.268 -6.196c-.957 -.552 -3.075 1.326 -4.732 4.196"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 9l-.739 1.279"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.794 12.82l-.794 1.376"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19.25a2.4 2.4 0 0 1 1 -.25a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 1.135 -.858"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BeachIcon = {
	  name: 'BeachIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-beach",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.553 16.75a7.5 7.5 0 0 0 -10.606 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 3.804a6 6 0 0 0 -8.196 2.196l10.392 6a6 6 0 0 0 -2.196 -8.196z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.732 10c1.658 -2.87 2.225 -5.644 1.268 -6.196c-.957 -.552 -3.075 1.326 -4.732 4.196"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 9l-3 5.196"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19.25a2.4 2.4 0 0 1 1 -.25a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 1 .25"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BedIcon = {
	  name: 'BedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bed",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7v11m0 -4h18m0 4v-8a2 2 0 0 0 -2 -2h-8v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "10",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BeerIcon = {
	  name: 'BeerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-beer",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 20h6v-4.111a8 8 0 0 1 .845 -3.578l.31 -.622a8 8 0 0 0 .845 -3.578v-4.111h-10v4.111a8 8 0 0 0 .845 3.578l.31 .622a8 8 0 0 1 .845 3.578v4.111z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 8h10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BellMinusIcon = {
	  name: 'BellMinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bell-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17v1a3 3 0 0 0 6 0v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "11",
	      "x2": "14",
	      "y2": "11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BellOffIcon = {
	  name: 'BellOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bell-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17h-13a4 4 0 0 0 2 -3v-3a7 7 0 0 1 1.279 -3.716m2.072 -1.934c.209 -.127 .425 -.244 .649 -.35a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17v1a3 3 0 0 0 6 0v-1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BellPlusIcon = {
	  name: 'BellPlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bell-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17v1a3 3 0 0 0 6 0v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "11",
	      "x2": "14",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "12",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BellRinging2Icon = {
	  name: 'BellRinging2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bell-ringing-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.364 4.636a2 2 0 0 1 0 2.828a7 7 0 0 1 -1.414 7.072l-2.122 2.12a4 4 0 0 0 -.707 3.536l-11.313 -11.312a4 4 0 0 0 3.535 -.707l2.121 -2.123a7 7 0 0 1 7.072 -1.414a2 2 0 0 1 2.828 0z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.343 12.414l-.707 .707a3 3 0 0 0 4.243 4.243l.707 -.707"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BellRingingIcon = {
	  name: 'BellRingingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bell-ringing",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5a2 2 0 0 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17v1a3 3 0 0 0 6 0v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 6.727a11.05 11.05 0 0 0 -2.794 -3.727"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6.727a11.05 11.05 0 0 1 2.792 -3.727"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BellSchoolIcon = {
	  name: 'BellSchoolIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bell-school",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "10",
	      "r": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.5 15h.5a2 2 0 0 1 2 2v1a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-1a2 2 0 0 1 2 -2h.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 17a5.698 5.698 0 0 0 4.467 -7.932l-.467 -1.068"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "20",
	      "cy": "8",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BellXIcon = {
	  name: 'BellXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bell-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17v1a3 3 0 0 0 6 0v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 9.5l3 3m0 -3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BellZIcon = {
	  name: 'BellZIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bell-z",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17v1a3 3 0 0 0 6 0v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 9h4l-4 4h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BellIcon = {
	  name: 'BellIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bell",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5a2 2 0 0 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17v1a3 3 0 0 0 6 0v-1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BibleIcon = {
	  name: 'BibleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bible",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 4v16h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 16h-12a2 2 0 0 0 -2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 9h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BikeOffIcon = {
	  name: 'BikeOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bike-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "18",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.437 16.44a3 3 0 0 0 4.123 4.123m1.44 -2.563a3 3 0 0 0 -3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19v-4l-3 -3l1.665 -1.332m2.215 -1.772l1.12 -.896l2 3h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BikeIcon = {
	  name: 'BikeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bike",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "18",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "18",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "12 19 12 15 9 12 14 8 16 11 19 11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BinaryIcon = {
	  name: 'BinaryIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-binary",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 10v-5h-1m8 14v-5h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "15",
	      "y": "5",
	      "width": "3",
	      "height": "5",
	      "rx": ".5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "10",
	      "y": "14",
	      "width": "3",
	      "height": "5",
	      "rx": ".5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10h.01m-.01 9h.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BiohazardOffIcon = {
	  name: 'BiohazardOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-biohazard-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.586 10.586a2 2 0 1 0 2.836 2.82"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.939 14c0 .173 .048 .351 .056 .533v.217a4.75 4.75 0 0 1 -4.533 4.745h-.217"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2.495 14.745a4.75 4.75 0 0 1 7.737 -3.693"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.745 19.495a4.75 4.75 0 0 1 -4.69 -5.503h-.06"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.533 10.538a4.75 4.75 0 0 1 6.957 3.987v.217"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.295 10.929a4.75 4.75 0 0 1 -2.988 -3.64m.66 -3.324a4.75 4.75 0 0 1 .5 -.66l.164 -.172"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.349 3.133a4.75 4.75 0 0 1 -.836 7.385"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BiohazardIcon = {
	  name: 'BiohazardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-biohazard",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.939 14c0 .173 .048 .351 .056 .533l0 .217a4.75 4.75 0 0 1 -4.533 4.745l-.217 0m-4.75 -4.75a4.75 4.75 0 0 1 7.737 -3.693m6.513 8.443a4.75 4.75 0 0 1 -4.69 -5.503l-.06 0m1.764 -2.944a4.75 4.75 0 0 1 7.731 3.477l0 .217m-11.195 -3.813a4.75 4.75 0 0 1 -1.828 -7.624l.164 -.172m6.718 0a4.75 4.75 0 0 1 -1.665 7.798"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BlockquoteIcon = {
	  name: 'BlockquoteIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-blockquote",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15h15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 19h-15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 11h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 7h-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 9h1a1 1 0 1 1 -1 1v-2.5a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 9h1a1 1 0 1 1 -1 1v-2.5a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BluetoothConnectedIcon = {
	  name: 'BluetoothConnectedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bluetooth-connected",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 8 17 16 12 20 12 4 17 8 7 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "5",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BluetoothOffIcon = {
	  name: 'BluetoothOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bluetooth-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.438 16.45l-4.438 3.55v-8m0 -4v-4l5 4l-2.776 2.22m-2.222 1.779l-5 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BluetoothXIcon = {
	  name: 'BluetoothXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bluetooth-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 8l10 8l-5 4v-16l1.003 .802m0 6.396l-6.003 4.802"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 6l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 6l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BluetoothIcon = {
	  name: 'BluetoothIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bluetooth",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 8 17 16 12 20 12 4 17 8 7 16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BlurIcon = {
	  name: 'BlurIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-blur",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21a9.01 9.01 0 0 0 2.32 -.302a9.004 9.004 0 0 0 1.74 -16.733a9 9 0 1 0 -4.06 17.035z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoldOffIcon = {
	  name: 'BoldOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bold-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h4a3.5 3.5 0 0 1 2.222 6.204m-3.222 .796h-5v-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.107 17.112a3.5 3.5 0 0 1 -3.107 1.888h-7v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoldIcon = {
	  name: 'BoldIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bold",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 5h6a3.5 3.5 0 0 1 0 7h-6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 12h1a3.5 3.5 0 0 1 0 7h-7v-7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoltOffIcon = {
	  name: 'BoltOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bolt-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.212 15.21l-4.212 5.79v-7h-6l3.79 -5.21m1.685 -2.32l2.525 -3.47v6m1 1h5l-2.104 2.893"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoltIcon = {
	  name: 'BoltIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bolt",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "13 3 13 10 19 10 11 21 11 14 5 14 13 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoneOffIcon = {
	  name: 'BoneOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bone-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.5 8.502l.38 -.38a3 3 0 1 1 5.12 -2.122a3 3 0 1 1 -2.12 5.122l-.372 .372m-2.008 2.008l-2.378 2.378a3 3 0 1 1 -5.117 2.297l-.005 -.177l-.176 -.005a3 3 0 1 1 2.298 -5.115l2.378 -2.378"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoneIcon = {
	  name: 'BoneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bone",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3a3 3 0 0 1 3 3a3 3 0 1 1 -2.12 5.122l-4.758 4.758a3 3 0 1 1 -5.117 2.297l-.005 -.177l-.176 -.005a3 3 0 1 1 2.298 -5.115l4.758 -4.758a3 3 0 0 1 2.12 -5.122z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Book2Icon = {
	  name: 'Book2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-book-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 4v16h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 16h-12a2 2 0 0 0 -2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 8h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BookDownloadIcon = {
	  name: 'BookDownloadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-book-download",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20h-6a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 16h-7a2 2 0 0 0 -2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 19l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 22v-9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BookOffIcon = {
	  name: 'BookOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-book-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19a9 9 0 0 1 9 0a8.999 8.999 0 0 1 5.899 -1.096"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6a8.995 8.995 0 0 1 2.114 -.884m3.8 -.21c1.07 .17 2.116 .534 3.086 1.094a9 9 0 0 1 9 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6v13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v2m0 4v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 6v11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BookUploadIcon = {
	  name: 'BookUploadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-book-upload",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 20h-8a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 16h-5a2 2 0 0 0 -2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 16l3 -3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 13v9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BookIcon = {
	  name: 'BookIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-book",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19a9 9 0 0 1 9 0a9 9 0 0 1 9 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6a9 9 0 0 1 9 0a9 9 0 0 1 9 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "6",
	      "x2": "3",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "6",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "6",
	      "x2": "21",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BookmarkOffIcon = {
	  name: 'BookmarkOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bookmark-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v3l-5 -3l-5 3v-13m1.178 -2.818c.252 -.113 .53 -.176 .822 -.176h6a2 2 0 0 1 2 2v7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BookmarkIcon = {
	  name: 'BookmarkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bookmark",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 4h6a2 2 0 0 1 2 2v14l-5 -3l-5 3v-14a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BookmarksOffIcon = {
	  name: 'BookmarksOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bookmarks-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7h2a2 2 0 0 1 2 2v2m0 4v6l-5 -3l-5 3v-12a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.265 4a2 2 0 0 1 1.735 -1h6a2 2 0 0 1 2 2v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BookmarksIcon = {
	  name: 'BookmarksIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bookmarks",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 7a2 2 0 0 1 2 2v12l-5 -3l-5 3v-12a2 2 0 0 1 2 -2h6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.265 4a2 2 0 0 1 1.735 -1h6a2 2 0 0 1 2 2v12l-1 -.6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BooksOffIcon = {
	  name: 'BooksOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-books-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 9v10a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4a1 1 0 0 1 1 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 13v6a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 8h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 16h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.254 10.244l-1.218 -4.424a1.02 1.02 0 0 1 .634 -1.219l.133 -.041l2.184 -.53c.562 -.135 1.133 .19 1.282 .732l3.236 11.75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.585 19.589l-1.572 .38c-.562 .136 -1.133 -.19 -1.282 -.731l-.952 -3.458"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 9l4 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.207 15.199l.716 -.18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BooksIcon = {
	  name: 'BooksIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-books",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "4",
	      "width": "4",
	      "height": "16",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "4",
	      "width": "4",
	      "height": "16",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 8h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 16h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.803 4.56l2.184 -.53c.562 -.135 1.133 .19 1.282 .732l3.695 13.418a1.02 1.02 0 0 1 -.634 1.219l-.133 .041l-2.184 .53c-.562 .135 -1.133 -.19 -1.282 -.732l-3.695 -13.418a1.02 1.02 0 0 1 .634 -1.219l.133 -.041z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 9l4 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16l3.923 -.98"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderAllIcon = {
	  name: 'BorderAllIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-all",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderBottomIcon = {
	  name: 'BorderBottomIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-bottom",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "20",
	      "x2": "4",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "4",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "8",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "4",
	      "x2": "16",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "4",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "4",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "8",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "4",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderHorizontalIcon = {
	  name: 'BorderHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "4",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "8",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "4",
	      "x2": "16",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "4",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "4",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "4",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "20",
	      "x2": "8",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "12",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "20",
	      "x2": "16",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderInnerIcon = {
	  name: 'BorderInnerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-inner",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "4",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "8",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "4",
	      "x2": "16",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "4",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "4",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "4",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "20",
	      "x2": "8",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "20",
	      "x2": "16",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderLeftIcon = {
	  name: 'BorderLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "4",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "8",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "4",
	      "x2": "16",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "8",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "20",
	      "x2": "8",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "12",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "20",
	      "x2": "16",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderNoneIcon = {
	  name: 'BorderNoneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-none",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "4",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "8",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "4",
	      "x2": "16",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "4",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "4",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "8",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "4",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "4",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "20",
	      "x2": "8",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "12",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "20",
	      "x2": "16",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderOuterIcon = {
	  name: 'BorderOuterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-outer",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "8",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12",
	      "y2": "16.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderRadiusIcon = {
	  name: 'BorderRadiusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-radius",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v-4a4 4 0 0 1 4 -4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "4",
	      "x2": "16",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "4",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "4",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "20",
	      "x2": "8",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "12",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "20",
	      "x2": "16",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderRightIcon = {
	  name: 'BorderRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "4",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "8",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "4",
	      "x2": "16",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "4",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "4",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "8",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "4",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "4",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "20",
	      "x2": "8",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "12",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "20",
	      "x2": "16",
	      "y2": "20.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderStyle2Icon = {
	  name: 'BorderStyle2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-style-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 18v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 18v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 18v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 12h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 12h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6h16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderStyleIcon = {
	  name: 'BorderStyleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-style",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20v-14a2 2 0 0 1 2 -2h14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 8v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 20v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderTopIcon = {
	  name: 'BorderTopIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-top",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "4",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "4",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "8",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "4",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "4",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "20",
	      "x2": "8",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "12",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "20",
	      "x2": "16",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BorderVerticalIcon = {
	  name: 'BorderVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-border-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "4",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "8",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "4",
	      "x2": "16",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "4",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "4",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "8",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "4",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "4",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "20",
	      "x2": "8",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "20",
	      "x2": "16",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BottleIcon = {
	  name: 'BottleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bottle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5h4v-2a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3.5c0 1.626 .507 3.212 1.45 4.537l.05 .07a8.093 8.093 0 0 1 1.5 4.694v6.199a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2v-6.2c0 -1.682 .524 -3.322 1.5 -4.693l.05 -.07a7.823 7.823 0 0 0 1.45 -4.537"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.003 14.803a2.4 2.4 0 0 0 .997 -.803a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 1 -.805"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BowIcon = {
	  name: 'BowIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bow",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3h4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 3l-15 15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18h3v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.5 20c1.576 -1.576 2.5 -4.095 2.5 -6.5c0 -4.81 -3.69 -8.5 -8.5 -8.5c-2.415 0 -4.922 .913 -6.5 2.5l12.5 12.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMarginIcon = {
	  name: 'BoxMarginIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-margin",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8h8v8h-8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 20v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 8v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxModel2Icon = {
	  name: 'BoxModel2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-model-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8h8v8h-8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxModelIcon = {
	  name: 'BoxModelIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-model",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8h8v8h-8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16l3.3 3.3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8l3.3 -3.3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8l-3.3 -3.3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16l-3.3 3.3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMultiple0Icon = {
	  name: 'BoxMultiple0Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-multiple-0",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 6a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "3",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMultiple1Icon = {
	  name: 'BoxMultiple1Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-multiple-1",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "3",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 14v-8l-2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMultiple2Icon = {
	  name: 'BoxMultiple2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-multiple-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "3",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8a2 2 0 1 1 4 0c0 .591 -.417 1.318 -.816 1.858l-3.184 4.143l4 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMultiple3Icon = {
	  name: 'BoxMultiple3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-multiple-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "3",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10a2 2 0 1 0 -2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12a2 2 0 1 0 2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMultiple4Icon = {
	  name: 'BoxMultiple4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-multiple-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "3",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 14v-8l-4 6h5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMultiple5Icon = {
	  name: 'BoxMultiple5Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-multiple-5",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "3",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14h2a2 2 0 1 0 0 -4h-2v-4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMultiple6Icon = {
	  name: 'BoxMultiple6Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-multiple-6",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "3",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8a2 2 0 1 0 -4 0v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMultiple7Icon = {
	  name: 'BoxMultiple7Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-multiple-7",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "3",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6h4l-2 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMultiple8Icon = {
	  name: 'BoxMultiple8Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-multiple-8",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "3",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "8",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMultiple9Icon = {
	  name: 'BoxMultiple9Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-multiple-9",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "3",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "8",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12a2 2 0 1 0 4 0v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxMultipleIcon = {
	  name: 'BoxMultipleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-multiple",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "3",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxPaddingIcon = {
	  name: 'BoxPaddingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box-padding",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BoxIcon = {
	  name: 'BoxIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-box",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "12 3 20 7.5 20 16.5 12 21 4 16.5 4 7.5 12 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "20",
	      "y2": "7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "4",
	      "y2": "7.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BracesOffIcon = {
	  name: 'BracesOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-braces-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.176 5.177c-.113 .251 -.176 .53 -.176 .823v3c0 1.657 -.895 3 -2 3c1.105 0 2 1.343 2 3v3a2 2 0 0 0 2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4a2 2 0 0 1 2 2v3c0 1.657 .895 3 2 3c-1.105 0 -2 1.343 -2 3m-.176 3.821a2 2 0 0 1 -1.824 1.179"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BracesIcon = {
	  name: 'BracesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-braces",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 4a2 2 0 0 0 -2 2v3a2 3 0 0 1 -2 3a2 3 0 0 1 2 3v3a2 2 0 0 0 2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4a2 2 0 0 1 2 2v3a2 3 0 0 0 2 3a2 3 0 0 0 -2 3v3a2 2 0 0 1 -2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BracketsOffIcon = {
	  name: 'BracketsOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brackets-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 5v15h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h3v11m0 4v1h-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BracketsIcon = {
	  name: 'BracketsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brackets",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4h-3v16h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h3v16h-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandAdobeIcon = {
	  name: 'BrandAdobeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-adobe",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.893 4.514l7.977 13.994a0.993 .993 0 0 1 -.394 1.365a1.04 1.04 0 0 1 -.5 .127h-3.476l-4.5 -8l-2.5 4h1.5l2 4h-8.977c-.565 0 -1.023 -.45 -1.023 -1.003c0 -.171 .045 -.34 .13 -.49l7.977 -13.993a1.034 1.034 0 0 1 1.786 0z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandAirbnbIcon = {
	  name: 'BrandAirbnbIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-airbnb",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10c-2 0 -3 1 -3 3c0 1.5 1.494 3.535 3 5.5c1 1 1.5 1.5 2.5 2s2.5 1 4.5 -.5s1.5 -3.5 .5 -6s-2.333 -5.5 -5 -9.5c-.834 -1 -1.5 -1.5 -2.503 -1.5c-1 0 -1.623 .45 -2.497 1.5c-2.667 4 -4 7 -5 9.5s-1.5 4.5 .5 6s3.5 1 4.5 .5s1.5 -1 2.5 -2c1.506 -1.965 3 -4 3 -5.5c0 -2 -1 -3 -3 -3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandAirtableIcon = {
	  name: 'BrandAirtableIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-airtable",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10v8l7 -3v-2.6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6l9 3l9 -3l-9 -3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 12.3v8.7l7 -3v-8z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandAndroidIcon = {
	  name: 'BrandAndroidIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-android",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "10",
	      "x2": "4",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "10",
	      "x2": "20",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 9h10v8a1 1 0 0 1 -1 1h-8a1 1 0 0 1 -1 -1v-8a5 5 0 0 1 10 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "3",
	      "x2": "9",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "3",
	      "x2": "15",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "18",
	      "x2": "9",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "18",
	      "x2": "15",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandAngularIcon = {
	  name: 'BrandAngularIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-angular",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.428 17.245l6.076 3.471a1 1 0 0 0 .992 0l6.076 -3.471a1 1 0 0 0 .495 -.734l1.323 -9.704a1 1 0 0 0 -.658 -1.078l-7.4 -2.612a1 1 0 0 0 -.665 0l-7.399 2.613a1 1 0 0 0 -.658 1.078l1.323 9.704a1 1 0 0 0 .495 .734z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15l3 -8l3 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandAppleArcadeIcon = {
	  name: 'BrandAppleArcadeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-apple-arcade",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12.5v4.75a0.734 .734 0 0 1 -.055 .325a0.704 .704 0 0 1 -.348 .366l-5.462 2.58a4.998 4.998 0 0 1 -4.27 0l-5.462 -2.58a0.705 .705 0 0 1 -.401 -.691l-.002 -4.75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.431 12.216l5.634 -2.332a5.065 5.065 0 0 1 3.87 0l5.634 2.332a0.692 .692 0 0 1 .028 1.269l-5.462 2.543a5.064 5.064 0 0 1 -4.27 0l-5.462 -2.543a0.691 .691 0 0 1 .028 -1.27z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "7",
	      "x2": "12",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandAppleIcon = {
	  name: 'BrandAppleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-apple",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 7c-3 0 -4 3 -4 5.5c0 3 2 7.5 4 7.5c1.088 -.046 1.679 -.5 3 -.5c1.312 0 1.5 .5 3 .5s4 -3 4 -5c-.028 -.01 -2.472 -.403 -2.5 -3c-.019 -2.17 2.416 -2.954 2.5 -3c-1.023 -1.492 -2.951 -1.963 -3.5 -2c-1.433 -.111 -2.83 1 -3.5 1c-.68 0 -1.9 -1 -3 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4a2 2 0 0 0 2 -2a2 2 0 0 0 -2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandAppstoreIcon = {
	  name: 'BrandAppstoreIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-appstore",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16l1.106 -1.99m1.4 -2.522l2.494 -4.488"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 14h5m2.9 0h2.1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16l-2.51 -4.518m-1.487 -2.677l-1.003 -1.805"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandAsanaIcon = {
	  name: 'BrandAsanaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-asana",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "7",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "16",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "16",
	      "r": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandBehanceIcon = {
	  name: 'BrandBehanceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-behance",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18v-12h4.5a3 3 0 0 1 0 6a3 3 0 0 1 0 6h-4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "7.5",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 13h7a3.5 3.5 0 0 0 -7 0v2a3.5 3.5 0 0 0 6.64 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "6",
	      "x2": "19",
	      "y2": "6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandBingIcon = {
	  name: 'BrandBingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-bing",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 3l4 1.5v12l6 -2.5l-2 -1l-1 -4l7 2.5v4.5l-10 5l-4 -2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandBitbucketIcon = {
	  name: 'BrandBitbucketIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-bitbucket",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.648 4a0.64 .64 0 0 0 -.64 .744l3.14 14.528c.07 .417 .43 .724 .852 .728h10a0.644 .644 0 0 0 .642 -.539l3.35 -14.71a0.641 .641 0 0 0 -.64 -.744l-16.704 -.007z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 15h-4l-1 -6h6z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandBookingIcon = {
	  name: 'BrandBookingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-booking",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18v-9.5a4.5 4.5 0 0 1 4.5 -4.5h7a4.5 4.5 0 0 1 4.5 4.5v7a4.5 4.5 0 0 1 -4.5 4.5h-9.5a2 2 0 0 1 -2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12h3.5a2 2 0 1 1 0 4h-3.5v-7a1 1 0 0 1 1 -1h1.5a2 2 0 1 1 0 4h-1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "16",
	      "x2": "16.01",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandBootstrapIcon = {
	  name: 'BrandBootstrapIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-bootstrap",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 12a2 2 0 0 0 2 -2v-4a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v4a2 2 0 0 0 2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 12a2 2 0 0 1 2 2v4a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-4a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 16v-8h3.5a2 2 0 1 1 0 4h-3.5h4a2 2 0 1 1 0 4h-4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandChromeIcon = {
	  name: 'BrandChromeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-chrome",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "20.4",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "20.4",
	      "y2": "9",
	      "transform": "rotate(120 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "20.4",
	      "y2": "9",
	      "transform": "rotate(240 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandCodepenIcon = {
	  name: 'BrandCodepenIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-codepen",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 15l9 6l9 -6l-9 -6l-9 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 9l9 6l9 -6l-9 -6l-9 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "9",
	      "x2": "3",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "9",
	      "x2": "21",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "15",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandCodesandboxIcon = {
	  name: 'BrandCodesandboxIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-codesandbox",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 7.5v9l-4 2.25l-4 2.25l-4 -2.25l-4 -2.25v-9l4 -2.25l4 -2.25l4 2.25z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l4 -2.25l4 -2.25"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-4 -2.25l-4 -2.25"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12l-4 2v4.75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12l4 2l0 4.75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 5.25l4 2.25l4 -2.25"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandCss3Icon = {
	  name: 'BrandCss3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-css3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4l-2 14.5l-6 2l-6 -2l-2 -14.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.5 8h7l-4.5 4h4l-.5 3.5l-2.5 .75l-2.5 -.75l-.1 -.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandCucumberIcon = {
	  name: 'BrandCucumberIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-cucumber",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 10.99c-.01 5.52 -4.48 10 -10 10.01v-2.26l-.01 -.01c-4.28 -1.11 -6.86 -5.47 -5.76 -9.75a8.001 8.001 0 0 1 9.74 -5.76c3.53 .91 6.03 4.13 6.03 7.78v-.01z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 8l-.5 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.5 14l.5 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12.5l-1 .5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 14l-.5 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 8l.5 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 12.5l-1 -.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 10l-1 -.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandDebianIcon = {
	  name: 'BrandDebianIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-debian",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17c-2.397 -.943 -4 -3.153 -4 -5.635c0 -2.19 1.039 -3.14 1.604 -3.595c2.646 -2.133 6.396 -.27 6.396 3.23c0 2.5 -2.905 2.121 -3.5 1.5c-.595 -.621 -1 -1.5 -.5 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandDeviantartIcon = {
	  name: 'BrandDeviantartIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-deviantart",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 3v4l-3.857 6h3.857v4h-6.429l-2.571 4h-3v-4l3.857 -6h-3.857v-4h6.429l2.571 -4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandDiscordIcon = {
	  name: 'BrandDiscordIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-discord",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 7.5c3.5 -1 5.5 -1 9 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 16.5c3.5 1 6.5 1 10 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.5 17c0 1 1.5 3 2 3c1.5 0 2.833 -1.667 3.5 -3c.667 -1.667 .5 -5.833 -1.5 -11.5c-1.457 -1.015 -3 -1.34 -4.5 -1.5l-1 2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.5 17c0 1 -1.356 3 -1.832 3c-1.429 0 -2.698 -1.667 -3.333 -3c-.635 -1.667 -.476 -5.833 1.428 -11.5c1.388 -1.015 2.782 -1.34 4.237 -1.5l1 2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandDisqusIcon = {
	  name: 'BrandDisqusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-disqus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.847 21c-2.259 0 -4.323 -.667 -5.919 -2h-3.928l1.708 -3.266c-.545 -1.174 -.759 -2.446 -.758 -3.734c0 -4.97 3.84 -9 8.898 -9c5.052 0 9.152 4.03 9.152 9c0 4.972 -4.098 9 -9.153 9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.485 15h-1.485v-6h1.485c2.112 0 3.515 .823 3.515 2.981v.035c0 2.18 -1.403 2.984 -3.515 2.984z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandDockerIcon = {
	  name: 'BrandDockerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-docker",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 12.54c-1.804 -.345 -2.701 -1.08 -3.523 -2.94c-.487 .696 -1.102 1.568 -.92 2.4c.028 .238 -.32 1.002 -.557 1h-14c0 5.208 3.164 7 6.196 7c4.124 .022 7.828 -1.376 9.854 -5c1.146 -.101 2.296 -1.505 2.95 -2.46z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 10h3v3h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10h3v3h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 10h3v3h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 7h3v3h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7h3v3h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 4h3v3h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.571 18c1.5 0 2.047 -.074 2.958 -.78"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "16",
	      "x2": "10",
	      "y2": "16.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandDoctrineIcon = {
	  name: 'BrandDoctrineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-doctrine",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 14h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 3l6.9 6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandDribbbleIcon = {
	  name: 'BrandDribbbleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-dribbble",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 3.6c5 6 7 10.5 7.5 16.2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.4 19c3.5 -3.5 6 -6.5 14.5 -6.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.1 10.75c5 0 9.814 -.38 15.314 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandEdgeIcon = {
	  name: 'BrandEdgeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-edge",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.978 11.372a9 9 0 1 0 -1.593 5.773"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.978 11.372c.21 2.993 -5.034 2.413 -6.913 1.486c1.392 -1.6 .402 -4.038 -2.274 -3.851c-1.745 .122 -2.927 1.157 -2.784 3.202c.28 3.99 4.444 6.205 10.36 4.79"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.022 12.628c-.283 -4.043 8.717 -7.228 11.248 -2.688"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.628 20.978c-2.993 .21 -5.162 -4.725 -3.567 -9.748"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandFacebookIcon = {
	  name: 'BrandFacebookIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-facebook",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 10v4h3v7h4v-7h3l1 -4h-4v-2a1 1 0 0 1 1 -1h3v-4h-3a5 5 0 0 0 -5 5v2h-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandFigmaIcon = {
	  name: 'BrandFigmaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-figma",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "3",
	      "width": "12",
	      "height": "6",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 9a3 3 0 0 0 0 6h3m-3 0a3 3 0 1 0 3 3v-15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandFirebaseIcon = {
	  name: 'BrandFirebaseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-firebase",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.53 17.05l6.15 -11.72h-.02c.38 -.74 1.28 -1.02 2.01 -.63c.26 .14 .48 .36 .62 .62l1.06 2.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.47 6.45c.58 -.59 1.53 -.59 2.11 -.01c.22 .22 .36 .5 .41 .81l1.5 9.11c.1 .62 -.2 1.24 -.76 1.54l-6.07 2.9c-.46 .25 -1.01 .26 -1.46 0l-6.02 -2.92c-.55 -.31 -.85 -.92 -.75 -1.54l1.96 -12.04c.12 -.82 .89 -1.38 1.7 -1.25c.46 .07 .87 .36 1.09 .77l1.24 1.76"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.57 17.18l10.93 -10.68"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandFirefoxIcon = {
	  name: 'BrandFirefoxIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-firefox",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.028 7.82a9 9 0 1 0 12.823 -3.4c-1.636 -1.02 -3.064 -1.02 -4.851 -1.02h-1.647"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.914 9.485c-1.756 -1.569 -.805 -5.38 .109 -6.17c.086 .896 .585 1.208 1.111 1.685c.88 -.275 1.313 -.282 1.867 0c.82 -.91 1.694 -2.354 2.628 -2.093c-1.082 1.741 -.07 3.733 1.371 4.173c-.17 .975 -1.484 1.913 -2.76 2.686c-1.296 .938 -.722 1.85 0 2.234c.949 .506 3.611 -.995 4.545 .354c-1.698 .102 -1.536 3.107 -3.983 2.727c2.523 .957 4.345 .462 5.458 -.34c1.965 -1.52 2.879 -3.542 2.879 -5.557c-.014 -1.398 .194 -2.695 -1.26 -4.75"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandFlickrIcon = {
	  name: 'BrandFlickrIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-flickr",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandFoursquareIcon = {
	  name: 'BrandFoursquareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-foursquare",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 3h10c.644 0 1.11 .696 .978 1.33l-1.984 9.859a1.014 1.014 0 0 1 -.994 .811h-2.254c-.308 0 -.6 .141 -.793 .382l-4.144 5.25c-.599 .752 -1.809 .331 -1.809 -.632v-16c0 -.564 .44 -1 1 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "17",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandFramerIcon = {
	  name: 'BrandFramerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-framer",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15h12l-12 -12h12v6h-12v6l6 6v-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandGitIcon = {
	  name: 'BrandGitIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-git",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "8",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "16",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 11l-2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7l-1.9 -1.9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 20.4l-6.9 -6.9c-.781 -.781 -.781 -2.219 0 -3l6.9 -6.9c.781 -.781 2.219 -.781 3 0l6.9 6.9c.781 .781 .781 2.219 0 3l-6.9 6.9c-.781 .781 -2.219 .781 -3 0z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandGithubIcon = {
	  name: 'BrandGithubIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-github",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandGitlabIcon = {
	  name: 'BrandGitlabIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-gitlab",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 14l-9 7l-9 -7l3 -11l3 7h6l3 -7z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandGmailIcon = {
	  name: 'BrandGmailIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-gmail",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h3a1 1 0 0 0 1 -1v-14a1 1 0 0 0 -1 -1h-3v16z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 20h3v-16h-3a1 1 0 0 0 -1 1v14a1 1 0 0 0 1 1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4l-4 4l-4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6.5l8 7.5l8 -7.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandGoogleAnalyticsIcon = {
	  name: 'BrandGoogleAnalyticsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-google-analytics",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "10",
	      "y": "9",
	      "width": "4",
	      "height": "12",
	      "rx": "1.105"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "17",
	      "y": "3",
	      "width": "4",
	      "height": "18",
	      "rx": "1.105"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandGoogleDriveIcon = {
	  name: 'BrandGoogleDriveIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-google-drive",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10l-6 10l-3 -5l6 -10z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15h12l-3 5h-12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 15l-6 -10h6l6 10z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandGooglePlayIcon = {
	  name: 'BrandGooglePlayIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-google-play",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 3.71v16.58a0.7 .7 0 0 0 1.05 .606l14.622 -8.42a0.55 .55 0 0 0 0 -.953l-14.622 -8.419a0.7 .7 0 0 0 -1.05 .607z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "9",
	      "x2": "4.5",
	      "y2": "20.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4.5",
	      "y1": "3.5",
	      "x2": "15",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandGoogleIcon = {
	  name: 'BrandGoogleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-google",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.788 5.108a9 9 0 1 0 3.212 6.892h-8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandGravatarIcon = {
	  name: 'BrandGravatarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-gravatar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.64 5.632a9 9 0 1 0 6.36 -2.632v7.714"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandHipchatIcon = {
	  name: 'BrandHipchatIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-hipchat",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.802 17.292s.077 -.055 .2 -.149c1.843 -1.425 2.998 -3.49 2.998 -5.789c0 -4.286 -4.03 -7.764 -8.998 -7.764c-4.97 0 -9.002 3.478 -9.002 7.764c0 4.288 4.03 7.646 9 7.646c.424 0 1.12 -.028 2.088 -.084c1.262 .82 3.104 1.493 4.716 1.493c.499 0 .734 -.41 .414 -.828c-.486 -.596 -1.156 -1.551 -1.416 -2.29z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 13.5c2.5 2.5 6.5 2.5 9 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandHtml5Icon = {
	  name: 'BrandHtml5Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-html5",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4l-2 14.5l-6 2l-6 -2l-2 -14.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.5 8h-7l.5 4h6l-.5 3.5l-2.5 .75l-2.5 -.75l-.1 -.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandInstagramIcon = {
	  name: 'BrandInstagramIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-instagram",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16.5",
	      "y1": "7.5",
	      "x2": "16.5",
	      "y2": "7.501"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandJavascriptIcon = {
	  name: 'BrandJavascriptIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-javascript",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4l-2 14.5l-6 2l-6 -2l-2 -14.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 8h3v8l-2 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.5 8h-2.5a0.5 .5 0 0 0 -.5 .5v3a0.5 .5 0 0 0 .5 .5h1.423a0.5 .5 0 0 1 .495 .57l-.418 2.93l-2 .5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandKickstarterIcon = {
	  name: 'BrandKickstarterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-kickstarter",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 9l2.975 -4.65c.615 -.9 1.405 -1.35 2.377 -1.35c.79 0 1.474 .286 2.054 .858c.576 .574 .866 1.256 .866 2.054c0 .588 -.153 1.109 -.46 1.559l-2.812 4.029l3.465 4.912c.356 .46 .535 .998 .535 1.613a2.92 2.92 0 0 1 -.843 2.098c-.561 .584 -1.242 .877 -2.04 .877c-.876 0 -1.545 -.29 -2.005 -.87l-4.112 -5.697v3.067c0 .876 -.313 1.69 -.611 2.175c-.543 .883 -1.35 1.325 -2.389 1.325c-.944 0 -1.753 -.327 -2.271 -.974c-.486 -.6 -.729 -1.392 -.729 -2.38v-11.371c0 -.934 .247 -1.706 .74 -2.313c.512 -.641 1.347 -.962 2.26 -.962c.868 0 1.821 .321 2.4 .962c.323 .356 .515 .714 .6 1.08c.052 .224 0 .643 0 1.26v2.698z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandKotlinIcon = {
	  name: 'BrandKotlinIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-kotlin",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20h-16v-16h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12l8 -8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandLastfmIcon = {
	  name: 'BrandLastfmIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-lastfm",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 8c-.83 -1 -1.388 -1 -2 -1c-.612 0 -2 .271 -2 2s1.384 2.233 3 3c1.616 .767 2.125 1.812 2 3s-1 2 -3 2s-3 -1 -3.5 -2s-1.585 -4.78 -2.497 -5.997a5 5 0 1 0 -1.003 6.997"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandLinkedinIcon = {
	  name: 'BrandLinkedinIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-linkedin",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "11",
	      "x2": "8",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "8",
	      "x2": "8",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16v-3a2 2 0 0 0 -4 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandLoomIcon = {
	  name: 'BrandLoomIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-loom",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.464 6.518a6.001 6.001 0 1 0 -3.023 7.965"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.482 17.464a6.001 6.001 0 1 0 -7.965 -3.023"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.54 17.482a6.001 6.001 0 1 0 3.024 -7.965"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.518 6.54a6.001 6.001 0 1 0 7.965 3.024"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandMastercardIcon = {
	  name: 'BrandMastercardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-mastercard",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9.765a3 3 0 1 0 0 4.47"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandMediumIcon = {
	  name: 'BrandMediumIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-medium",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 9h1l3 3l3 -3h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "15",
	      "x2": "10",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "15",
	      "x2": "16",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "9",
	      "x2": "9",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "9",
	      "x2": "15",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandMercedesIcon = {
	  name: 'BrandMercedesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-mercedes",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l7 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-7 5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandMessengerIcon = {
	  name: 'BrandMessengerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-messenger",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 20l1.3 -3.9a9 8 0 1 1 3.4 2.9l-4.7 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13l3 -2l2 2l3 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandMetaIcon = {
	  name: 'BrandMetaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-meta",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10.174c1.766 -2.784 3.315 -4.174 4.648 -4.174c2 0 3.263 2.213 4 5.217c.704 2.869 .5 6.783 -2 6.783c-1.114 0 -2.648 -1.565 -4.148 -3.652a27.627 27.627 0 0 1 -2.5 -4.174z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10.174c-1.766 -2.784 -3.315 -4.174 -4.648 -4.174c-2 0 -3.263 2.213 -4 5.217c-.704 2.869 -.5 6.783 2 6.783c1.114 0 2.648 -1.565 4.148 -3.652c1 -1.391 1.833 -2.783 2.5 -4.174z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandNetbeansIcon = {
	  name: 'BrandNetbeansIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-netbeans",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 6.873a2 2 0 0 1 1 1.747v6.536a2 2 0 0 1 -1.029 1.748l-6 3.833a2 2 0 0 1 -1.942 0l-6 -3.833a2 2 0 0 1 -1.029 -1.747v-6.537a2 2 0 0 1 1.029 -1.748l6 -3.572a2.056 2.056 0 0 1 2 0l6 3.573h-.029z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.5 9.43a1 1 0 0 1 .5 .874v3.268a1 1 0 0 1 -.515 .874l-3 1.917a1 1 0 0 1 -.97 0l-3 -1.917a1 1 0 0 1 -.515 -.873v-3.269a1 1 0 0 1 .514 -.874l3 -1.786c.311 -.173 .69 -.173 1 0l3 1.787h-.014z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-9l-7.5 -4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l7.5 -4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.5 16l-3.5 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 14l-3.5 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandNetflixIcon = {
	  name: 'BrandNetflixIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-netflix",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 20v-16l7 16v-16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandNextjsIcon = {
	  name: 'BrandNextjsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-nextjs",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15v-6l7.745 10.65a9 9 0 1 1 2.255 -1.993"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 12v-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandNotionIcon = {
	  name: 'BrandNotionIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-notion",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 7h3l6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 7v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 17h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 7h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 7v10h-1l-7 -7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandNuxtIcon = {
	  name: 'BrandNuxtIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-nuxt",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.146 8.583l-1.3 -2.09a1.046 1.046 0 0 0 -1.786 .017l-5.91 9.908a1.046 1.046 0 0 0 .897 1.582h3.913"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.043 18c.743 0 1.201 -.843 .82 -1.505l-4.044 -7.013a0.936 .936 0 0 0 -1.638 0l-4.043 7.013c-.382 .662 .076 1.505 .819 1.505h8.086z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandNytimesIcon = {
	  name: 'BrandNytimesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-nytimes",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.036 5.058a8.001 8.001 0 1 0 8.706 9.965"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-11l-7.5 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.5 3a2.5 2.5 0 1 1 0 5l-11 -5a2.5 2.5 0 0 0 -.67 4.91"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 13h-.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandOpenSourceIcon = {
	  name: 'BrandOpenSourceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-open-source",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a9 9 0 0 1 3.618 17.243l-2.193 -5.602a3 3 0 1 0 -2.849 0l-2.193 5.603a9 9 0 0 1 3.617 -17.244z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandOperaIcon = {
	  name: 'BrandOperaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-opera",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("ellipse", {
	      "cx": "12",
	      "cy": "12",
	      "rx": "3",
	      "ry": "5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandPagekitIcon = {
	  name: 'BrandPagekitIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-pagekit",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.077 20h-5.077v-16h11v14h-5.077"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandPatreonIcon = {
	  name: 'BrandPatreonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-patreon",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3h3v18h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "9.5",
	      "r": "6.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandPaypalIcon = {
	  name: 'BrandPaypalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-paypal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13l2.5 0c2.5 0 5 -2.5 5 -5c0 -3 -1.9 -5 -5 -5h-5.5c-.5 0 -1 .5 -1 1l-2 14c0 .5 .5 1 1 1h2.8l1.2 -5c.1 -.6 .4 -1 1 -1zm7.5 -5.8c1.7 1 2.5 2.8 2.5 4.8c0 2.5 -2.5 4.5 -5 4.5h-2.6l-.6 3.6a1 1 0 0 1 -1 .8l-2.7 0a0.5 .5 0 0 1 -.5 -.6l.2 -1.4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandPhpIcon = {
	  name: 'BrandPhpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-php",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("     "), vue.createVNode("ellipse", {
	      "cx": "12",
	      "cy": "12",
	      "rx": "10",
	      "ry": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.5 15l.395 -1.974l.605 -3.026h1.32a1 1 0 0 1 .986 1.164l-.167 1a1 1 0 0 1 -.986 .836h-1.653"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.5 15l.395 -1.974l.605 -3.026h1.32a1 1 0 0 1 .986 1.164l-.167 1a1 1 0 0 1 -.986 .836h-1.653"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7.5l-1 5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.6 10h2.4l-.5 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandPinterestIcon = {
	  name: 'BrandPinterestIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-pinterest",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "20",
	      "x2": "12",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.7 14c.437 1.263 1.43 2 2.55 2c2.071 0 3.75 -1.554 3.75 -4a5 5 0 1 0 -9.7 1.7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandPocketIcon = {
	  name: 'BrandPocketIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-pocket",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h14a2 2 0 0 1 2 2v6a9 9 0 0 1 -18 0v-6a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 11 12 15 16 11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandProducthuntIcon = {
	  name: 'BrandProducthuntIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-producthunt",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16v-8h2.5a2.5 2.5 0 1 1 0 5h-2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandPythonIcon = {
	  name: 'BrandPythonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-python",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9h-7a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15h7a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 9v-4a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v5a2 2 0 0 1 -2 2h-4a2 2 0 0 0 -2 2v5a2 2 0 0 0 2 2h4a2 2 0 0 0 2 -2v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "6",
	      "x2": "11",
	      "y2": "6.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "18",
	      "x2": "13",
	      "y2": "18.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandReactNativeIcon = {
	  name: 'BrandReactNativeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-react-native",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.357 9c-2.637 .68 -4.357 1.845 -4.357 3.175c0 2.107 4.405 3.825 9.85 3.825c.74 0 1.26 -.039 1.95 -.097"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.837 15.9c-.413 -.596 -.806 -1.133 -1.18 -1.8c-2.751 -4.9 -3.488 -9.77 -1.63 -10.873c1.15 -.697 3.047 .253 4.974 2.254"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.429 15.387c-.702 2.688 -.56 4.716 .56 5.395c1.783 1.08 5.387 -1.958 8.043 -6.804c.36 -.67 .683 -1.329 .968 -1.978"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18.52c1.928 2 3.817 2.95 4.978 2.253c1.85 -1.102 1.121 -5.972 -1.633 -10.873c-.384 -.677 -.777 -1.204 -1.18 -1.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.66 15c2.612 -.687 4.34 -1.85 4.34 -3.176c0 -2.11 -4.408 -3.824 -9.845 -3.824c-.747 0 -1.266 .029 -1.955 .087"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12c.285 -.66 .607 -1.308 .968 -1.978c2.647 -4.844 6.253 -7.89 8.046 -6.801c1.11 .679 1.262 2.706 .56 5.393"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.26 12.015h-.01c-.01 .13 -.12 .24 -.26 .24a0.263 .263 0 0 1 -.25 -.26c0 -.14 .11 -.25 .24 -.25h-.01c.13 -.01 .25 .11 .25 .24"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandRedditIcon = {
	  name: 'BrandRedditIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-reddit",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8c2.648 0 5.028 .826 6.675 2.14a2.5 2.5 0 0 1 2.326 4.36c0 3.59 -4.03 6.5 -9 6.5c-4.875 0 -8.845 -2.8 -9 -6.294l-1 -.206a2.5 2.5 0 0 1 2.326 -4.36c1.646 -1.313 4.026 -2.14 6.674 -2.14z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8l1 -5l6 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "4",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "13",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "13",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 17c.667 .333 1.333 .5 2 .5s1.333 -.167 2 -.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSafariIcon = {
	  name: 'BrandSafariIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-safari",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 16 10 10 16 8 14 14 8 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSassIcon = {
	  name: 'BrandSassIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-sass",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10.523c2.46 -.826 4.002 -.826 4.002 -2.155c0 -1.366 -1.347 -1.366 -2.735 -1.366c-1.91 0 -3.352 .49 -4.537 1.748c-.848 .902 -1.027 2.449 -.153 3.307c.973 .956 3.206 1.789 2.884 3.493c-.233 1.235 -1.469 1.823 -2.617 1.202c-.782 -.424 -.454 -1.746 .626 -2.512s2.822 -.992 4.1 -.24c.98 .575 1.046 1.724 .434 2.193"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSentryIcon = {
	  name: 'BrandSentryIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-sentry",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18a1.93 1.93 0 0 0 .306 1.076a2 2 0 0 0 1.584 .924c.646 .033 -.537 0 .11 0h3a4.992 4.992 0 0 0 -3.66 -4.81c.558 -.973 1.24 -2.149 2.04 -3.531a8.997 8.997 0 0 1 5.62 8.341h4c.663 0 2.337 .005 3 0a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-1.84 3.176c4.482 2.05 7.6 6.571 7.6 11.824"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandShazamIcon = {
	  name: 'BrandShazamIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-shazam",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12l2 -2a2.828 2.828 0 0 1 4 0a2.828 2.828 0 0 1 0 4l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 12l-2 2a2.828 2.828 0 1 1 -4 -4l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSketchIcon = {
	  name: 'BrandSketchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-sketch",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.262 10.878l8 8.789c.4 .44 1.091 .44 1.491 0l8 -8.79c.313 -.344 .349 -.859 .087 -1.243l-3.537 -5.194a1 1 0 0 0 -.823 -.436h-8.926a1 1 0 0 0 -.823 .436l-3.54 5.192c-.263 .385 -.227 .901 .087 1.246z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSkypeIcon = {
	  name: 'BrandSkypeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-skype",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a9 9 0 0 1 8.603 11.65a4.5 4.5 0 0 1 -5.953 5.953a9 9 0 0 1 -11.253 -11.253a4.5 4.5 0 0 1 5.953 -5.954a8.987 8.987 0 0 1 2.65 -.396z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 14.5c.5 2 2.358 2.5 4 2.5c2.905 0 4 -1.187 4 -2.5c0 -1.503 -1.927 -2.5 -4 -2.5s-4 -.997 -4 -2.5c0 -1.313 1.095 -2.5 4 -2.5c1.642 0 3.5 .5 4 2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSlackIcon = {
	  name: 'BrandSlackIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-slack",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v-6a2 2 0 0 1 4 0v6m0 -2a2 2 0 1 1 2 2h-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12h6a2 2 0 0 1 0 4h-6m2 0a2 2 0 1 1 -2 2v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v6a2 2 0 0 1 -4 0v-6m0 2a2 2 0 1 1 -2 -2h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12h-6a2 2 0 0 1 0 -4h6m-2 0a2 2 0 1 1 2 -2v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSnapchatIcon = {
	  name: 'BrandSnapchatIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-snapchat",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.882 7.842a4.882 4.882 0 0 0 -9.764 0c0 4.273 -.213 6.409 -4.118 8.118c2 .882 2 .882 3 3c3 0 4 2 6 2s3 -2 6 -2c1 -2.118 1 -2.118 3 -3c-3.906 -1.709 -4.118 -3.845 -4.118 -8.118zm-13.882 8.119c4 -2.118 4 -4.118 1 -7.118m17 7.118c-4 -2.118 -4 -4.118 -1 -7.118"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSoundcloudIcon = {
	  name: 'BrandSoundcloudIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-soundcloud",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 11h1c1.38 0 3 1.274 3 3c0 1.657 -1.5 3 -3 3l-6 0v-10c3 0 4.5 1.5 5 4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "8",
	      "x2": "9",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "17",
	      "x2": "6",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "16",
	      "x2": "3",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSpotifyIcon = {
	  name: 'BrandSpotifyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-spotify",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11.973c2.5 -1.473 5.5 -.973 7.5 .527"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15c1.5 -1 4 -1 5 .5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 9c2 -1 6 -2 10 .5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandStackoverflowIcon = {
	  name: 'BrandStackoverflowIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-stackoverflow",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 17v1a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.322 12.582l7.956 .836"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.787 9.168l7.826 1.664"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.096 5.764l7.608 2.472"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSteamIcon = {
	  name: 'BrandSteamIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-steam",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.5 5a4.5 4.5 0 1 1 -.653 8.953l-4.347 3.009l0 .038a3 3 0 0 1 -2.824 2.995l-.176 .005a3 3 0 0 1 -2.94 -2.402l-2.56 -1.098v-3.5l3.51 1.755a2.989 2.989 0 0 1 2.834 -.635l2.727 -3.818a4.5 4.5 0 0 1 4.429 -5.302z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "fill": "currentColor",
	      "cx": "16.5",
	      "cy": "9.5",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandStripeIcon = {
	  name: 'BrandStripeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-stripe",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.453 8.056c0 -.623 .518 -.979 1.442 -.979c1.69 0 3.41 .343 4.605 .923l.5 -4c-.948 -.449 -2.82 -1 -5.5 -1c-1.895 0 -3.373 .087 -4.5 1c-1.172 .956 -2 2.33 -2 4c0 3.03 1.958 4.906 5 6c1.961 .69 3 .743 3 1.5c0 .735 -.851 1.5 -2 1.5c-1.423 0 -3.963 -.609 -5.5 -1.5l-.5 4c1.321 .734 3.474 1.5 6 1.5c2.004 0 3.957 -.468 5.084 -1.36c1.263 -.979 1.916 -2.268 1.916 -4.14c0 -3.096 -1.915 -4.547 -5.003 -5.637c-1.646 -.605 -2.544 -1.07 -2.544 -1.807z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSublimeTextIcon = {
	  name: 'BrandSublimeTextIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-sublime-text",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 8l-14 4.5v-5.5l14 -4.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 17l-14 4.5v-5.5l14 -4.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 11.5l-14 -4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12.5l14 4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandSvelteIcon = {
	  name: 'BrandSvelteIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-svelte",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 8l-5 3l.821 -.495c1.86 -1.15 4.412 -.49 5.574 1.352a3.91 3.91 0 0 1 -1.264 5.42l-5.053 3.126c-1.86 1.151 -4.312 .591 -5.474 -1.251a3.91 3.91 0 0 1 1.263 -5.42l.26 -.16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 17l5 -3l-.822 .496c-1.86 1.151 -4.411 .491 -5.574 -1.351a3.91 3.91 0 0 1 1.264 -5.42l5.054 -3.127c1.86 -1.15 4.311 -.59 5.474 1.252a3.91 3.91 0 0 1 -1.264 5.42l-.26 .16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandTablerIcon = {
	  name: 'BrandTablerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-tabler",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 9l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "15",
	      "x2": "16",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandTailwindIcon = {
	  name: 'BrandTailwindIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-tailwind",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.667 6c-2.49 0 -4.044 1.222 -4.667 3.667c.933 -1.223 2.023 -1.68 3.267 -1.375c.71 .174 1.217 .68 1.778 1.24c.916 .912 2 1.968 4.288 1.968c2.49 0 4.044 -1.222 4.667 -3.667c-.933 1.223 -2.023 1.68 -3.267 1.375c-.71 -.174 -1.217 -.68 -1.778 -1.24c-.916 -.912 -1.975 -1.968 -4.288 -1.968zm-4 6.5c-2.49 0 -4.044 1.222 -4.667 3.667c.933 -1.223 2.023 -1.68 3.267 -1.375c.71 .174 1.217 .68 1.778 1.24c.916 .912 1.975 1.968 4.288 1.968c2.49 0 4.044 -1.222 4.667 -3.667c-.933 1.223 -2.023 1.68 -3.267 1.375c-.71 -.174 -1.217 -.68 -1.778 -1.24c-.916 -.912 -1.975 -1.968 -4.288 -1.968z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandTelegramIcon = {
	  name: 'BrandTelegramIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-telegram",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10l-4 4l6 6l4 -16l-18 7l4 2l2 6l3 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandTidalIcon = {
	  name: 'BrandTidalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-tidal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7l-2.5 2.5l2.5 2.5l2.5 -2.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14l-2.5 2.5l2.5 2.5l2.5 -2.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 7l-2.5 2.5l2.5 2.5l2.5 -2.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7l-2.5 2.5l2.5 2.5l2.5 -2.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandTiktokIcon = {
	  name: 'BrandTiktokIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-tiktok",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12a4 4 0 1 0 4 4v-12a5 5 0 0 0 5 5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandTinderIcon = {
	  name: 'BrandTinderIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-tinder",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.918 8.174c2.56 4.982 .501 11.656 -5.38 12.626c-7.702 1.687 -12.84 -7.716 -7.054 -13.229c.309 -.305 1.161 -1.095 1.516 -1.349c0 .528 .27 3.475 1 3.167c3 0 4 -4.222 3.587 -7.389c2.7 1.411 4.987 3.376 6.331 6.174z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandTripadvisorIcon = {
	  name: 'BrandTripadvisorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-tripadvisor",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6.5",
	      "cy": "13.5",
	      "r": "1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17.5",
	      "cy": "13.5",
	      "r": "1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.5 9a4.5 4.5 0 1 0 3.5 1.671l1 -1.671h-4.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 9a4.5 4.5 0 1 1 -3.5 1.671l-1 -1.671h4.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 15.5l1.5 2l1.5 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 6.75c2 -.667 4 -.667 6 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandTumblrIcon = {
	  name: 'BrandTumblrIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-tumblr",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 21h4v-4h-4v-6h4v-4h-4v-4h-4v1a3 3 0 0 1 -3 3h-1v4h4v6a4 4 0 0 0 4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandTwitchIcon = {
	  name: 'BrandTwitchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-twitch",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 5v11a1 1 0 0 0 1 1h2v4l4 -4h5.584c.266 0 .52 -.105 .707 -.293l2.415 -2.414c.187 -.188 .293 -.442 .293 -.708v-8.585a1 1 0 0 0 -1 -1h-14a1 1 0 0 0 -1 1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "8",
	      "x2": "16",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandTwitterIcon = {
	  name: 'BrandTwitterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-twitter",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c-.002 -.249 1.51 -2.772 1.818 -4.013z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandUberIcon = {
	  name: 'BrandUberIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-uber",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "9",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandUbuntuIcon = {
	  name: 'BrandUbuntuIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-ubuntu",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.723 7.41a7.992 7.992 0 0 0 -3.74 -2.162m-3.971 0a7.993 7.993 0 0 0 -3.789 2.216m-1.881 3.215a8 8 0 0 0 -.342 2.32c0 .738 .1 1.453 .287 2.132m1.96 3.428a7.993 7.993 0 0 0 3.759 2.19m3.998 -.003a7.993 7.993 0 0 0 3.747 -2.186m1.962 -3.43a8.008 8.008 0 0 0 .287 -2.131c0 -.764 -.107 -1.503 -.307 -2.203"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandUnsplashIcon = {
	  name: 'BrandUnsplashIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-unsplash",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 11h5v4h6v-4h5v9h-16zm5 -7h6v4h-6z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandVercelIcon = {
	  name: 'BrandVercelIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-vercel",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19h18l-9 -15z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandVimeoIcon = {
	  name: 'BrandVimeoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-vimeo",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 8.5l1 1s1.5 -1.102 2 -.5c.509 .609 1.863 7.65 2.5 9c.556 1.184 1.978 2.89 4 1.5c2 -1.5 7.5 -5.5 8.5 -11.5c.444 -2.661 -1 -4 -2.5 -4c-2 0 -4.047 1.202 -4.5 4c2.05 -1.254 2.551 1.003 1.5 3c-1.052 2.005 -2 3 -2.5 3c-.49 0 -.924 -1.165 -1.5 -3.5c-.59 -2.42 -.5 -6.5 -3 -6.5s-5.5 4.5 -5.5 4.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandVisualStudioIcon = {
	  name: 'BrandVisualStudioIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-visual-studio",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8l2 -1l10 13l4 -2v-12l-4 -2l-10 13l-2 -1z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandVkIcon = {
	  name: 'BrandVkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-vk",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 19h-4a8 8 0 0 1 -8 -8v-5h4v5a4 4 0 0 0 4 4h0v-9h4v4.5l.03 -.004a4.531 4.531 0 0 0 3.97 -4.496h4l-.342 1.711a6.858 6.858 0 0 1 -3.658 4.789h0a5.34 5.34 0 0 1 3.566 4.111l.434 2.389h0h-4a4.531 4.531 0 0 0 -3.97 -4.496v4.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandVueIcon = {
	  name: 'BrandVueIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-vue",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.5 5l-6.5 10l-6.5 -10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 5l-3 4.5l-3 -4.5h-7l10 16l10 -16z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandWhatsappIcon = {
	  name: 'BrandWhatsappIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-whatsapp",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21l1.65 -3.8a9 9 0 1 1 3.4 2.9l-5.05 .9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 10a0.5 .5 0 0 0 1 0v-1a0.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a0.5 .5 0 0 0 0 -1h-1a0.5 .5 0 0 0 0 1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandWindowsIcon = {
	  name: 'BrandWindowsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-windows",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.8 20l-12 -1.5c-1 -.1 -1.8 -.9 -1.8 -1.9v-9.2c0 -1 .8 -1.8 1.8 -1.9l12 -1.5c1.2 -.1 2.2 .8 2.2 1.9v12.1c0 1.2 -1.1 2.1 -2.2 1.9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandYahooIcon = {
	  name: 'BrandYahooIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-yahoo",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "6",
	      "x2": "8",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "18",
	      "x2": "14",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.5 6l5.5 7v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13l6 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12.5",
	      "y1": "8",
	      "x2": "17.5",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "11",
	      "x2": "20",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "18",
	      "x2": "20",
	      "y2": "18.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandYcombinatorIcon = {
	  name: 'BrandYcombinatorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-ycombinator",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 7.002l4 5.998l4 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "17",
	      "x2": "12",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrandYoutubeIcon = {
	  name: 'BrandYoutubeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brand-youtube",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 9l5 3l-5 3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BreadIcon = {
	  name: 'BreadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bread",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 5a3 3 0 0 1 2 5.235v6.765a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6.764a3 3 0 0 1 1.824 -5.231l.176 -.005h10z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BriefcaseIcon = {
	  name: 'BriefcaseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-briefcase",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "7",
	      "width": "18",
	      "height": "13",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 7v-2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 13a20 20 0 0 0 18 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Brightness2Icon = {
	  name: 'Brightness2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brightness-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6h3.5l2.5 -2.5l2.5 2.5h3.5v3.5l2.5 2.5l-2.5 2.5v3.5h-3.5l-2.5 2.5l-2.5 -2.5h-3.5v-3.5l-2.5 -2.5l2.5 -2.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrightnessDownIcon = {
	  name: 'BrightnessDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brightness-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "5.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "7",
	      "x2": "17",
	      "y2": "7.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "17",
	      "x2": "17",
	      "y2": "17.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "19",
	      "x2": "12",
	      "y2": "19.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "17",
	      "x2": "7",
	      "y2": "17.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "5",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "7",
	      "x2": "7",
	      "y2": "7.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrightnessHalfIcon = {
	  name: 'BrightnessHalfIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brightness-half",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9a3 3 0 0 0 0 6v-6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6h3.5l2.5 -2.5l2.5 2.5h3.5v3.5l2.5 2.5l-2.5 2.5v3.5h-3.5l-2.5 2.5l-2.5 -2.5h-3.5v-3.5l-2.5 -2.5l2.5 -2.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrightnessUpIcon = {
	  name: 'BrightnessUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brightness-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "7",
	      "x2": "18.4",
	      "y2": "5.6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "17",
	      "x2": "18.4",
	      "y2": "18.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "19",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "17",
	      "x2": "5.6",
	      "y2": "18.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "12",
	      "x2": "4",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "7",
	      "x2": "5.6",
	      "y2": "5.6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrightnessIcon = {
	  name: 'BrightnessIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brightness",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "16.65",
	      "y2": "4.35"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14.3",
	      "x2": "19.37",
	      "y2": "6.93"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "19.6",
	      "x2": "20.85",
	      "y2": "10.75"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrowserCheckIcon = {
	  name: 'BrowserCheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-browser-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 14.5l1.5 1.5l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrowserOffIcon = {
	  name: 'BrowserOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-browser-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4h11a1 1 0 0 1 1 1v11m-.288 3.702a0.997 .997 0 0 1 -.712 .298h-14a1 1 0 0 1 -1 -1v-14c0 -.276 .112 -.526 .293 -.707"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8h4m4 0h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrowserPlusIcon = {
	  name: 'BrowserPlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-browser-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrowserXIcon = {
	  name: 'BrowserXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-browser-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 16l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrowserIcon = {
	  name: 'BrowserIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-browser",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "8",
	      "y2": "8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrushOffIcon = {
	  name: 'BrushOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brush-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17a4 4 0 1 1 4 4h-4v-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 3a15.996 15.996 0 0 0 -9.309 4.704m-1.795 2.212a15.993 15.993 0 0 0 -1.696 3.284"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 3a15.996 15.996 0 0 1 -4.697 9.302m-2.195 1.786a15.993 15.993 0 0 1 -3.308 1.712"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BrushIcon = {
	  name: 'BrushIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-brush",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21v-4a4 4 0 1 1 4 4h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 3a16 16 0 0 0 -12.8 10.2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 3a16 16 0 0 1 -10.2 12.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.6 9a9 9 0 0 1 4.4 4.4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BucketIcon = {
	  name: 'BucketIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bucket",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 9l-2 9a2 2.5 0 0 1 -2 2h-6a2 2.5 0 0 1 -2 -2l-2 -9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 9a5 5 0 0 1 10 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BugOffIcon = {
	  name: 'BugOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bug-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.884 5.873a3 3 0 0 1 5.116 2.127v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 9h3a6 6 0 0 1 1 3v1m-.298 3.705a5.002 5.002 0 0 1 -9.702 -1.705v-3a6 6 0 0 1 1 -3h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 13h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 13h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 19l3.35 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 7l3.75 2.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 7l-3.75 2.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BugIcon = {
	  name: 'BugIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bug",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 9v-1a3 3 0 0 1 6 0v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 9h8a6 6 0 0 1 1 3v3a5 5 0 0 1 -10 0v-3a6 6 0 0 1 1 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "13",
	      "x2": "7",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "13",
	      "x2": "21",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "12",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "19",
	      "x2": "7.35",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "19",
	      "x2": "16.65",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "7",
	      "x2": "7.75",
	      "y2": "9.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "7",
	      "x2": "16.25",
	      "y2": "9.4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingArchIcon = {
	  name: 'BuildingArchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-arch",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21v-15a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 21v-8a3 3 0 0 1 6 0v8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingBankIcon = {
	  name: 'BuildingBankIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-bank",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "10",
	      "x2": "21",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "5 6 12 3 19 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "10",
	      "x2": "4",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "10",
	      "x2": "20",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "14",
	      "x2": "8",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14",
	      "x2": "12",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "14",
	      "x2": "16",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingBridge2Icon = {
	  name: 'BuildingBridge2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-bridge-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 7h12a2 2 0 0 1 2 2v9a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-2a4 4 0 0 0 -8 0v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-9a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingBridgeIcon = {
	  name: 'BuildingBridgeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-bridge",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "5",
	      "x2": "6",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "5",
	      "x2": "18",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "2",
	      "y1": "15",
	      "x2": "22",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 8a7.5 7.5 0 0 0 3 -2a6.5 6.5 0 0 0 12 0a7.5 7.5 0 0 0 3 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "10",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingCarouselIcon = {
	  name: 'BuildingCarouselIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-carousel",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "8",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "4",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "8",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "16",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "16",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 22l4 -10l4 10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingCastleIcon = {
	  name: 'BuildingCastleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-castle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 19v-2a3 3 0 0 0 -6 0v2a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-14h4v3h3v-3h4v3h3v-3h4v14a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "11",
	      "x2": "21",
	      "y2": "11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingChurchIcon = {
	  name: 'BuildingChurchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-church",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 21v-4a2 2 0 0 1 4 0v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "5",
	      "x2": "14",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21v-7m-2 2l8 -8l8 8m-2 -2v7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingCommunityIcon = {
	  name: 'BuildingCommunityIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-community",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 9l5 5v7h-5v-4m0 4h-5v-7l5 -5m1 1v-6a1 1 0 0 1 1 -1h10a1 1 0 0 1 1 1v17h-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "7",
	      "x2": "13",
	      "y2": "7.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "7",
	      "x2": "17",
	      "y2": "7.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "11",
	      "x2": "17",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "15",
	      "x2": "17",
	      "y2": "15.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingCottageIcon = {
	  name: 'BuildingCottageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-cottage",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21v-11l2.5 -4.5l5.5 -2.5l5.5 2.5l2.5 4.5v11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "9",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 21v-5a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingFactory2Icon = {
	  name: 'BuildingFactory2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-factory-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-12l5 4v-4l5 4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 21v-8l-1.436 -9.574a0.5 .5 0 0 0 -.495 -.426h-1.145a0.5 .5 0 0 0 -.494 .418l-1.43 8.582"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 17h1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingFactoryIcon = {
	  name: 'BuildingFactoryIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-factory",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21c1.147 -4.02 1.983 -8.027 2 -12h6c.017 3.973 .853 7.98 2 12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.5 13h4.5c.025 2.612 .894 5.296 2 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "22",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingFortressIcon = {
	  name: 'BuildingFortressIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-fortress",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 21h1a1 1 0 0 0 1 -1v-1h0a3 3 0 0 1 6 0m3 2h1a1 1 0 0 0 1 -1v-15l-3 -2l-3 2v6h-4v-6l-3 -2l-3 2v15a1 1 0 0 0 1 1h2m8 -2v1a1 1 0 0 0 1 1h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 7h0v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 10h0v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 13h0v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 7h0v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 10h0v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 13h0v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingHospitalIcon = {
	  name: 'BuildingHospitalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-hospital",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 21v-4a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "9",
	      "x2": "14",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "7",
	      "x2": "12",
	      "y2": "11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingLighthouseIcon = {
	  name: 'BuildingLighthouseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-lighthouse",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3l2 3l2 15h-8l2 -15z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "9",
	      "x2": "16",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 11l2 -2l-2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 11l-2 -2l2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingMonumentIcon = {
	  name: 'BuildingMonumentIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-monument",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 18l2 -13l2 -2l2 2l2 13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-3h14v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingPavilonIcon = {
	  name: 'BuildingPavilonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-pavilon",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21h7v-3a2 2 0 0 1 4 0v3h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "21",
	      "x2": "6",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "21",
	      "x2": "18",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 12h12a3 3 0 0 0 3 -3a9 8 0 0 1 -9 -6a9 8 0 0 1 -9 6a3 3 0 0 0 3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingSkyscraperIcon = {
	  name: 'BuildingSkyscraperIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-skyscraper",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-14l8 -4v18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 21v-10l-6 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "9",
	      "x2": "9",
	      "y2": "9.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "9",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "15",
	      "x2": "9",
	      "y2": "15.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "18",
	      "x2": "9",
	      "y2": "18.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingStoreIcon = {
	  name: 'BuildingStoreIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-store",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7v1a3 3 0 0 0 6 0v-1m0 1a3 3 0 0 0 6 0v-1m0 1a3 3 0 0 0 6 0v-1h-18l2 -4h14l2 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "21",
	      "x2": "5",
	      "y2": "10.85"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "21",
	      "x2": "19",
	      "y2": "10.85"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 21v-4a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingWarehouseIcon = {
	  name: 'BuildingWarehouseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building-warehouse",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21v-13l9 -4l9 4v13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 13h4v8h-10v-6h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 21v-9a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BuildingIcon = {
	  name: 'BuildingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-building",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "8",
	      "x2": "10",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "10",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "16",
	      "x2": "10",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "8",
	      "x2": "15",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "16",
	      "x2": "15",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BulbOffIcon = {
	  name: 'BulbOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bulb-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.089 7.083a5 5 0 0 1 5.826 5.84m-1.378 2.611a5.012 5.012 0 0 1 -.537 .466a3.5 3.5 0 0 0 -1 3a2 2 0 1 1 -4 0a3.5 3.5 0 0 0 -1 -3a5 5 0 0 1 -.528 -7.544"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.7 17h4.6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BulbIcon = {
	  name: 'BulbIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bulb",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 16a5 5 0 1 1 6 0a3.5 3.5 0 0 0 -1 3a2 2 0 0 1 -4 0a3.5 3.5 0 0 0 -1 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9.7",
	      "y1": "17",
	      "x2": "14.3",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BulldozerIcon = {
	  name: 'BulldozerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bulldozer",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "4",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "13",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 13v6h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "19",
	      "x2": "4",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "15",
	      "x2": "13",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12v-5h2a3 3 0 0 1 3 3v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 15v-2a1 1 0 0 1 1 -1h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "17",
	      "x2": "15",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BusIcon = {
	  name: 'BusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-bus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 17h-2v-11a1 1 0 0 1 1 -1h14a5 7 0 0 1 5 7v5h-2m-4 0h-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 5 17.5 12 22 12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "2",
	      "y1": "10",
	      "x2": "17",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "5",
	      "x2": "7",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var BusinessplanIcon = {
	  name: 'BusinessplanIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-businessplan",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("     "), vue.createVNode("ellipse", {
	      "cx": "16",
	      "cy": "6",
	      "rx": "5",
	      "ry": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 6v4c0 1.657 2.239 3 5 3s5 -1.343 5 -3v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 10v4c0 1.657 2.239 3 5 3s5 -1.343 5 -3v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 14v4c0 1.657 2.239 3 5 3s5 -1.343 5 -3v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 9h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 15v1m0 -8v1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ButterflyIcon = {
	  name: 'ButterflyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-butterfly",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.995 18.176a3 3 0 1 1 -4.953 -2.449l-.025 .023a4.502 4.502 0 0 1 1.483 -8.75c1.414 0 2.675 .652 3.5 1.671a4.5 4.5 0 1 1 4.983 7.079a3 3 0 1 1 -4.983 2.25z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 3l3 2l3 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CSharpIcon = {
	  name: 'CSharpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-c-sharp",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 9a3 3 0 0 0 -3 -3h-.5a3.5 3.5 0 0 0 -3.5 3.5v5a3.5 3.5 0 0 0 3.5 3.5h.5a3 3 0 0 0 3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 7l-1 10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 7l-1 10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10h7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 14h-7.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CakeIcon = {
	  name: 'CakeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cake",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 20h18v-8a3 3 0 0 0 -3 -3h-12a3 3 0 0 0 -3 3v8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2.996 14.803c.312 .135 .654 .204 1.004 .197a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1c.35 .007 .692 -.062 1.004 -.197"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4l1.465 1.638a2 2 0 1 1 -3.015 .099l1.55 -1.737z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CalculatorOffIcon = {
	  name: 'CalculatorOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-calculator-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.823 19.824a2 2 0 0 1 -1.823 1.176h-12a2 2 0 0 1 -2 -2v-14c0 -.295 .064 -.575 .178 -.827m2.822 -1.173h11a2 2 0 0 1 2 2v11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10h-1a1 1 0 0 1 -1 -1v-1m3 -1h4a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 14v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 17v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 17v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CalculatorIcon = {
	  name: 'CalculatorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-calculator",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "3",
	      "width": "16",
	      "height": "18",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "7",
	      "width": "8",
	      "height": "3",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "14",
	      "x2": "8",
	      "y2": "14.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14",
	      "x2": "12",
	      "y2": "14.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "14",
	      "x2": "16",
	      "y2": "14.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "17",
	      "x2": "8",
	      "y2": "17.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "17",
	      "x2": "12",
	      "y2": "17.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "17",
	      "x2": "16",
	      "y2": "17.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CalendarEventIcon = {
	  name: 'CalendarEventIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-calendar-event",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "5",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "3",
	      "x2": "16",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "3",
	      "x2": "8",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "11",
	      "x2": "20",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "15",
	      "width": "2",
	      "height": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CalendarMinusIcon = {
	  name: 'CalendarMinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-calendar-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "5",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "3",
	      "x2": "16",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "3",
	      "x2": "8",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "11",
	      "x2": "20",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "16",
	      "x2": "14",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CalendarOffIcon = {
	  name: 'CalendarOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-calendar-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.823 19.824a2 2 0 0 1 -1.823 1.176h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 1.175 -1.823m3.825 -.177h9a2 2 0 0 1 2 2v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "3",
	      "x2": "16",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "3",
	      "x2": "8",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 11h7m4 0h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "15",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "15",
	      "x2": "12",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CalendarPlusIcon = {
	  name: 'CalendarPlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-calendar-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "5",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "3",
	      "x2": "16",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "3",
	      "x2": "8",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "11",
	      "x2": "20",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "16",
	      "x2": "14",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14",
	      "x2": "12",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CalendarStatsIcon = {
	  name: 'CalendarStatsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-calendar-stats",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.795 21h-6.795a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 14v4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "18",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 3v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 11h16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CalendarTimeIcon = {
	  name: 'CalendarTimeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-calendar-time",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.795 21h-6.795a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "18",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 3v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 11h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 16.496v1.504l1 1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CalendarIcon = {
	  name: 'CalendarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-calendar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "5",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "3",
	      "x2": "16",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "3",
	      "x2": "8",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "11",
	      "x2": "20",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "15",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "15",
	      "x2": "12",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CameraMinusIcon = {
	  name: 'CameraMinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-camera-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "13",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h3m9 6v8a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "6",
	      "x2": "21",
	      "y2": "6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CameraOffIcon = {
	  name: 'CameraOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-camera-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.29 4.296a1 1 0 0 1 .71 -.296h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v8m-1.179 2.824c-.25 .113 -.528 .176 -.821 .176h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1c.292 0 .568 -.062 .818 -.175"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.436 10.44a3 3 0 1 0 4.126 4.122"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CameraPlusIcon = {
	  name: 'CameraPlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-camera-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "13",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7h2a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h2m9 7v7a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "6",
	      "x2": "21",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "3",
	      "x2": "18",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CameraRotateIcon = {
	  name: 'CameraRotateIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-camera-rotate",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.245 15.904a3 3 0 0 0 3.755 -2.904m-2.25 -2.905a3 3 0 0 0 -3.75 2.905"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 13h2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13h-2v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CameraSelfieIcon = {
	  name: 'CameraSelfieIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-camera-selfie",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 15a3.5 3.5 0 0 0 5 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "11",
	      "x2": "15.01",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "11",
	      "x2": "9.01",
	      "y2": "11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CameraIcon = {
	  name: 'CameraIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-camera",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "13",
	      "r": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CandleIcon = {
	  name: 'CandleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-candle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 21h6v-9a1 1 0 0 0 -1 -1h-4a1 1 0 0 0 -1 1v9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3l1.465 1.638a2 2 0 1 1 -3.015 .099l1.55 -1.737z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CandyOffIcon = {
	  name: 'CandyOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-candy-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.174 7.17l.119 -.12a2 2 0 0 1 2.828 0l2.829 2.83a2 2 0 0 1 0 2.828l-.124 .124m-1.996 1.996l-2.123 2.123a2 2 0 0 1 -2.828 0l-2.829 -2.831a2 2 0 0 1 0 -2.828l2.113 -2.112"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.243 9.172l3.086 -.772a1.5 1.5 0 0 0 .697 -2.516l-2.216 -2.217a1.5 1.5 0 0 0 -2.44 .47l-1.248 2.913"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.172 16.243l-.772 3.086a1.5 1.5 0 0 1 -2.516 .697l-2.217 -2.216a1.5 1.5 0 0 1 .47 -2.44l2.913 -1.248"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CandyIcon = {
	  name: 'CandyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-candy",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.05 11.293l4.243 -4.243a2 2 0 0 1 2.828 0l2.829 2.83a2 2 0 0 1 0 2.828l-4.243 4.243a2 2 0 0 1 -2.828 0l-2.829 -2.831a2 2 0 0 1 0 -2.828z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.243 9.172l3.086 -.772a1.5 1.5 0 0 0 .697 -2.516l-2.216 -2.217a1.5 1.5 0 0 0 -2.44 .47l-1.248 2.913"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.172 16.243l-.772 3.086a1.5 1.5 0 0 1 -2.516 .697l-2.217 -2.216a1.5 1.5 0 0 1 .47 -2.44l2.913 -1.248"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CaptureOffIcon = {
	  name: 'CaptureOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-capture-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v2a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2c.554 0 1.055 -.225 1.417 -.589"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.87 9.887a3 3 0 0 0 4.255 4.23m.58 -3.416a3.012 3.012 0 0 0 -1.4 -1.403"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v-2c0 -.548 .22 -1.044 .577 -1.405"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CaptureIcon = {
	  name: 'CaptureIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-capture",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v-2a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v2a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CarCraneIcon = {
	  name: 'CarCraneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-car-crane",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18h8m4 0h2v-6a5 5 0 0 0 -5 -5h-1l1.5 5h4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18v-11h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17v-5h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v-6l18 -3v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12v-4l-4 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CarCrashIcon = {
	  name: 'CarCrashIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-car-crash",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 6l4 5h1a2 2 0 0 1 2 2v4h-2m-4 0h-5m0 -6h8m-6 0v-5m2 0h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 8v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 12h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.5 15.5l1.5 1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.5 8.5l1.5 -1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CarOffIcon = {
	  name: 'CarOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-car-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.584 15.588a2 2 0 0 0 2.828 2.83"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 17h-2v-6l2 -5h1m4 0h4l4 5h1a2 2 0 0 1 2 2v4m-6 0h-6m-6 -6h8m4 0h3m-6 -3v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CarIcon = {
	  name: 'CarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-car",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 17h-2v-6l2 -5h9l4 5h1a2 2 0 0 1 2 2v4h-2m-4 0h-6m-6 -6h15m-6 0v-5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CaravanIcon = {
	  name: 'CaravanIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-caravan",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "11",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "17",
	      "x2": "13",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17h-5a1 1 0 0 1 -1 -1v-9a2 2 0 0 1 2 -2h10l4 4v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "8",
	      "width": "6",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CardboardsOffIcon = {
	  name: 'CardboardsOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cardboards-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.96 16.953c.026 -.147 .04 -.298 .04 -.453v-8.5a2 2 0 0 0 -2 -2h-9m-4 0h-1a2 2 0 0 0 -2 2v8.5a2.5 2.5 0 0 0 2.5 2.5h1.06a3 3 0 0 0 2.34 -1.13l1.54 -1.92a2 2 0 0 1 3.12 0l1.54 1.92a3 3 0 0 0 2.34 1.13h1.06c.155 0 .307 -.014 .454 -.041"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.714 12.7a1 1 0 0 0 -1.417 -1.411l1.417 1.41z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CardboardsIcon = {
	  name: 'CardboardsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cardboards",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 8v8.5a2.5 2.5 0 0 0 2.5 2.5h1.06a3 3 0 0 0 2.34 -1.13l1.54 -1.92a2 2 0 0 1 3.12 0l1.54 1.92a3 3 0 0 0 2.34 1.13h1.06a2.5 2.5 0 0 0 2.5 -2.5v-8.5a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CaretDownIcon = {
	  name: 'CaretDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-caret-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l-6 -6l-6 6h12",
	      "transform": "rotate(180 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CaretLeftIcon = {
	  name: 'CaretLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-caret-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l-6 -6l-6 6h12",
	      "transform": "rotate(270 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CaretRightIcon = {
	  name: 'CaretRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-caret-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l-6 -6l-6 6h12",
	      "transform": "rotate(90 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CaretUpIcon = {
	  name: 'CaretUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-caret-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l-6 -6l-6 6h12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CashBanknoteOffIcon = {
	  name: 'CashBanknoteOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cash-banknote-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.88 9.878a3 3 0 1 0 4.242 4.243m.58 -3.425a3.012 3.012 0 0 0 -1.412 -1.405"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6h9a2 2 0 0 1 2 2v8c0 .294 -.064 .574 -.178 .825m-2.822 1.175h-13a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "12",
	      "x2": "18.01",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "12",
	      "x2": "6.01",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CashBanknoteIcon = {
	  name: 'CashBanknoteIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cash-banknote",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "6",
	      "width": "18",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "12",
	      "x2": "18.01",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "12",
	      "x2": "6.01",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CashIcon = {
	  name: 'CashIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cash",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "9",
	      "width": "14",
	      "height": "10",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "14",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 9v-2a2 2 0 0 0 -2 -2h-10a2 2 0 0 0 -2 2v6a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CastOffIcon = {
	  name: 'CastOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cast-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 19a4 4 0 0 0 -4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 19a8 8 0 0 0 -8 -8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 19h3a3 3 0 0 0 .875 -.13m1.997 -2.002a3 3 0 0 0 .128 -.868v-8a3 3 0 0 0 -3 -3h-9m-3.865 .136a3 3 0 0 0 -1.935 1.864"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CastIcon = {
	  name: 'CastIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cast",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "19",
	      "x2": "3.01",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 19a4 4 0 0 0 -4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 19a8 8 0 0 0 -8 -8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 19h3a3 3 0 0 0 3 -3v-8a3 3 0 0 0 -3 -3h-12a3 3 0 0 0 -2.8 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CeOffIcon = {
	  name: 'CeOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ce-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 4a7.99 7.99 0 0 0 -2.581 .426"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.867 5.864a8 8 0 0 0 5.133 14.136"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4a8.001 8.001 0 0 0 -7.29 4.7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12a8 8 0 0 0 8 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 12h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CeIcon = {
	  name: 'CeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ce",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 4a8 8 0 1 0 0 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4a8 8 0 1 0 0 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CellSignal1Icon = {
	  name: 'CellSignal1Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cell-signal-1",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20h-15.269a0.731 .731 0 0 1 -.517 -1.249l14.537 -14.537a0.731 .731 0 0 1 1.249 .517v15.269z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CellSignal2Icon = {
	  name: 'CellSignal2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cell-signal-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20h-15.269a0.731 .731 0 0 1 -.517 -1.249l14.537 -14.537a0.731 .731 0 0 1 1.249 .517v15.269z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 20v-5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CellSignal3Icon = {
	  name: 'CellSignal3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cell-signal-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20h-15.269a0.731 .731 0 0 1 -.517 -1.249l14.537 -14.537a0.731 .731 0 0 1 1.249 .517v15.269z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20v-9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CellSignal4Icon = {
	  name: 'CellSignal4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cell-signal-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20h-15.269a0.731 .731 0 0 1 -.517 -1.249l14.537 -14.537a0.731 .731 0 0 1 1.249 .517v15.269z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 7v13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CellSignal5Icon = {
	  name: 'CellSignal5Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cell-signal-5",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20h-15.269a0.731 .731 0 0 1 -.517 -1.249l14.537 -14.537a0.731 .731 0 0 1 1.249 .517v15.269z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 7v13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20v-9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 20v-5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CellSignalOffIcon = {
	  name: 'CellSignalOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cell-signal-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20h-15.269a0.731 .731 0 0 1 -.517 -1.249l7.265 -7.264m2 -2.001l5.272 -5.272a0.731 .731 0 0 1 1.249 .517v11.269"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CellIcon = {
	  name: 'CellIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cell",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4l-4 2v5l4 2l4 -2v-5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11l4 2l4 -2v-5l-4 -2l-4 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v5l4 2l4 -2v-5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Certificate2OffIcon = {
	  name: 'Certificate2OffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-certificate-2-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12a3 3 0 1 0 3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 18v4l2 -1l2 1v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 19h-2a2 2 0 0 1 -2 -2v-11m1.18 -2.825c.25 -.112 .529 -.175 .82 -.175h8a2 2 0 0 1 2 2v9m-.175 3.82a2 2 0 0 1 -1.825 1.18h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Certificate2Icon = {
	  name: 'Certificate2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-certificate-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "15",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 7h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 18v4l2 -1l2 1v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 19h-2a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CertificateOffIcon = {
	  name: 'CertificateOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-certificate-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.876 12.881a3 3 0 0 0 4.243 4.243m.588 -3.42a3.012 3.012 0 0 0 -1.437 -1.423"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 17.5v4.5l2 -1.5l2 1.5v-4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 19h-5a2 2 0 0 1 -2 -2v-10c0 -1.1 .9 -2 2 -2m4 0h10a2 2 0 0 1 2 2v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 9h3m4 0h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 12h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CertificateIcon = {
	  name: 'CertificateIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-certificate",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "15",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 17.5v4.5l2 -1.5l2 1.5v-4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 19h-5a2 2 0 0 1 -2 -2v-10c0 -1.1 .9 -2 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -1 1.73"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "9",
	      "x2": "18",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "12",
	      "x2": "9",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "15",
	      "x2": "8",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChargingPileIcon = {
	  name: 'ChargingPileIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-charging-pile",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "7",
	      "x2": "17",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 11h1a2 2 0 0 1 2 2v3a1.5 1.5 0 0 0 3 0v-7l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20v-14a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 11.5l-1.5 2.5h3l-1.5 2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "20",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "14",
	      "y2": "8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartArcs3Icon = {
	  name: 'ChartArcs3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-arcs-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12a5 5 0 1 0 5 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.29 18.957a9 9 0 1 0 5.71 -15.957"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartArcsIcon = {
	  name: 'ChartArcsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-arcs",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.924 11.132a5 5 0 1 0 -4.056 5.792"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12a9 9 0 1 0 9 -9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartAreaLineIcon = {
	  name: 'ChartAreaLineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-area-line",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "4 19 8 13 12 15 16 10 20 14 20 19 4 19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "4 12 7 8 11 10 16 4 20 8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartAreaIcon = {
	  name: 'ChartAreaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-area",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "19",
	      "x2": "20",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "4 15 8 9 12 11 16 6 20 10 20 15 4 15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartArrowsVerticalIcon = {
	  name: 'ChartArrowsVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-arrows-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 21v-14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15l3 -3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10l3 -3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "21",
	      "x2": "12",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6l3 -3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21v-18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartArrowsIcon = {
	  name: 'ChartArrowsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-arrows",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "18",
	      "x2": "17",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 9l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 15l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "3",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 3l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "6",
	      "x2": "21",
	      "y2": "6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartBarIcon = {
	  name: 'ChartBarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-bar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "12",
	      "width": "6",
	      "height": "8",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "8",
	      "width": "6",
	      "height": "12",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "15",
	      "y": "4",
	      "width": "6",
	      "height": "16",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "18",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartBubbleIcon = {
	  name: 'ChartBubbleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-bubble",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "16",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14.5",
	      "cy": "7.5",
	      "r": "4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartCandleIcon = {
	  name: 'ChartCandleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-candle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "6",
	      "width": "4",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "4",
	      "x2": "6",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "11",
	      "x2": "6",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "10",
	      "y": "14",
	      "width": "4",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "19",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "16",
	      "y": "5",
	      "width": "4",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "4",
	      "x2": "18",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "11",
	      "x2": "18",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartCirclesIcon = {
	  name: 'ChartCirclesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-circles",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9.5",
	      "cy": "9.5",
	      "r": "5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14.5",
	      "cy": "14.5",
	      "r": "5.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartDonut2Icon = {
	  name: 'ChartDonut2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-donut-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v5m4 4h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartDonut3Icon = {
	  name: 'ChartDonut3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-donut-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v5m4 4h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.929 14.582l-3.429 2.918"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartDonut4Icon = {
	  name: 'ChartDonut4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-donut-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.848 14.667l-3.348 2.833"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v5m4 4h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.219 15.328l2.781 4.172"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartDonutIcon = {
	  name: 'ChartDonutIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-donut",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 3.2a9 9 0 1 0 10.8 10.8a1 1 0 0 0 -1 -1h-3.8a4.1 4.1 0 1 1 -5 -5v-4a0.9 .9 0 0 0 -1 -.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3.5a9 9 0 0 1 5.5 5.5h-4.5a9 9 0 0 0 -1 -1v-4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartDots2Icon = {
	  name: 'ChartDots2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-dots-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3v18h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "15",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "13",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 3l-6 1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.113 6.65l2.771 3.695"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 12.5l-5 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartDots3Icon = {
	  name: 'ChartDots3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-dots-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "7",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16",
	      "cy": "15",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "6",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "18",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17l5 -1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 8.5l7.81 5.37"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 7l8 -1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartDotsIcon = {
	  name: 'ChartDotsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-dots",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3v18h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "9",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "7",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "15",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10.16",
	      "y1": "10.62",
	      "x2": "12.5",
	      "y2": "13.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.088 13.328l2.837 -4.586"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartInfographicIcon = {
	  name: 'ChartInfographicIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-infographic",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "7",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 3v4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "17",
	      "x2": "9",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "14",
	      "x2": "17",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "13",
	      "x2": "13",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "12",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartLineIcon = {
	  name: 'ChartLineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-line",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "19",
	      "x2": "20",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "4 15 8 9 12 11 16 6 20 10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartPie2Icon = {
	  name: 'ChartPie2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-pie-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v9h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartPie3Icon = {
	  name: 'ChartPie3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-pie-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-6.5 5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v9h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartPie4Icon = {
	  name: 'ChartPie4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-pie-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-6.5 5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v9h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l5 7.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartPieIcon = {
	  name: 'ChartPieIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-pie",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 3.2a9 9 0 1 0 10.8 10.8a1 1 0 0 0 -1 -1h-6.8a2 2 0 0 1 -2 -2v-7a0.9 .9 0 0 0 -1 -.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3.5a9 9 0 0 1 5.5 5.5h-4.5a1 1 0 0 1 -1 -1v-4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChartRadarIcon = {
	  name: 'ChartRadarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chart-radar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3l9.5 7l-3.5 11h-12l-3.5 -11z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7.5l5.5 4l-2.5 5.5h-6.5l-2 -5.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2.5 10l9.5 3l9.5 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v10l6 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21l6 -8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CheckIcon = {
	  name: 'CheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12l5 5l10 -10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CheckboxIcon = {
	  name: 'CheckboxIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-checkbox",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "9 11 12 14 20 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12v6a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChecklistIcon = {
	  name: 'ChecklistIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-checklist",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.615 20h-2.615a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 19l2 2l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 8h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChecksIcon = {
	  name: 'ChecksIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-checks",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12l5 5l10 -10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 12l5 5m5 -5l5 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CheckupListIcon = {
	  name: 'CheckupListIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-checkup-list",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 14h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16l1 1l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CheeseIcon = {
	  name: 'CheeseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cheese",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.519 20.008l16.481 -.008v-3.5a2 2 0 1 1 0 -4v-3.5h-16.722"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 9l-9.385 -4.992c-2.512 .12 -4.758 1.42 -6.327 3.425c-1.423 1.82 -2.288 4.221 -2.288 6.854c0 2.117 .56 4.085 1.519 5.721"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 13v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 16v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronDownLeftIcon = {
	  name: 'ChevronDownLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevron-down-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8v8h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronDownRightIcon = {
	  name: 'ChevronDownRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevron-down-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8v8h-8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronDownIcon = {
	  name: 'ChevronDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevron-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "6 9 12 15 18 9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronLeftIcon = {
	  name: 'ChevronLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevron-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "15 6 9 12 15 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronRightIcon = {
	  name: 'ChevronRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevron-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "9 6 15 12 9 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronUpLeftIcon = {
	  name: 'ChevronUpLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevron-up-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16v-8h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronUpRightIcon = {
	  name: 'ChevronUpRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevron-up-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8h8v8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronUpIcon = {
	  name: 'ChevronUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevron-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "6 15 12 9 18 15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronsDownLeftIcon = {
	  name: 'ChevronsDownLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevrons-down-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 5v8h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 9v8h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronsDownRightIcon = {
	  name: 'ChevronsDownRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevrons-down-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 5v8h-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 9v8h-8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronsDownIcon = {
	  name: 'ChevronsDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevrons-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 7 12 12 17 7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 13 12 18 17 13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronsLeftIcon = {
	  name: 'ChevronsLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevrons-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "11 7 6 12 11 17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "17 7 12 12 17 17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronsRightIcon = {
	  name: 'ChevronsRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevrons-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 7 12 12 7 17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "13 7 18 12 13 17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronsUpLeftIcon = {
	  name: 'ChevronsUpLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevrons-up-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 15v-8h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 19v-8h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronsUpRightIcon = {
	  name: 'ChevronsUpRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevrons-up-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 7h8v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 11h8v8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChevronsUpIcon = {
	  name: 'ChevronsUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-chevrons-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 11 12 6 17 11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 17 12 12 17 17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ChristmasTreeIcon = {
	  name: 'ChristmasTreeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-christmas-tree",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3l4 4l-2 1l4 4l-3 1l4 4h-14l4 -4l-3 -1l4 -4l-2 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 17v3a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Circle0Icon = {
	  name: 'Circle0Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-0",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Circle1Icon = {
	  name: 'Circle1Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-1",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16v-8l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Circle2Icon = {
	  name: 'Circle2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10a2 2 0 1 1 4 0c0 .591 -.417 1.318 -.816 1.858l-3.184 4.143l4 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Circle3Icon = {
	  name: 'Circle3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12a2 2 0 1 0 -2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14a2 2 0 1 0 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Circle4Icon = {
	  name: 'Circle4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 16v-8l-4 6h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Circle5Icon = {
	  name: 'Circle5Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-5",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16h2a2 2 0 1 0 0 -4h-2v-4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Circle6Icon = {
	  name: 'Circle6Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-6",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10a2 2 0 1 0 -4 0v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Circle7Icon = {
	  name: 'Circle7Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-7",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 8h4l-2 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Circle8Icon = {
	  name: 'Circle8Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-8",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "10",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Circle9Icon = {
	  name: 'Circle9Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-9",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "10",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14a2 2 0 1 0 4 0v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleCheckIcon = {
	  name: 'CircleCheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12l2 2l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleDashedIcon = {
	  name: 'CircleDashedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-dashed",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.56 3.69a9 9 0 0 0 -2.92 1.95"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.69 8.56a9 9 0 0 0 -.69 3.44"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.69 15.44a9 9 0 0 0 1.95 2.92"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.56 20.31a9 9 0 0 0 3.44 .69"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.44 20.31a9 9 0 0 0 2.92 -1.95"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.31 15.44a9 9 0 0 0 .69 -3.44"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.31 8.56a9 9 0 0 0 -1.95 -2.92"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.44 3.69a9 9 0 0 0 -3.44 -.69"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleDotIcon = {
	  name: 'CircleDotIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-dot",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleDottedIcon = {
	  name: 'CircleDottedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-dotted",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7.5",
	      "y1": "4.21",
	      "x2": "7.5",
	      "y2": "4.22"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4.21",
	      "y1": "7.5",
	      "x2": "4.21",
	      "y2": "7.51"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "3",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4.21",
	      "y1": "16.5",
	      "x2": "4.21",
	      "y2": "16.51"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7.5",
	      "y1": "19.79",
	      "x2": "7.5",
	      "y2": "19.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "21",
	      "x2": "12",
	      "y2": "21.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16.5",
	      "y1": "19.79",
	      "x2": "16.5",
	      "y2": "19.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19.79",
	      "y1": "16.5",
	      "x2": "19.79",
	      "y2": "16.51"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19.79",
	      "y1": "7.5",
	      "x2": "19.79",
	      "y2": "7.51"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16.5",
	      "y1": "4.21",
	      "x2": "16.5",
	      "y2": "4.22"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "3.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleHalf2Icon = {
	  name: 'CircleHalf2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-half-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14l7 -7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19l8.5 -8.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9l4.5 -4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleHalfVerticalIcon = {
	  name: 'CircleHalfVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-half-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleHalfIcon = {
	  name: 'CircleHalfIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-half",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleMinusIcon = {
	  name: 'CircleMinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleOffIcon = {
	  name: 'CircleOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CirclePlusIcon = {
	  name: 'CirclePlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleRectangleOffIcon = {
	  name: 'CircleRectangleOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-rectangle-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10h3v3m-3 1h-7v-4h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleRectangleIcon = {
	  name: 'CircleRectangleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-rectangle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 10h10v4h-10z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleSquareIcon = {
	  name: 'CircleSquareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-square",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9.5",
	      "cy": "9.5",
	      "r": "6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "10",
	      "y": "10",
	      "width": "11",
	      "height": "11",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleTriangleIcon = {
	  name: 'CircleTriangleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-triangle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20l7 -12h-14z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleXIcon = {
	  name: 'CircleXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CircleIcon = {
	  name: 'CircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CirclesIcon = {
	  name: 'CirclesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-circles",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "7",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6.5",
	      "cy": "17",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17.5",
	      "cy": "17",
	      "r": "4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClearAllIcon = {
	  name: 'ClearAllIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clear-all",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 6h12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 12h12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18h12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClearFormattingIcon = {
	  name: 'ClearFormattingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clear-formatting",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 15l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 6v-1h11v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "19",
	      "x2": "11",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "5",
	      "x2": "9",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClickIcon = {
	  name: 'ClickIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-click",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "6",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7.8",
	      "y1": "7.8",
	      "x2": "5.6",
	      "y2": "5.6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16.2",
	      "y1": "7.8",
	      "x2": "18.4",
	      "y2": "5.6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7.8",
	      "y1": "16.2",
	      "x2": "5.6",
	      "y2": "18.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l9 3l-4 2l-2 4l-3 -9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClipboardCheckIcon = {
	  name: 'ClipboardCheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clipboard-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 14l2 2l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClipboardListIcon = {
	  name: 'ClipboardListIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clipboard-list",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "9.01",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "16",
	      "x2": "9.01",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "16",
	      "x2": "15",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClipboardOffIcon = {
	  name: 'ClipboardOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clipboard-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.575 5.597a1.994 1.994 0 0 0 -.575 1.403v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2m0 -4v-8a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5a2 2 0 0 1 2 -2h2a2 2 0 1 1 0 4h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClipboardPlusIcon = {
	  name: 'ClipboardPlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clipboard-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClipboardTextIcon = {
	  name: 'ClipboardTextIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clipboard-text",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 16h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClipboardXIcon = {
	  name: 'ClipboardXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clipboard-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClipboardIcon = {
	  name: 'ClipboardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clipboard",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Clock2Icon = {
	  name: 'Clock2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clock-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v5l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 12h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19v1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClockOffIcon = {
	  name: 'ClockOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clock-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClockIcon = {
	  name: 'ClockIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clock",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "12 7 12 12 15 15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CloudDownloadIcon = {
	  name: 'CloudDownloadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cloud-download",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 18a3.5 3.5 0 0 0 0 -7h-1a5 4.5 0 0 0 -11 -2a4.6 4.4 0 0 0 -2.1 8.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "13",
	      "x2": "12",
	      "y2": "22"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "9 19 12 22 15 19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CloudFogIcon = {
	  name: 'CloudFogIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cloud-fog",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 16a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "20",
	      "x2": "19",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CloudLockOpenIcon = {
	  name: 'CloudLockOpenIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cloud-lock-open",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 18a3.5 3.5 0 0 0 0 -7h-1c.397 -1.768 -.285 -3.593 -1.788 -4.787c-1.503 -1.193 -3.6 -1.575 -5.5 -1s-3.315 2.019 -3.712 3.787c-2.199 -.088 -4.155 1.326 -4.666 3.373c-.512 2.047 .564 4.154 2.566 5.027"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "15",
	      "width": "8",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 15v-2a2 2 0 0 1 3.736 -.994"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CloudLockIcon = {
	  name: 'CloudLockIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cloud-lock",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 18a3.5 3.5 0 0 0 0 -7h-1c.397 -1.768 -.285 -3.593 -1.788 -4.787c-1.503 -1.193 -3.6 -1.575 -5.5 -1s-3.315 2.019 -3.712 3.787c-2.199 -.088 -4.155 1.326 -4.666 3.373c-.512 2.047 .564 4.154 2.566 5.027"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "15",
	      "width": "8",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 15v-2a2 2 0 1 1 4 0v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CloudOffIcon = {
	  name: 'CloudOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cloud-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 18h-11c-2.598 0 -4.705 -2.015 -4.705 -4.5s2.107 -4.5 4.705 -4.5c.112 -.5 .305 -.973 .568 -1.408m2.094 -1.948c.329 -.174 .68 -.319 1.05 -.43c1.9 -.576 3.997 -.194 5.5 1c1.503 1.192 2.185 3.017 1.788 4.786h1a3.5 3.5 0 0 1 2.212 6.212"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CloudRainIcon = {
	  name: 'CloudRainIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cloud-rain",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 13v2m0 3v2m4 -5v2m0 3v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CloudSnowIcon = {
	  name: 'CloudSnowIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cloud-snow",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 15v.01m0 3v.01m0 3v.01m4 -4v.01m0 3v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CloudStormIcon = {
	  name: 'CloudStormIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cloud-storm",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "13 14 11 18 14 18 12 22"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CloudUploadIcon = {
	  name: 'CloudUploadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cloud-upload",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "9 15 12 12 15 15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CloudIcon = {
	  name: 'CloudIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cloud",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ClubsIcon = {
	  name: 'ClubsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-clubs",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a4 4 0 0 1 3.164 6.447a4 4 0 1 1 -1.164 6.198v1.355l1 4h-6l1 -4l.001 -1.355a4 4 0 1 1 -1.164 -6.199a4 4 0 0 1 3.163 -6.446z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CodeMinusIcon = {
	  name: 'CodeMinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-code-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 19a2 2 0 0 1 -2 -2v-4l-1 -1l1 -1v-4a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 19a2 2 0 0 0 2 -2v-4l1 -1l-1 -1v-4a2 2 0 0 0 -2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CodeOffIcon = {
	  name: 'CodeOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-code-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 8l-4 4l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 8l4 4l-2.5 2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 4l-1.201 4.805m-.802 3.207l-1.997 7.988"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CodePlusIcon = {
	  name: 'CodePlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-code-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 19a2 2 0 0 1 -2 -2v-4l-1 -1l1 -1v-4a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 19a2 2 0 0 0 2 -2v-4l1 -1l-1 -1v-4a2 2 0 0 0 -2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CodeIcon = {
	  name: 'CodeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-code",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 8 3 12 7 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "17 8 21 12 17 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "4",
	      "x2": "10",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CoffeeIcon = {
	  name: 'CoffeeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-coffee",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 14c.83 .642 2.077 1.017 3.5 1c1.423 .017 2.67 -.358 3.5 -1c.83 -.642 2.077 -1.017 3.5 -1c1.423 -.017 2.67 .358 3.5 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 3a2.4 2.4 0 0 0 -1 2a2.4 2.4 0 0 0 1 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a2.4 2.4 0 0 0 -1 2a2.4 2.4 0 0 0 1 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10h14v5a6 6 0 0 1 -6 6h-2a6 6 0 0 1 -6 -6v-5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.746 16.726a3 3 0 1 0 .252 -5.555"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CoinOffIcon = {
	  name: 'CoinOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-coin-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.8 9a2 2 0 0 0 -1.8 -1h-1m-2.82 1.171a2 2 0 0 0 1.82 2.829h1m2.824 2.822a2 2 0 0 1 -1.824 1.178h-2a2 2 0 0 1 -1.8 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v2m0 8v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CoinIcon = {
	  name: 'CoinIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-coin",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.8 9a2 2 0 0 0 -1.8 -1h-2a2 2 0 0 0 0 4h2a2 2 0 0 1 0 4h-2a2 2 0 0 1 -1.8 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v2m0 8v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ColorPickerOffIcon = {
	  name: 'ColorPickerOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-color-picker-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7l6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.001 7.999l3.699 -3.699a1 1 0 0 1 1.4 0l2.6 2.6a1 1 0 0 1 0 1.4l-3.702 3.702m-1.998 1.998l-6 6h-4v-4l6.002 -6.002"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ColorPickerIcon = {
	  name: 'ColorPickerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-color-picker",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7l6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16l11.7 -11.7a1 1 0 0 1 1.4 0l2.6 2.6a1 1 0 0 1 0 1.4l-11.7 11.7h-4v-4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ColorSwatchOffIcon = {
	  name: 'ColorSwatchOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-color-swatch-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 13v4a4 4 0 0 0 6.832 2.825m1.168 -2.825v-12a2 2 0 0 0 -2 -2h-4a2 2 0 0 0 -2 2v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 7.35l-2 -2a2 2 0 0 0 -2.11 -.461m-2.13 1.874l-1.416 1.415a2 2 0 0 0 0 2.828l9 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.3 13h-2.3a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ColorSwatchIcon = {
	  name: 'ColorSwatchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-color-swatch",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 3h-4a2 2 0 0 0 -2 2v12a4 4 0 0 0 8 0v-12a2 2 0 0 0 -2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 7.35l-2 -2a2 2 0 0 0 -2.828 0l-2.828 2.828a2 2 0 0 0 0 2.828l9 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.3 13h-2.3a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "17",
	      "x2": "17",
	      "y2": "17.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ColumnInsertLeftIcon = {
	  name: 'ColumnInsertLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-column-insert-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 4h4a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "9",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "10",
	      "x2": "7",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ColumnInsertRightIcon = {
	  name: 'ColumnInsertRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-column-insert-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4h4a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "10",
	      "x2": "17",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ColumnsOffIcon = {
	  name: 'ColumnsOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-columns-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 10h5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 14h5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18h5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.5 6h5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.5 10h5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 14h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.5 18h3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ColumnsIcon = {
	  name: 'ColumnsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-columns",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "9.5",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "10",
	      "x2": "9.5",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "14",
	      "x2": "9.5",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "18",
	      "x2": "9.5",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14.5",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14.5",
	      "y1": "10",
	      "x2": "20",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14.5",
	      "y1": "14",
	      "x2": "20",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14.5",
	      "y1": "18",
	      "x2": "20",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CometIcon = {
	  name: 'CometIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-comet",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.5 18.5l-3 1.5l.5 -3.5l-2 -2l3 -.5l1.5 -3l1.5 3l3 .5l-2 2l.5 3.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "11",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "4",
	      "x2": "12.5",
	      "y2": "7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "9",
	      "x2": "7.5",
	      "y2": "12.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CommandIcon = {
	  name: 'CommandIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-command",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 9a2 2 0 1 1 2 -2v10a2 2 0 1 1 -2 -2h10a2 2 0 1 1 -2 2v-10a2 2 0 1 1 2 2h-10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CompassOffIcon = {
	  name: 'CompassOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-compass-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.999 9l3.001 -1l-1.002 3.005m-.998 2.995l-6 2l2 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 12h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CompassIcon = {
	  name: 'CompassIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-compass",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 16 10 10 16 8 14 14 8 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "19",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "5",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ComponentsOffIcon = {
	  name: 'ComponentsOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-components-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12l3 3l3 -3l-3 -3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.5 14.5l2.5 -2.5l-3 -3l-2.5 2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.499 8.501l2.501 -2.501l-3 -3l-2.5 2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18l3 3l3 -3l-3 -3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ComponentsIcon = {
	  name: 'ComponentsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-components",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12l3 3l3 -3l-3 -3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 12l3 3l3 -3l-3 -3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 6l3 3l3 -3l-3 -3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18l3 3l3 -3l-3 -3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Cone2Icon = {
	  name: 'Cone2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cone-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("     "), vue.createVNode("ellipse", {
	      "cx": "12",
	      "cy": "7",
	      "rx": "7",
	      "ry": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 7v.5l-7 12.5l-7 -12.5v-.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ConeIcon = {
	  name: 'ConeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cone",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("     "), vue.createVNode("ellipse", {
	      "transform": "matrix(1 0 0 -1 0 34)",
	      "cx": "12",
	      "cy": "17",
	      "rx": "7",
	      "ry": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 17v-.5l-7 -12.5l-7 12.5v.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ConfettiIcon = {
	  name: 'ConfettiIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-confetti",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 5h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.5 4l-.5 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 5h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 4v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 9l-1 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 13l2 -.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 19h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 18v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 16.518l-6.518 -6.518l-4.39 9.58a1.003 1.003 0 0 0 1.329 1.329l9.579 -4.39z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ContainerIcon = {
	  name: 'ContainerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-container",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 8v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "4",
	      "width": "8",
	      "height": "16",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Contrast2Icon = {
	  name: 'Contrast2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-contrast-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18h2a6 6 0 0 0 6 -6a6 6 0 0 1 6 -6h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ContrastIcon = {
	  name: 'ContrastIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-contrast",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17a5 5 0 0 0 0 -10v10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CookieOffIcon = {
	  name: 'CookieOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cookie-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.192 18.187a3 3 0 0 1 -.976 .652c-1.048 .263 -1.787 .483 -2.216 .661c-.475 .197 -1.092 .538 -1.852 1.024a3 3 0 0 1 -2.296 0c-.802 -.503 -1.419 -.844 -1.852 -1.024c-.471 -.195 -1.21 -.415 -2.216 -.66a3 3 0 0 1 -1.623 -1.624c-.265 -1.052 -.485 -1.79 -.661 -2.216c-.198 -.479 -.54 -1.096 -1.024 -1.852a3 3 0 0 1 0 -2.296c.48 -.744 .82 -1.361 1.024 -1.852c.171 -.413 .391 -1.152 .66 -2.216a3 3 0 0 1 .649 -.971m2.821 -1.174c.14 -.049 .263 -.095 .37 -.139c.458 -.19 1.075 -.531 1.852 -1.024a3 3 0 0 1 2.296 0l2.667 1.104a4 4 0 0 0 4.656 6.14l.053 .132a3 3 0 0 1 0 2.296c-.497 .786 -.838 1.404 -1.024 1.852a6.579 6.579 0 0 0 -.135 .36"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CookieIcon = {
	  name: 'CookieIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cookie",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 14v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 8v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.148 3.476l2.667 1.104a4 4 0 0 0 4.656 6.14l.053 .132a3 3 0 0 1 0 2.296c-.497 .786 -.838 1.404 -1.024 1.852c-.189 .456 -.409 1.194 -.66 2.216a3 3 0 0 1 -1.624 1.623c-1.048 .263 -1.787 .483 -2.216 .661c-.475 .197 -1.092 .538 -1.852 1.024a3 3 0 0 1 -2.296 0c-.802 -.503 -1.419 -.844 -1.852 -1.024c-.471 -.195 -1.21 -.415 -2.216 -.66a3 3 0 0 1 -1.623 -1.624c-.265 -1.052 -.485 -1.79 -.661 -2.216c-.198 -.479 -.54 -1.096 -1.024 -1.852a3 3 0 0 1 0 -2.296c.48 -.744 .82 -1.361 1.024 -1.852c.171 -.413 .391 -1.152 .66 -2.216a3 3 0 0 1 1.624 -1.623c1.032 -.256 1.77 -.476 2.216 -.661c.458 -.19 1.075 -.531 1.852 -1.024a3 3 0 0 1 2.296 0z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CopyOffIcon = {
	  name: 'CopyOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-copy-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.414 19.415a1.994 1.994 0 0 1 -1.414 .585h-8a2 2 0 0 1 -2 -2v-8c0 -.554 .225 -1.055 .589 -1.417m3.411 -.583h6a2 2 0 0 1 2 2v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8v-2a2 2 0 0 0 -2 -2h-6m-3.418 .59c-.36 .36 -.582 .86 -.582 1.41v8a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CopyIcon = {
	  name: 'CopyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-copy",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "8",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CopyleftOffIcon = {
	  name: 'CopyleftOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-copyleft-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.303 9.3a3.01 3.01 0 0 1 1.405 1.406m-.586 3.413a3.016 3.016 0 0 1 -4.122 .131"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CopyleftIcon = {
	  name: 'CopyleftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-copyleft",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 9.75a3.016 3.016 0 0 1 4.163 .173a2.993 2.993 0 0 1 0 4.154a3.016 3.016 0 0 1 -4.163 .173"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CopyrightOffIcon = {
	  name: 'CopyrightOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-copyright-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 9.75a3.016 3.016 0 0 0 -.711 -.466m-3.41 .596a2.993 2.993 0 0 0 -.042 4.197a3.016 3.016 0 0 0 4.163 .173"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CopyrightIcon = {
	  name: 'CopyrightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-copyright",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 9.75a3.016 3.016 0 0 0 -4.163 .173a2.993 2.993 0 0 0 0 4.154a3.016 3.016 0 0 0 4.163 .173"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerDownLeftDoubleIcon = {
	  name: 'CornerDownLeftDoubleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-down-left-double",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 5v6a3 3 0 0 1 -3 3h-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 10l-4 4l4 4m-5 -8l-4 4l4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerDownLeftIcon = {
	  name: 'CornerDownLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-down-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 6v6a3 3 0 0 1 -3 3h-10l4 -4m0 8l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerDownRightDoubleIcon = {
	  name: 'CornerDownRightDoubleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-down-right-double",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 5v6a3 3 0 0 0 3 3h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10l4 4l-4 4m5 -8l4 4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerDownRightIcon = {
	  name: 'CornerDownRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-down-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6v6a3 3 0 0 0 3 3h10l-4 -4m0 8l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerLeftDownDoubleIcon = {
	  name: 'CornerLeftDownDoubleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-left-down-double",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 4h-6a3 3 0 0 0 -3 3v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 10l-4 4l-4 -4m8 5l-4 4l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerLeftDownIcon = {
	  name: 'CornerLeftDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-left-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 6h-6a3 3 0 0 0 -3 3v10l-4 -4m8 0l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerLeftUpDoubleIcon = {
	  name: 'CornerLeftUpDoubleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-left-up-double",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 19h-6a3 3 0 0 1 -3 -3v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 13l-4 -4l-4 4m8 -5l-4 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerLeftUpIcon = {
	  name: 'CornerLeftUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-left-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 18h-6a3 3 0 0 1 -3 -3v-10l-4 4m8 0l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerRightDownDoubleIcon = {
	  name: 'CornerRightDownDoubleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-right-down-double",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h6a3 3 0 0 1 3 3v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10l4 4l4 -4m-8 5l4 4l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerRightDownIcon = {
	  name: 'CornerRightDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-right-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6h6a3 3 0 0 1 3 3v10l-4 -4m8 0l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerRightUpDoubleIcon = {
	  name: 'CornerRightUpDoubleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-right-up-double",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 19h6a3 3 0 0 0 3 -3v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13l4 -4l4 4m-8 -5l4 -4l4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerRightUpIcon = {
	  name: 'CornerRightUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-right-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 18h6a3 3 0 0 0 3 -3v-10l-4 4m8 0l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerUpLeftDoubleIcon = {
	  name: 'CornerUpLeftDoubleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-up-left-double",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 18v-6a3 3 0 0 0 -3 -3h-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 13l-4 -4l4 -4m-5 8l-4 -4l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerUpLeftIcon = {
	  name: 'CornerUpLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-up-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 18v-6a3 3 0 0 0 -3 -3h-10l4 -4m0 8l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerUpRightDoubleIcon = {
	  name: 'CornerUpRightDoubleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-up-right-double",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18v-6a3 3 0 0 1 3 -3h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13l4 -4l-4 -4m5 8l4 -4l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CornerUpRightIcon = {
	  name: 'CornerUpRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-corner-up-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 18v-6a3 3 0 0 1 3 -3h10l-4 -4m0 8l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Cpu2Icon = {
	  name: 'Cpu2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cpu-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "5",
	      "width": "14",
	      "height": "14",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10v-2h2m6 6v2h-2m-4 0h-2v-2m8 -4v-2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 14h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 3v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 10h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 14h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 21v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 21v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CpuIcon = {
	  name: 'CpuIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cpu",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "5",
	      "width": "14",
	      "height": "14",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 9h6v6h-6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 14h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 3v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 10h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 14h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 21v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 21v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CraneIcon = {
	  name: 'CraneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-crane",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 21v-18l-6 6h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 3l10 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 9v4a2 2 0 1 1 -2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CreativeCommonsIcon = {
	  name: 'CreativeCommonsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-creative-commons",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 10.5c-.847 -.71 -2.132 -.658 -2.914 .116a1.928 1.928 0 0 0 0 2.768c.782 .774 2.067 .825 2.914 .116"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.5 10.5c-.847 -.71 -2.132 -.658 -2.914 .116a1.928 1.928 0 0 0 0 2.768c.782 .774 2.067 .825 2.914 .116"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CreditCardOffIcon = {
	  name: 'CreditCardOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-credit-card-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h9a3 3 0 0 1 3 3v8a3 3 0 0 1 -.128 .87"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.87 18.872a3 3 0 0 1 -.87 .128h-12a3 3 0 0 1 -3 -3v-8c0 -1.352 .894 -2.495 2.124 -2.87"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "11",
	      "x2": "11",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "11",
	      "x2": "21",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "15",
	      "x2": "7.01",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "15",
	      "x2": "13",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CreditCardIcon = {
	  name: 'CreditCardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-credit-card",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "10",
	      "x2": "21",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "15",
	      "x2": "7.01",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "15",
	      "x2": "13",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CricketIcon = {
	  name: 'CricketIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cricket",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.105 18.79l-1.006 .992a4.159 4.159 0 0 1 -6.038 -5.715l.157 -.166l8.282 -8.401l1.5 1.5l3.45 -3.391a2.08 2.08 0 0 1 3.057 2.815l-.116 .126l-3.391 3.45l1.5 1.5l-3.668 3.617"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 7.5l6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "18",
	      "r": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CropIcon = {
	  name: 'CropIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-crop",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 5v10a1 1 0 0 0 1 1h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 8h10a1 1 0 0 1 1 1v10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CrossIcon = {
	  name: 'CrossIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cross",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 21h4v-9h5v-4h-5v-5h-4v5h-5v4h5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CrosshairIcon = {
	  name: 'CrosshairIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-crosshair",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v-2a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v2a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CrownOffIcon = {
	  name: 'CrownOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-crown-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 18h-13l-1.865 -9.327a0.25 .25 0 0 1 .4 -.244l4.465 3.571l1.6 -2.4m1.596 -2.394l.804 -1.206l4 6l4.464 -3.571a0.25 .25 0 0 1 .401 .244l-1.363 6.818"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CrownIcon = {
	  name: 'CrownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-crown",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6l4 6l5 -4l-2 10h-14l-2 -10l5 4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CrutchesIcon = {
	  name: 'CrutchesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-crutches",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "3",
	      "width": "8",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 21h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-4.092a3 3 0 0 1 .504 -1.664l.992 -1.488a3 3 0 0 0 .504 -1.664v-5.092"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-4.092a3 3 0 0 0 -.504 -1.664l-.992 -1.488a3 3 0 0 1 -.504 -1.664v-5.092"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 11h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CupIcon = {
	  name: 'CupIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cup",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 11h14v-3h-14z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.5 11l-1.5 10h-8l-1.5 -10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 8v-1a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 5v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurlingIcon = {
	  name: 'CurlingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-curling",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "9",
	      "width": "16",
	      "height": "10",
	      "rx": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 14h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 5h6a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurlyLoopIcon = {
	  name: 'CurlyLoopIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-curly-loop",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 8c-4 0 -7 2 -7 5a3 3 0 0 0 6 0c0 -3 -2.5 -5 -8 -5s-8 2 -8 5a3 3 0 0 0 6 0c0 -3 -3 -5 -7 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyBahrainiIcon = {
	  name: 'CurrencyBahrainiIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-bahraini",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10v1a4 4 0 0 0 4 4h2a2 2 0 0 0 2 -2v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 19.01v-.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 15.01v-.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 15h2.004a2 2 0 0 0 1.649 -3.131l-2.653 -3.869"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyBahtIcon = {
	  name: 'CurrencyBahtIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-baht",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 6h5a3 3 0 0 1 3 3v.143a2.857 2.857 0 0 1 -2.857 2.857h-5.143"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12h5a3 3 0 0 1 3 3v.143a2.857 2.857 0 0 1 -2.857 2.857h-5.143"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 4v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 18v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyBitcoinIcon = {
	  name: 'CurrencyBitcoinIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-bitcoin",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6h8a3 3 0 0 1 0 6a3 3 0 0 1 0 6h-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "6",
	      "x2": "8",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "14",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "3",
	      "x2": "9",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "3",
	      "x2": "13",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "18",
	      "x2": "9",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "18",
	      "x2": "13",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyCentIcon = {
	  name: 'CurrencyCentIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-cent",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.007 7.54a5.965 5.965 0 0 0 -4.008 -1.54a5.996 5.996 0 0 0 -5.992 6c0 3.314 2.682 6 5.992 6a5.965 5.965 0 0 0 4.004 -1.536"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyDinarIcon = {
	  name: 'CurrencyDinarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-dinar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 20.01v-.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 13l2.386 -.9a1 1 0 0 0 -.095 -1.902l-1.514 -.404a1 1 0 0 1 -.102 -1.9l2.325 -.894"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 14v1a3 3 0 0 0 3 3h4.161a3 3 0 0 0 2.983 -3.32l-1.144 -10.68"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 17l1 1h2.004a2 2 0 0 0 1.649 -3.131l-2.653 -3.869"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyDirhamIcon = {
	  name: 'CurrencyDirhamIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-dirham",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.5 19h-3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.599 16.479a1.5 1.5 0 1 0 -1.099 2.521"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 4v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 13h1.888a1.5 1.5 0 0 0 1.296 -2.256l-2.184 -3.744"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 13.01v-.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyDogecoinIcon = {
	  name: 'CurrencyDogecoinIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-dogecoin",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 12h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 18h6a6 6 0 1 0 0 -12h-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyDollarAustralianIcon = {
	  name: 'CurrencyDollarAustralianIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-dollar-australian",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18l3.279 -11.476a0.75 .75 0 0 1 1.442 0l3.279 11.476"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 20v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 6v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.5 14h5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyDollarCanadianIcon = {
	  name: 'CurrencyDollarCanadianIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-dollar-canadian",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 18h-1a6 6 0 1 1 0 -12h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 20v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 6v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyDollarSingaporeIcon = {
	  name: 'CurrencyDollarSingaporeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-dollar-singapore",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6h-4a3 3 0 1 0 0 6h1a3 3 0 0 1 0 6h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 20v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 6v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyDollarIcon = {
	  name: 'CurrencyDollarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-dollar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.7 8a3 3 0 0 0 -2.7 -2h-4a3 3 0 0 0 0 6h4a3 3 0 0 1 0 6h-4a3 3 0 0 1 -2.7 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v3m0 12v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyEthereumIcon = {
	  name: 'CurrencyEthereumIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-ethereum",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 12l6 -9l6 9l-6 9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 12l6 -3l6 3l-6 2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyEuroIcon = {
	  name: 'CurrencyEuroIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-euro",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.2 7a6 7 0 1 0 0 10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 10h-8m0 4h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyForintIcon = {
	  name: 'CurrencyForintIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-forint",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 4h-4a3 3 0 0 0 -3 3v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 11h-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4v13a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 9h-5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyFrankIcon = {
	  name: 'CurrencyFrankIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-frank",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 5h-6a2 2 0 0 0 -2 2v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 15h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 11h7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyKroneCzechIcon = {
	  name: 'CurrencyKroneCzechIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-krone-czech",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12c3.5 0 6 -3 6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12c3.5 0 6 3 6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 6l-2 2l-2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 12h-2a3 3 0 0 0 0 6h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyKroneDanishIcon = {
	  name: 'CurrencyKroneDanishIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-krone-danish",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12c3.5 0 6 -3 6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12c3.5 0 6 3 6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 10a4 4 0 0 0 -4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 18.01v-.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyKroneSwedishIcon = {
	  name: 'CurrencyKroneSwedishIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-krone-swedish",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12c3.5 0 6 -3 6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12c3.5 0 6 3 6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 10a4 4 0 0 0 -4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyLeuIcon = {
	  name: 'CurrencyLeuIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-leu",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 18h-7a3 3 0 0 1 -3 -3v-10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyLiraIcon = {
	  name: 'CurrencyLiraIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-lira",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5v15a7 7 0 0 0 7 -7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15l8 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 7l-8 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyLitecoinIcon = {
	  name: 'CurrencyLitecoinIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-litecoin",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 19h-8.194a2 2 0 0 1 -1.98 -2.283l1.674 -11.717"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 9l-9 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyNairaIcon = {
	  name: 'CurrencyNairaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-naira",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18v-10.948a1.05 1.05 0 0 1 1.968 -.51l6.064 10.916a1.05 1.05 0 0 0 1.968 -.51v-10.948"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 10h14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 14h14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyPoundIcon = {
	  name: 'CurrencyPoundIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-pound",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 18.5a6 6 0 0 1 -5 0a6 6 0 0 0 -5 .5a3 3 0 0 0 2 -2.5v-7.5a4 4 0 0 1 7.45 -2m-2.55 6h-7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyRealIcon = {
	  name: 'CurrencyRealIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-real",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18v-12h3a3 3 0 1 1 0 6h-3c5.5 0 5 4 6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 6v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 20v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyRenminbiIcon = {
	  name: 'CurrencyRenminbiIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-renminbi",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 9v8a2 2 0 1 0 4 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 9h-14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 5h-14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 9v4c0 2.5 -.667 4 -2 6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyRippleIcon = {
	  name: 'CurrencyRippleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-ripple",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "7",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12h3l2 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 14.5l-2 -2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyRiyalIcon = {
	  name: 'CurrencyRiyalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-riyal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 9v2a2 2 0 1 1 -4 0v-1v1a2 2 0 1 1 -4 0v-1v4a2 2 0 1 1 -4 0v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 12.01v-.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 10v1a5 5 0 0 1 -5 5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyRubelIcon = {
	  name: 'CurrencyRubelIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-rubel",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 19v-14h6a3 3 0 0 1 0 6h-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 15h-8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyRupeeIcon = {
	  name: 'CurrencyRupeeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-rupee",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 5h-11h3a4 4 0 0 1 0 8h-3l6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "9",
	      "x2": "18",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyShekelIcon = {
	  name: 'CurrencyShekelIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-shekel",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 18v-12h4a4 4 0 0 1 4 4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 6v12h-4a4 4 0 0 1 -4 -4v-4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyTakaIcon = {
	  name: 'CurrencyTakaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-taka",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16.5",
	      "cy": "15.5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 7a2 2 0 1 1 4 0v9a3 3 0 0 0 6 0v-.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyTugrikIcon = {
	  name: 'CurrencyTugrikIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-tugrik",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 6h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 17l8 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 10l-8 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyWonIcon = {
	  name: 'CurrencyWonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-won",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6l3.245 11.358a0.85 .85 0 0 0 1.624 .035l3.131 -9.393l3.131 9.393a0.85 .85 0 0 0 1.624 -.035l3.245 -11.358"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 10h-18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 14h-18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyYenIcon = {
	  name: 'CurrencyYenIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-yen",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19v-7l-5 -7m10 0l-5 7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "17",
	      "x2": "16",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "13",
	      "x2": "16",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyZlotyIcon = {
	  name: 'CurrencyZlotyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency-zloty",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18h-7l7 -7h-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 18v-13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 14.5l6 -3.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrencyIcon = {
	  name: 'CurrencyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-currency",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CurrentLocationIcon = {
	  name: 'CurrentLocationIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-current-location",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "2",
	      "x2": "12",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "12",
	      "y2": "22"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "22",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "2",
	      "y1": "12",
	      "x2": "4",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CursorTextIcon = {
	  name: 'CursorTextIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cursor-text",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 4a3 3 0 0 1 3 3v10a3 3 0 0 1 -3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 4a3 3 0 0 0 -3 3v10a3 3 0 0 0 3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var CutIcon = {
	  name: 'CutIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-cut",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "17",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9.15",
	      "y1": "14.85",
	      "x2": "18",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "4",
	      "x2": "14.85",
	      "y2": "14.85"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DashboardIcon = {
	  name: 'DashboardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dashboard",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "13",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13.45",
	      "y1": "11.55",
	      "x2": "15.5",
	      "y2": "9.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.4 20a9 9 0 1 1 11.2 0z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DatabaseExportIcon = {
	  name: 'DatabaseExportIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-database-export",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("     "), vue.createVNode("ellipse", {
	      "cx": "12",
	      "cy": "6",
	      "rx": "8",
	      "ry": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v6c0 1.657 3.582 3 8 3a19.84 19.84 0 0 0 3.302 -.267m4.698 -2.733v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v6c0 1.599 3.335 2.905 7.538 2.995m8.462 -6.995v-2m-6 7h7m-3 -3l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DatabaseImportIcon = {
	  name: 'DatabaseImportIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-database-import",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("     "), vue.createVNode("ellipse", {
	      "cx": "12",
	      "cy": "6",
	      "rx": "8",
	      "ry": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v8m5.009 .783c.924 .14 1.933 .217 2.991 .217c4.418 0 8 -1.343 8 -3v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.252 20.987c.246 .009 .496 .013 .748 .013c4.418 0 8 -1.343 8 -3v-6m-18 7h7m-3 -3l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DatabaseOffIcon = {
	  name: 'DatabaseOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-database-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.983 8.978c3.955 -.182 7.017 -1.446 7.017 -2.978c0 -1.657 -3.582 -3 -8 -3c-1.661 0 -3.204 .19 -4.483 .515m-2.783 1.228c-.471 .382 -.734 .808 -.734 1.257c0 1.22 1.944 2.271 4.734 2.74"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v6c0 1.657 3.582 3 8 3c.986 0 1.93 -.067 2.802 -.19m3.187 -.82c1.251 -.53 2.011 -1.228 2.011 -1.99v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v6c0 1.657 3.582 3 8 3c3.217 0 5.991 -.712 7.261 -1.74m.739 -3.26v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DatabaseIcon = {
	  name: 'DatabaseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-database",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("ellipse", {
	      "cx": "12",
	      "cy": "6",
	      "rx": "8",
	      "ry": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v6a8 3 0 0 0 16 0v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v6a8 3 0 0 0 16 0v-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DentalIcon = {
	  name: 'DentalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dental",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5.5c-1.074 -.586 -2.583 -1.5 -4 -1.5c-2.1 -.001 -4 1.247 -4 5c0 4.899 1.056 8.41 2.671 10.537c.573 .756 1.97 .521 2.567 -.236c.398 -.505 .819 -1.439 1.262 -2.801c.292 -.771 .892 -1.504 1.5 -1.5c.602 .004 1.21 .737 1.5 1.5c.443 1.362 .864 2.295 1.262 2.8c.597 .759 1.994 .993 2.567 .237c1.615 -2.127 2.671 -5.637 2.671 -10.537c0 -3.74 -1.908 -4.994 -4 -5c-1.423 -.004 -2.92 .911 -4 1.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5.5l3 1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DetailsIcon = {
	  name: 'DetailsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-details",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceAnalyticsIcon = {
	  name: 'DeviceAnalyticsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-analytics",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "4",
	      "width": "18",
	      "height": "12",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "20",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "16",
	      "x2": "9",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "16",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12l3 -3l2 2l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceAudioTapeIcon = {
	  name: 'DeviceAudioTapeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-audio-tape",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17l4 -3h10l4 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7.5",
	      "cy": "9.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16.5",
	      "cy": "9.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceCctvIcon = {
	  name: 'DeviceCctvIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-cctv",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "3",
	      "width": "18",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 7v7a7 7 0 0 1 -14 0v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14",
	      "x2": "12.01",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceComputerCameraOffIcon = {
	  name: 'DeviceComputerCameraOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-computer-camera-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.15 6.153a7 7 0 0 0 9.696 9.696m2 -2a7 7 0 0 0 -9.699 -9.695"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.13 9.122a3 3 0 0 0 3.743 3.749m2 -2a3 3 0 0 0 -3.737 -3.736"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16l-2.091 3.486a1 1 0 0 0 .857 1.514h10.468a1 1 0 0 0 .857 -1.514l-2.091 -3.486"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceComputerCameraIcon = {
	  name: 'DeviceComputerCameraIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-computer-camera",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "10",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "10",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16l-2.091 3.486a1 1 0 0 0 .857 1.514h10.468a1 1 0 0 0 .857 -1.514l-2.091 -3.486"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceDesktopAnalyticsIcon = {
	  name: 'DeviceDesktopAnalyticsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-desktop-analytics",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "4",
	      "width": "18",
	      "height": "12",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 20h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 16v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 16v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 12v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v-1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceDesktopOffIcon = {
	  name: 'DeviceDesktopOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-desktop-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4h12a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1m-4 0h-12a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "20",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "16",
	      "x2": "9",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "16",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceDesktopIcon = {
	  name: 'DeviceDesktopIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-desktop",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "4",
	      "width": "18",
	      "height": "12",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "20",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "16",
	      "x2": "9",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "16",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceFloppyIcon = {
	  name: 'DeviceFloppyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-floppy",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4h10l4 4v10a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "14 4 14 8 8 8 8 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceGamepadIcon = {
	  name: 'DeviceGamepadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-gamepad",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "2",
	      "y": "6",
	      "width": "20",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 12h4m-2 -2v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "11",
	      "x2": "15",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "13",
	      "x2": "18",
	      "y2": "13.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceHeartMonitorIcon = {
	  name: 'DeviceHeartMonitorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-heart-monitor",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 9h6l1 -2l2 4l1 -2h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 14h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 17v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceLaptopOffIcon = {
	  name: 'DeviceLaptopOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-laptop-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6h8a1 1 0 0 1 1 1v8m-3 1h-10a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceLaptopIcon = {
	  name: 'DeviceLaptopIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-laptop",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "19",
	      "x2": "21",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "6",
	      "width": "14",
	      "height": "10",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceMobileMessageIcon = {
	  name: 'DeviceMobileMessageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-mobile-message",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 3h10v8h-3l-4 2v-2h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 16v4a1 1 0 0 1 -1 1h-8a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 18v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceMobileOffIcon = {
	  name: 'DeviceMobileOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-mobile-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.174 3.178c.252 -.114 .531 -.178 .826 -.178h8a2 2 0 0 1 2 2v9m0 4v1a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 4h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceMobileRotatedIcon = {
	  name: 'DeviceMobileRotatedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-mobile-rotated",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "6",
	      "width": "18",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 11v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12h-.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceMobileVibrationIcon = {
	  name: 'DeviceMobileVibrationIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-mobile-vibration",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "3",
	      "width": "12",
	      "height": "18",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "10",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "17",
	      "x2": "9",
	      "y2": "17.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 6l-2 3l2 3l-2 3l2 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceMobileIcon = {
	  name: 'DeviceMobileIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-mobile",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "3",
	      "width": "12",
	      "height": "18",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "4",
	      "x2": "13",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "17",
	      "x2": "12",
	      "y2": "17.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceNintendoIcon = {
	  name: 'DeviceNintendoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-nintendo",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 20v-16h-3a4 4 0 0 0 -4 4v8a4 4 0 0 0 4 4h3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 20v-16h3a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17.5",
	      "cy": "15.5",
	      "r": "1",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6.5",
	      "cy": "8.5",
	      "r": "1",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceSpeakerIcon = {
	  name: 'DeviceSpeakerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-speaker",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "3",
	      "width": "14",
	      "height": "18",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "7",
	      "x2": "12",
	      "y2": "7.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceTabletOffIcon = {
	  name: 'DeviceTabletOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-tablet-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 3h11a1 1 0 0 1 1 1v11m0 4v1a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1v-15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "17",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceTabletIcon = {
	  name: 'DeviceTabletIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-tablet",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "3",
	      "width": "14",
	      "height": "18",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "17",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceTvOffIcon = {
	  name: 'DeviceTvOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-tv-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7h8a2 2 0 0 1 2 2v8m-1.178 2.824c-.25 .113 -.529 .176 -.822 .176h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 3l-4 4l-4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceTvIcon = {
	  name: 'DeviceTvIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-tv",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "7",
	      "width": "18",
	      "height": "13",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 3 12 7 8 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceWatchOffIcon = {
	  name: 'DeviceWatchOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-watch-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6h5a3 3 0 0 1 3 3v5m-.882 3.125a2.99 2.99 0 0 1 -2.118 .875h-6a3 3 0 0 1 -3 -3v-6c0 -.828 .336 -1.578 .878 -2.121"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18v3h6v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5v-2h6v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceWatchStats2Icon = {
	  name: 'DeviceWatchStats2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-watch-stats-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "6",
	      "width": "12",
	      "height": "12",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18v3h6v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 6v-3h6v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10a2 2 0 1 0 2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceWatchStatsIcon = {
	  name: 'DeviceWatchStatsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-watch-stats",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "6",
	      "width": "12",
	      "height": "12",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18v3h6v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 6v-3h6v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 14v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 14v-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DeviceWatchIcon = {
	  name: 'DeviceWatchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-device-watch",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "6",
	      "width": "12",
	      "height": "12",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18v3h6v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 6v-3h6v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Devices2Icon = {
	  name: 'Devices2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-devices-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 15h-6a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "13",
	      "y": "4",
	      "width": "8",
	      "height": "16",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "19",
	      "x2": "10",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "8",
	      "x2": "17",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "16",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "15",
	      "x2": "9",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DevicesOffIcon = {
	  name: 'DevicesOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-devices-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 9a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v8m-1 3h-6a1 1 0 0 1 -1 -1v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 8v-3a1 1 0 0 0 -1 -1h-9m-4 0a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 9h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DevicesPcIcon = {
	  name: 'DevicesPcIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-devices-pc",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 5h6v14h-6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9h10v7h-10z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 19h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 16v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 13v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 16v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DevicesIcon = {
	  name: 'DevicesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-devices",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "13",
	      "y": "8",
	      "width": "8",
	      "height": "12",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "9",
	      "x2": "18",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DialpadIcon = {
	  name: 'DialpadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dialpad",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3h4v4h-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3h4v4h-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 3h4v4h-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10h4v4h-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 10h4v4h-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10h4v4h-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 17h4v4h-4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DiamondIcon = {
	  name: 'DiamondIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-diamond",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 5h12l3 5l-8.5 9.5a0.7 .7 0 0 1 -1 0l-8.5 -9.5l3 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12l-2 -2.2l.6 -1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DiamondsIcon = {
	  name: 'DiamondsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-diamonds",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.831 20.413l-5.375 -6.91c-.608 -.783 -.608 -2.223 0 -3.005l5.375 -6.911a1.457 1.457 0 0 1 2.338 0l5.375 6.91c.608 .783 .608 2.223 0 3.005l-5.375 6.911a1.457 1.457 0 0 1 -2.338 0z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Dice1Icon = {
	  name: 'Dice1Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dice-1",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Dice2Icon = {
	  name: 'Dice2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dice-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9.5",
	      "cy": "9.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14.5",
	      "cy": "14.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Dice3Icon = {
	  name: 'Dice3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dice-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "8.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "15.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Dice4Icon = {
	  name: 'Dice4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dice-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "8.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "8.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "15.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "15.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Dice5Icon = {
	  name: 'Dice5Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dice-5",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "8.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "8.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "15.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "15.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Dice6Icon = {
	  name: 'Dice6Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dice-6",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "7.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "7.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "12",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "12",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "16.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "16.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DiceIcon = {
	  name: 'DiceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dice",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "8.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "8.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "15.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "15.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DimensionsIcon = {
	  name: 'DimensionsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dimensions",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 5h11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7l2 -2l-2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 3l-2 2l2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 10v11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 19l2 2l2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12l-2 -2l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "10",
	      "width": "11",
	      "height": "11",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DirectionHorizontalIcon = {
	  name: 'DirectionHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-direction-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 9l-3 3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 9l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DirectionIcon = {
	  name: 'DirectionIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-direction",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 10l3 -3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 14l3 3l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DirectionsIcon = {
	  name: 'DirectionsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-directions",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 21h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 5v4h11l2 -2l-2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 13v4h-8l-2 -2l2 -2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Disabled2Icon = {
	  name: 'Disabled2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-disabled-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 11a5 5 0 1 0 3.95 7.95"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 20l-4 -5h-4l3 -5l-4 -3l-4 1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DisabledIcon = {
	  name: 'DisabledIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-disabled",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "11",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "11 7 11 15 15 15 19 20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "11",
	      "x2": "16",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 11.5a5 5 0 1 0 6 7.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DiscIcon = {
	  name: 'DiscIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-disc",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12a5 5 0 0 1 5 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17a5 5 0 0 0 5 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Discount2Icon = {
	  name: 'Discount2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-discount-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "15",
	      "x2": "15",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9.5",
	      "cy": "9.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14.5",
	      "cy": "14.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7a2.2 2.2 0 0 0 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1a2.2 2.2 0 0 0 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DiscountIcon = {
	  name: 'DiscountIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-discount",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "15",
	      "x2": "15",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9.5",
	      "cy": "9.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14.5",
	      "cy": "14.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DivideIcon = {
	  name: 'DivideIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-divide",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "fill": "currentColor",
	      "cx": "12",
	      "cy": "6",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "fill": "currentColor",
	      "cx": "12",
	      "cy": "18",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Dna2Icon = {
	  name: 'Dna2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dna-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3v1c-.01 3.352 -1.68 6.023 -5.008 8.014c-3.328 1.99 3.336 -2.005 .008 -.014c-3.328 1.99 -4.997 4.662 -5.008 8.014v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21.014v-1c-.01 -3.352 -1.68 -6.023 -5.008 -8.014c-3.328 -1.99 3.336 2.005 .008 .014c-3.328 -1.991 -4.997 -4.662 -5.008 -8.014v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 4h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 20h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DnaIcon = {
	  name: 'DnaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dna",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "rotate(-45 12 12)",
	      "cx": "12",
	      "cy": "12",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.172 20.485a4 4 0 1 0 -5.657 -5.657"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.828 3.515a4 4 0 1 0 5.657 5.657"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DogBowlIcon = {
	  name: 'DogBowlIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dog-bowl",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 15l5.586 -5.585a2 2 0 1 1 3.414 -1.415a2 2 0 1 1 -1.413 3.414l-3.587 3.586"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13l-3.586 -3.585a2 2 0 1 0 -3.414 -1.415a2 2 0 1 0 1.413 3.414l3.587 3.586"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 20h18c-.175 -1.671 -.046 -3.345 -2 -5h-14c-1.333 1 -2 2.667 -2 5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DoorEnterIcon = {
	  name: 'DoorEnterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-door-enter",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-16a2 2 0 0 1 2 -2h6m4 10.5v7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 7h-7m3 -3l-3 3l3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DoorExitIcon = {
	  name: 'DoorExitIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-door-exit",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-16a2 2 0 0 1 2 -2h7.5m2.5 10.5v7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 7h7m-3 -3l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DoorIcon = {
	  name: 'DoorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-door",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21v-16a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DotsCircleHorizontalIcon = {
	  name: 'DotsCircleHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dots-circle-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "8",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DotsDiagonal2Icon = {
	  name: 'DotsDiagonal2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dots-diagonal-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "7",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DotsDiagonalIcon = {
	  name: 'DotsDiagonalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dots-diagonal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "17",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "7",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DotsVerticalIcon = {
	  name: 'DotsVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dots-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "19",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DotsIcon = {
	  name: 'DotsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-dots",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DownloadIcon = {
	  name: 'DownloadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-download",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 11 12 16 17 11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DragDrop2Icon = {
	  name: 'DragDrop2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-drag-drop-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "8",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "4",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "8",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "4",
	      "x2": "16",
	      "y2": "4.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "4",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "4",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "4",
	      "y2": "16.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DragDropIcon = {
	  name: 'DragDropIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-drag-drop",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 11v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 13l9 3l-4 2l-2 4l-3 -9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "3",
	      "y2": "3.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "3",
	      "x2": "7",
	      "y2": "3.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "3",
	      "x2": "11",
	      "y2": "3.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "3",
	      "x2": "15",
	      "y2": "3.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "7",
	      "x2": "3",
	      "y2": "7.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "11",
	      "x2": "3",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "15",
	      "x2": "3",
	      "y2": "15.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DroneOffIcon = {
	  name: 'DroneOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-drone-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 14h-4v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10l-3.5 -3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.957 5.95a3.503 3.503 0 0 0 -2.917 -2.91m-3.02 .989a3.5 3.5 0 0 0 1.98 5.936"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10l3.5 -3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 9.965a3.5 3.5 0 1 0 -3.966 -3.965"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "14",
	      "x2": "17.5",
	      "y2": "17.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.035 18a3.5 3.5 0 0 0 5.936 1.98m.987 -3.026a3.503 3.503 0 0 0 -2.918 -2.913"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "14",
	      "x2": "6.5",
	      "y2": "17.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 14.035a3.5 3.5 0 1 0 3.966 3.965"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DroneIcon = {
	  name: 'DroneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-drone",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10h4v4h-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "10",
	      "x2": "6.5",
	      "y2": "6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.96 6a3.5 3.5 0 1 0 -3.96 3.96"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10l3.5 -3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 9.96a3.5 3.5 0 1 0 -3.96 -3.96"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "14",
	      "x2": "17.5",
	      "y2": "17.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.04 18a3.5 3.5 0 1 0 3.96 -3.96"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "14",
	      "x2": "6.5",
	      "y2": "17.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 14.04a3.5 3.5 0 1 0 3.96 3.96"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DropCircleIcon = {
	  name: 'DropCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-drop-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.07 15.34c1.115 .88 2.74 .88 3.855 0c1.115 -.88 1.398 -2.388 .671 -3.575l-2.596 -3.765l-2.602 3.765c-.726 1.187 -.443 2.694 .672 3.575z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DropletFilled2Icon = {
	  name: 'DropletFilled2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-droplet-filled-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.8 11a6 6 0 1 0 10.396 0l-5.197 -8l-5.2 8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 14h12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.305 17.695l3.695 -3.695"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.26 19.74l5.74 -5.74l-5.74 5.74z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DropletFilledIcon = {
	  name: 'DropletFilledIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-droplet-filled",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.8 11a6 6 0 1 0 10.396 0l-5.197 -8l-5.2 8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l3.544 -3.544"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17.3l5.558 -5.558"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DropletHalf2Icon = {
	  name: 'DropletHalf2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-droplet-half-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.8 11a6 6 0 1 0 10.396 0l-5.197 -8l-5.2 8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 14h12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DropletHalfIcon = {
	  name: 'DropletHalfIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-droplet-half",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.8 11a6 6 0 1 0 10.396 0l-5.197 -8l-5.2 8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DropletOffIcon = {
	  name: 'DropletOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-droplet-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.454 8.458l-1.653 2.545a6 6 0 0 0 10.32 6.123"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 14a5.971 5.971 0 0 0 -.803 -3l-5.197 -8l-1.968 3.03"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var DropletIcon = {
	  name: 'DropletIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-droplet",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.8 11a6 6 0 1 0 10.396 0l-5.197 -8l-5.2 8z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EarOffIcon = {
	  name: 'EarOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ear-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10c0 -1.146 .277 -2.245 .78 -3.219m1.792 -2.208a7 7 0 0 1 10.428 9.027a10 10 0 0 1 -.633 .762m-2.045 1.96a8 8 0 0 0 -1.322 2.278a4.5 4.5 0 0 1 -6.8 1.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.42 7.414a3 3 0 0 1 4.131 4.13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EarIcon = {
	  name: 'EarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ear",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10a7 7 0 1 1 13 3.6a10 10 0 0 1 -2 2a8 8 0 0 0 -2 3a4.5 4.5 0 0 1 -6.8 1.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10a3 3 0 1 1 5 2.2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EditCircleIcon = {
	  name: 'EditCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-edit-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15l8.385 -8.415a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 5l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 7.07a7.002 7.002 0 0 0 1 13.93a7.002 7.002 0 0 0 6.929 -5.999"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EditIcon = {
	  name: 'EditIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-edit",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 7h-3a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15h3l8.5 -8.5a1.5 1.5 0 0 0 -3 -3l-8.5 8.5v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "5",
	      "x2": "19",
	      "y2": "8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EggIcon = {
	  name: 'EggIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-egg",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.514 14.639c0 3.513 2.904 6.361 6.486 6.361s6.486 -2.848 6.486 -6.361a12.574 12.574 0 0 0 -3.243 -9.012a4.025 4.025 0 0 0 -3.243 -1.627a4.025 4.025 0 0 0 -3.243 1.627a12.574 12.574 0 0 0 -3.243 9.012"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ElevatorIcon = {
	  name: 'ElevatorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-elevator",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "4",
	      "width": "14",
	      "height": "16",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10l2 -2l2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14l2 2l2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EmergencyBedIcon = {
	  name: 'EmergencyBedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-emergency-bed",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8l2.1 2.8a3 3 0 0 0 2.4 1.2h11.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v2l-2.5 2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.5 16.5l-2.5 -2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EmphasisIcon = {
	  name: 'EmphasisIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-emphasis",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 5h-8v10h8m-1 -5h-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "20",
	      "x2": "6",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "20",
	      "x2": "10",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "20",
	      "x2": "14",
	      "y2": "20.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "20",
	      "x2": "18",
	      "y2": "20.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EngineIcon = {
	  name: 'EngineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-engine",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 13h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10h2l2 -2h3.382a1 1 0 0 1 .894 .553l1.448 2.894a1 1 0 0 0 .894 .553h1.382v-2h2a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-2v-2h-3v2a1 1 0 0 1 -1 1h-3.465a1 1 0 0 1 -.832 -.445l-1.703 -2.555h-2v-6z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EqualNotIcon = {
	  name: 'EqualNotIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-equal-not",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 9h14m-14 6h14m0 -10l-14 14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EqualIcon = {
	  name: 'EqualIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-equal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 9h14m-14 6h14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EraserIcon = {
	  name: 'EraserIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-eraser",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 19h-11l-4 -4a1 1 0 0 1 0 -1.41l10 -10a1 1 0 0 1 1.41 0l5 5a1 1 0 0 1 0 1.41l-9 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "12.3",
	      "x2": "11.7",
	      "y2": "6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Error404Icon = {
	  name: 'Error404Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-error-404",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7v4a1 1 0 0 0 1 1h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 7v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 8v8a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-8a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 7v4a1 1 0 0 0 1 1h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 7v10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ExchangeIcon = {
	  name: 'ExchangeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-exchange",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 8v5a5 5 0 0 1 -5 5h-3l3 -3m0 6l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 16v-5a5 5 0 0 1 5 -5h3l-3 -3m0 6l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ExclamationMarkIcon = {
	  name: 'ExclamationMarkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-exclamation-mark",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15v-10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ExposureIcon = {
	  name: 'ExposureIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-exposure",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4.6",
	      "y1": "19.4",
	      "x2": "19.4",
	      "y2": "4.6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 9h4m-2 -2v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "16",
	      "x2": "17",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ExternalLinkIcon = {
	  name: 'ExternalLinkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-external-link",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7h-5a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "14",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "15 4 20 4 20 9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EyeCheckIcon = {
	  name: 'EyeCheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-eye-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19c-4 0 -7.333 -2.333 -10 -7c2.667 -4.667 6 -7 10 -7s7.333 2.333 10 7c-.42 .736 -.858 1.414 -1.311 2.033"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 19l2 2l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EyeOffIcon = {
	  name: 'EyeOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-eye-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.584 10.587a2 2 0 0 0 2.828 2.83"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.363 5.365a9.466 9.466 0 0 1 2.637 -.365c4 0 7.333 2.333 10 7c-.778 1.361 -1.612 2.524 -2.503 3.488m-2.14 1.861c-1.631 1.1 -3.415 1.651 -5.357 1.651c-4 0 -7.333 -2.333 -10 -7c1.369 -2.395 2.913 -4.175 4.632 -5.341"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EyeTableIcon = {
	  name: 'EyeTableIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-eye-table",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.003 18.003h-.011"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.003 18.002h-.011"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.003 18.002h-.011"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 3h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 3v17a1 1 0 0 0 1 1h12a1 1 0 0 0 1 -1v-17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 7h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 15h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11v-4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EyeIcon = {
	  name: 'EyeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-eye",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 12c-2.667 4.667 -6 7 -10 7s-7.333 -2.333 -10 -7c2.667 -4.667 6 -7 10 -7s7.333 2.333 10 7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Eyeglass2Icon = {
	  name: 'Eyeglass2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-eyeglass-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4h-2l-3 10v2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2l3 10v2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "16",
	      "x2": "14",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17.5",
	      "cy": "16.5",
	      "r": "3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6.5",
	      "cy": "16.5",
	      "r": "3.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var EyeglassIcon = {
	  name: 'EyeglassIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-eyeglass",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4h-2l-3 10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2l3 10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "16",
	      "x2": "14",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 16.5a3.5 3.5 0 0 1 -7 0v-2.5h7v2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16.5a3.5 3.5 0 0 1 -7 0v-2.5h7v2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FaceIdErrorIcon = {
	  name: 'FaceIdErrorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-face-id-error",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v-2a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v2a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 10h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 15.05a3.5 3.5 0 0 1 5 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FaceIdIcon = {
	  name: 'FaceIdIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-face-id",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v-2a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v2a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "10",
	      "x2": "9.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "10",
	      "x2": "15.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 15a3.5 3.5 0 0 0 5 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FaceMaskIcon = {
	  name: 'FaceMaskIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-face-mask",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.002 14.5h-.222c-1.535 0 -2.778 -1.12 -2.778 -2.5s1.243 -2.5 2.778 -2.5h.222"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.002 14.5h.222c1.534 0 2.778 -1.12 2.778 -2.5s-1.244 -2.5 -2.778 -2.5h-.222"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 10h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 14h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.55 18.843l5 -1.429a2 2 0 0 0 1.45 -1.923v-6.981a2 2 0 0 0 -1.45 -1.923l-5 -1.429a2 2 0 0 0 -1.1 0l-5 1.429a2 2 0 0 0 -1.45 1.922v6.982a2 2 0 0 0 1.45 1.923l5 1.429a2 2 0 0 0 1.1 0z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FallIcon = {
	  name: 'FallIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-fall",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 21l1 -5l-1 -4l-3 -4h4l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 16l-1 -4l3 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.5 12h2.5l4 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FeatherIcon = {
	  name: 'FeatherIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-feather",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20l10 -10m0 -5v5h5m-9 -1v5h5m-9 -1v5h5m-5 -5l4 -4l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 10c.638 -.636 1 -1.515 1 -2.486a3.515 3.515 0 0 0 -3.517 -3.514c-.97 0 -1.847 .367 -2.483 1m-3 13l4 -4l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FenceIcon = {
	  name: 'FenceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-fence",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v4h16v-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 16v4h4v-4m0 -4v-6l-2 -2l-2 2v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 16v4h4v-4m0 -4v-6l-2 -2l-2 2v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FidgetSpinnerIcon = {
	  name: 'FidgetSpinnerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-fidget-spinner",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 17a3 3 0 1 1 -1.543 -2.623l2.087 -3.754a3 3 0 0 1 1.456 -5.623a3 3 0 0 1 1.457 5.623l2.087 3.754a3 3 0 1 1 -1.538 2.8l-.006 -.177h-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 17v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var File3dIcon = {
	  name: 'File3dIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-3d",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13.5l4 -1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11.846l4 1.654v4.5l4 -1.846v-4.308l-4 -1.846z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12v4.2l4 1.8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileAlertIcon = {
	  name: 'FileAlertIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-alert",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "17",
	      "x2": "12.01",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "11",
	      "x2": "12",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileAnalyticsIcon = {
	  name: 'FileAnalyticsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-analytics",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "17",
	      "x2": "9",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "17",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "17",
	      "x2": "15",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileArrowLeftIcon = {
	  name: 'FileArrowLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-arrow-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 15h-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.5 17.5l-2.5 -2.5l2.5 -2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileArrowRightIcon = {
	  name: 'FileArrowRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-arrow-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.5 17.5l2.5 -2.5l-2.5 -2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileBarcodeIcon = {
	  name: 'FileBarcodeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-barcode",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13h1v3h-1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 13h1v3h-1z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileCertificateIcon = {
	  name: 'FileCertificateIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-certificate",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 8v-3a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "14",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.5 17l-1.5 5l3 -1.5l3 1.5l-1.5 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileChartIcon = {
	  name: 'FileChartIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-chart",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10v4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileCheckIcon = {
	  name: 'FileCheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15l2 2l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileCode2Icon = {
	  name: 'FileCode2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-code-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12h-1v5h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 12h1v5h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileCodeIcon = {
	  name: 'FileCodeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-code",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13l-1 2l1 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 13l1 2l-1 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileDatabaseIcon = {
	  name: 'FileDatabaseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-database",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("     "), vue.createVNode("ellipse", {
	      "cx": "12",
	      "cy": "12.75",
	      "rx": "4",
	      "ry": "1.75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12.5v3.75c0 .966 1.79 1.75 4 1.75s4 -.784 4 -1.75v-3.75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileDescriptionIcon = {
	  name: 'FileDescriptionIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-description",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 13h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileDiffIcon = {
	  name: 'FileDiffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-diff",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "10",
	      "x2": "12",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "12",
	      "x2": "14",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "17",
	      "x2": "14",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileDigitIcon = {
	  name: 'FileDigitIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-digit",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "12",
	      "width": "3",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 12v5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileDislikeIcon = {
	  name: 'FileDislikeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-dislike",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "14",
	      "width": "3",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15a1 1 0 0 1 1 -1h3.756a1 1 0 0 1 .958 .713l1.2 3c.09 .303 .133 .63 -.056 .884c-.188 .254 -.542 .403 -.858 .403h-2v2.467a1.1 1.1 0 0 1 -2.015 .61l-1.985 -3.077v-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 11v-6a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileDollarIcon = {
	  name: 'FileDollarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-dollar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 11h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v1m0 -8v1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileDotsIcon = {
	  name: 'FileDotsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-dots",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 14v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 14v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileDownloadIcon = {
	  name: 'FileDownloadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-download",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 14.5l2.5 2.5l2.5 -2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileEuroIcon = {
	  name: 'FileEuroIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-euro",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14h-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.004 11.172a3 3 0 1 0 -.001 5.656"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileExportIcon = {
	  name: 'FileExportIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-export",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.5 21h-4.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v5m-5 6h7m-3 -3l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileHorizontalIcon = {
	  name: 'FileHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 5v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2 -2v-7l-5 -5h-11a2 2 0 0 0 -2 2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileImportIcon = {
	  name: 'FileImportIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-import",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 13v-8a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-5.5m-9.5 -2h7m-3 -3l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileInfoIcon = {
	  name: 'FileInfoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-info",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 14h1v4h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11h.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileInvoiceIcon = {
	  name: 'FileInvoiceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-invoice",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "7",
	      "x2": "10",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "13",
	      "x2": "15",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "17",
	      "x2": "15",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileLikeIcon = {
	  name: 'FileLikeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-like",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "16",
	      "width": "3",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 20a1 1 0 0 0 1 1h3.756a1 1 0 0 0 .958 -.713l1.2 -3c.09 -.303 .133 -.63 -.056 -.884c-.188 -.254 -.542 -.403 -.858 -.403h-2v-2.467a1.1 1.1 0 0 0 -2.015 -.61l-1.985 3.077v4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12.1v-7.1a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-2.3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileMinusIcon = {
	  name: 'FileMinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "14",
	      "x2": "15",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileMusicIcon = {
	  name: 'FileMusicIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-music",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "11",
	      "cy": "16",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "12 16 12 11 14 12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileOffIcon = {
	  name: 'FileOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 3h7l5 5v7m0 4a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FilePencilIcon = {
	  name: 'FilePencilIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-pencil",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 18l5 -5a1.414 1.414 0 0 0 -2 -2l-5 5v2h2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FilePhoneIcon = {
	  name: 'FilePhoneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-phone",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12a0.5 .5 0 0 0 1 0v-1a0.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a0.5 .5 0 0 0 0 -1h-1a0.5 .5 0 0 0 0 1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FilePlusIcon = {
	  name: 'FilePlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "11",
	      "x2": "12",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "14",
	      "x2": "15",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FilePowerIcon = {
	  name: 'FilePowerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-power",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11l-2 3h4l-2 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileReportIcon = {
	  name: 'FileReportIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-report",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 13v4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.5 21h-6.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v2m0 3v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileRssIcon = {
	  name: 'FileRssIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-rss",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17a3 3 0 0 0 -3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 17a6 6 0 0 0 -6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17h.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileScissorsIcon = {
	  name: 'FileScissorsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-scissors",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "17",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "17",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17l6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 17l-6 -6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileSearchIcon = {
	  name: 'FileSearchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-search",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21h-5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16.5",
	      "cy": "17.5",
	      "r": "2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18.5",
	      "y1": "19.5",
	      "x2": "21",
	      "y2": "22"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileSettingsIcon = {
	  name: 'FileSettingsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-settings",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10.5v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.031 12.25l-1.299 .75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.268 15l-1.3 .75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 15.803l-1.285 -.773"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.285 12.97l-1.285 -.773"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileShredderIcon = {
	  name: 'FileShredderIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-shredder",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "16",
	      "x2": "6",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "16",
	      "x2": "10",
	      "y2": "22"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "16",
	      "x2": "14",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "16",
	      "x2": "18",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileSignalIcon = {
	  name: 'FileSignalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-signal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.525 11.525a3.5 3.5 0 0 0 0 4.95m4.95 0a3.5 3.5 0 0 0 0 -4.95"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileSpreadsheetIcon = {
	  name: 'FileSpreadsheetIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-spreadsheet",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11h8v7h-8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 15h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 11v7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileStarIcon = {
	  name: 'FileStarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-star",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.8 16.817l-2.172 1.138a0.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a0.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a0.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a0.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a0.39 .39 0 0 1 -.567 .411l-2.172 -1.138z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileSymlinkIcon = {
	  name: 'FileSymlinkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-symlink",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21v-4a3 3 0 0 1 3 -3h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17l3 -3l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 11v-6a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-9.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileTextIcon = {
	  name: 'FileTextIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-text",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "9",
	      "x2": "10",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "13",
	      "x2": "15",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "17",
	      "x2": "15",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileTimeIcon = {
	  name: 'FileTimeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-time",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12.496v1.504l1 1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileTypographyIcon = {
	  name: 'FileTypographyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-typography",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12v-1h6v1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileUnknownIcon = {
	  name: 'FileUnknownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-unknown",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14a1.5 1.5 0 1 0 -1.14 -2.474"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileUploadIcon = {
	  name: 'FileUploadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-upload",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 13.5l2.5 -2.5l2.5 2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileVectorIcon = {
	  name: 'FileVectorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-vector",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9.5",
	      "cy": "16.5",
	      "r": "1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14.5",
	      "cy": "12.5",
	      "r": "1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 15a2.5 2.5 0 0 1 2.5 -2.5h1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileXIcon = {
	  name: 'FileXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileZipIcon = {
	  name: 'FileZipIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file-zip",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 20.735a2 2 0 0 1 -1 -1.735v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 17a2 2 0 0 1 2 2v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-2a2 2 0 0 1 2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "5",
	      "x2": "10",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "7",
	      "x2": "12",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "9",
	      "x2": "10",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "11",
	      "x2": "12",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "13",
	      "x2": "10",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "15",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FileIcon = {
	  name: 'FileIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-file",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FilesOffIcon = {
	  name: 'FilesOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-files-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17h-6a2 2 0 0 1 -2 -2v-6m0 -4a2 2 0 0 1 2 -2h4l5 5v7c0 .294 -.063 .572 -.177 .823"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 17v2a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FilesIcon = {
	  name: 'FilesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-files",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 17h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h4l5 5v7a2 2 0 0 1 -2 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 17v2a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FilterOffIcon = {
	  name: 'FilterOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-filter-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h9.5a1 1 0 0 1 .5 1.5l-4.049 4.454m-.951 3.046v5l-4 -3v-4l-5 -5.5a1 1 0 0 1 .18 -1.316"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FilterIcon = {
	  name: 'FilterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-filter",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.5 5h13a1 1 0 0 1 .5 1.5l-5 5.5l0 7l-4 -3l0 -4l-5 -5.5a1 1 0 0 1 .5 -1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FingerprintIcon = {
	  name: 'FingerprintIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-fingerprint",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.9 7a8 8 0 0 1 1.1 5v1a6 6 0 0 0 .8 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11a4 4 0 0 1 8 0v1a10 10 0 0 0 2 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11v2a14 14 0 0 0 2.5 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 15a18 18 0 0 0 1.8 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.9 19a22 22 0 0 1 -.9 -7v-1a8 8 0 0 1 12 -6.95"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FiretruckIcon = {
	  name: 'FiretruckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-firetruck",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18h8m4 0h2v-6a5 5 0 0 0 -5 -5h-1l1.5 5h4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18v-11h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "3 17 3 12 12 12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "9",
	      "x2": "21",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "12",
	      "x2": "6",
	      "y2": "8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FirstAidKitIcon = {
	  name: 'FirstAidKitIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-first-aid-kit",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8v-2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "8",
	      "width": "16",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FishIcon = {
	  name: 'FishIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-fish",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.69 7.44a6.973 6.973 0 0 0 -1.69 4.56c0 1.747 .64 3.345 1.699 4.571"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 9.504c7.715 8.647 14.75 10.265 20 2.498c-5.25 -7.761 -12.285 -6.142 -20 2.504"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 11v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.5 10.5c-.667 1 -.667 2 0 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Flag2Icon = {
	  name: 'Flag2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-flag-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 14h14v-9h-14v16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Flag3Icon = {
	  name: 'Flag3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-flag-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 14h14l-4.5 -4.5l4.5 -4.5h-14v16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FlagIcon = {
	  name: 'FlagIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-flag",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "5",
	      "x2": "5",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "5",
	      "x2": "19",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 5a5 5 0 0 1 7 0a5 5 0 0 0 7 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 14a5 5 0 0 1 7 0a5 5 0 0 0 7 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FlameIcon = {
	  name: 'FlameIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-flame",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12c2 -2.96 0 -7 -1 -8c0 3.038 -1.773 4.741 -3 6c-1.226 1.26 -2 3.24 -2 5a6 6 0 1 0 12 0c0 -1.532 -1.056 -3.94 -2 -5c-1.786 3 -2.791 3 -4 2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FlareIcon = {
	  name: 'FlareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-flare",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h4m5 -9v4m5 5h4m-9 5v4m-4.5 -13.5l1 1m8 -1l-1 1m0 7l1 1m-8 -1l-1 1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Flask2Icon = {
	  name: 'Flask2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-flask-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.1 15h11.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v7.342a6.002 6.002 0 0 1 1.318 10.658h-6.635a6.002 6.002 0 0 1 1.317 -10.66v-7.34h4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 3h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FlaskIcon = {
	  name: 'FlaskIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-flask",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "3",
	      "x2": "15",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "9",
	      "x2": "14",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 3v6l-4 11a0.7 .7 0 0 0 .5 1h11a0.7 .7 0 0 0 .5 -1l-4 -11v-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FlipHorizontalIcon = {
	  name: 'FlipHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-flip-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 16 17 16 7 21 7 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 8 17 8 7 3 7 8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FlipVerticalIcon = {
	  name: 'FlipVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-flip-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 7 16 17 21 17 16 7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 7 8 17 3 17 8 7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FloatCenterIcon = {
	  name: 'FloatCenterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-float-center",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "width": "6",
	      "height": "6",
	      "x": "9",
	      "y": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "7",
	      "x2": "5",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "11",
	      "x2": "5",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "7",
	      "x2": "20",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "11",
	      "x2": "20",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "15",
	      "x2": "20",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "19",
	      "x2": "20",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FloatLeftIcon = {
	  name: 'FloatLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-float-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "width": "6",
	      "height": "6",
	      "x": "4",
	      "y": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "7",
	      "x2": "20",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "11",
	      "x2": "20",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "15",
	      "x2": "20",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "19",
	      "x2": "20",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FloatNoneIcon = {
	  name: 'FloatNoneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-float-none",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "width": "6",
	      "height": "6",
	      "x": "4",
	      "y": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "15",
	      "x2": "20",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "19",
	      "x2": "20",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FloatRightIcon = {
	  name: 'FloatRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-float-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "width": "6",
	      "height": "6",
	      "x": "14",
	      "y": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "7",
	      "x2": "10",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "11",
	      "x2": "10",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "15",
	      "x2": "20",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "19",
	      "x2": "20",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FlowerIcon = {
	  name: 'FlowerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-flower",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 2a3 3 0 0 1 3 3c0 .562 -.259 1.442 -.776 2.64l-.724 1.36l1.76 -1.893c.499 -.6 .922 -1.002 1.27 -1.205a2.968 2.968 0 0 1 4.07 1.099a3.011 3.011 0 0 1 -1.09 4.098c-.374 .217 -.99 .396 -1.846 .535l-2.664 .366l2.4 .326c.995 .145 1.698 .337 2.11 .576a3.011 3.011 0 0 1 1.09 4.098a2.968 2.968 0 0 1 -4.07 1.098c-.348 -.202 -.771 -.604 -1.27 -1.205l-1.76 -1.893l.724 1.36c.516 1.199 .776 2.079 .776 2.64a3 3 0 0 1 -6 0c0 -.562 .259 -1.442 .776 -2.64l.724 -1.36l-1.76 1.893c-.499 .601 -.922 1.003 -1.27 1.205a2.968 2.968 0 0 1 -4.07 -1.098a3.011 3.011 0 0 1 1.09 -4.098c.374 -.218 .99 -.396 1.846 -.536l2.664 -.366l-2.4 -.325c-.995 -.145 -1.698 -.337 -2.11 -.576a3.011 3.011 0 0 1 -1.09 -4.099a2.968 2.968 0 0 1 4.07 -1.099c.348 .203 .771 .604 1.27 1.205l1.76 1.894c-1 -2.292 -1.5 -3.625 -1.5 -4a3 3 0 0 1 3 -3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Focus2Icon = {
	  name: 'Focus2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-focus-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "5",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "19",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FocusCenteredIcon = {
	  name: 'FocusCenteredIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-focus-centered",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v-2a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v2a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FocusIcon = {
	  name: 'FocusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-focus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FoldDownIcon = {
	  name: 'FoldDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-fold-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11v8l3 -3m-6 0l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "7",
	      "x2": "10",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "7",
	      "x2": "15",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "7",
	      "x2": "20",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "7",
	      "x2": "5",
	      "y2": "7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FoldUpIcon = {
	  name: 'FoldUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-fold-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13v-8l-3 3m6 0l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "17",
	      "x2": "10",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "17",
	      "x2": "15",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "17",
	      "x2": "20",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "17",
	      "x2": "5",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FoldIcon = {
	  name: 'FoldIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-fold",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v6l3 -3m-6 0l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-6l3 3m-6 0l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "5",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "10",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FolderMinusIcon = {
	  name: 'FolderMinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-folder-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "13",
	      "x2": "15",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FolderOffIcon = {
	  name: 'FolderOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-folder-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 19h-14a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 1.172 -1.821m3.828 -.179h1l3 3h7a2 2 0 0 1 2 2v8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FolderPlusIcon = {
	  name: 'FolderPlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-folder-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "10",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "13",
	      "x2": "15",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FolderXIcon = {
	  name: 'FolderXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-folder-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 11l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FolderIcon = {
	  name: 'FolderIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-folder",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FoldersIcon = {
	  name: 'FoldersIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-folders",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 4h3l2 2h5a2 2 0 0 1 2 2v7a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Forbid2Icon = {
	  name: 'Forbid2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-forbid-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "15",
	      "x2": "15",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ForbidIcon = {
	  name: 'ForbidIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-forbid",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "9",
	      "x2": "15",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ForkliftIcon = {
	  name: 'ForkliftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-forklift",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "17",
	      "x2": "12",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17v-6h13v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 11v-4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 11v-6h4l3 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 15h-3v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "13",
	      "x2": "19",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FormsIcon = {
	  name: 'FormsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-forms",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a3 3 0 0 0 -3 3v12a3 3 0 0 0 3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 3a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 7h7a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7h-1a1 1 0 0 0 -1 1v8a1 1 0 0 0 1 1h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 12h.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FountainIcon = {
	  name: 'FountainIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-fountain",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 16v-5a2 2 0 1 0 -4 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 16v-5a2 2 0 1 1 4 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16v-10a3 3 0 0 1 6 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6a3 3 0 0 1 6 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 16h18v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3v-2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FrameIcon = {
	  name: 'FrameIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-frame",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "7",
	      "x2": "20",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "17",
	      "x2": "20",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "4",
	      "x2": "7",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "4",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FreeRightsIcon = {
	  name: 'FreeRightsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-free-rights",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.867 9.75c-.246 -.48 -.708 -.769 -1.2 -.75h-1.334c-.736 0 -1.333 .67 -1.333 1.5c0 .827 .597 1.499 1.333 1.499h1.334c.736 0 1.333 .671 1.333 1.5c0 .828 -.597 1.499 -1.333 1.499h-1.334c-.492 .019 -.954 -.27 -1.2 -.75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6l1.5 1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.5 16.5l1.5 1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var FriendsIcon = {
	  name: 'FriendsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-friends",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 22v-5l-1 -1v-4a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4l-1 1v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 22v-4h-2l2 -6a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1l2 6h-2v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GasStationIcon = {
	  name: 'GasStationIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gas-station",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 11h1a2 2 0 0 1 2 2v3a1.5 1.5 0 0 0 3 0v-7l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20v-14a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "20",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 7v1a1 1 0 0 0 1 1h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "11",
	      "x2": "14",
	      "y2": "11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GaugeIcon = {
	  name: 'GaugeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gauge",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13.41",
	      "y1": "10.59",
	      "x2": "16",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12a5 5 0 0 1 5 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GavelIcon = {
	  name: 'GavelIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gavel",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 10l7.383 7.418c.823 .82 .823 2.148 0 2.967a2.11 2.11 0 0 1 -2.976 0l-7.407 -7.385"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 9l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 10l-4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.793 15.793l-3.586 -3.586a1 1 0 0 1 0 -1.414l2.293 -2.293l.5 .5l3 -3l-.5 -.5l2.293 -2.293a1 1 0 0 1 1.414 0l3.586 3.586a1 1 0 0 1 0 1.414l-2.293 2.293l-.5 -.5l-3 3l.5 .5l-2.293 2.293a1 1 0 0 1 -1.414 0z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderAgenderIcon = {
	  name: 'GenderAgenderIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-agender",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12h11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderAndrogyneIcon = {
	  name: 'GenderAndrogyneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-androgyne",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 11l6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "15",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 9v-4h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.5 10.5l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderBigenderIcon = {
	  name: 'GenderBigenderIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-bigender",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "11",
	      "cy": "11",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 3l-5 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3h4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 16v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 19h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderDemiboyIcon = {
	  name: 'GenderDemiboyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-demiboy",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "14",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 5l-5.4 5.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 5h-5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderDemigirlIcon = {
	  name: 'GenderDemigirlIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-demigirl",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "9",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderEpiceneIcon = {
	  name: 'GenderEpiceneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-epicene",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "rotate(-45 12 12)",
	      "cx": "12",
	      "cy": "12",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.536 15.535l5.464 -5.535"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 14l5.464 -5.535"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12h.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderFemaleIcon = {
	  name: 'GenderFemaleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-female",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "9",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderFemmeIcon = {
	  name: 'GenderFemmeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-femme",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "9",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18h10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderGenderfluidIcon = {
	  name: 'GenderGenderfluidIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-genderfluid",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("     "), vue.createVNode("g", {
	      "transform": "rotate(30 -2.778 22.523)"
	    }, [vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "4.759",
	      "cy": "6.021",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.758 6.02v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M.758 12.02v-6"
	    }, null), vue.createTextVNode("     ")]), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 9l-6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.5 8.5l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 21l-6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 20l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7v-4h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderGenderlessIcon = {
	  name: 'GenderGenderlessIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-genderless",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "matrix(1 0 0 -1 0 30)",
	      "cx": "12",
	      "cy": "15",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 15h10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderGenderqueerIcon = {
	  name: 'GenderGenderqueerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-genderqueer",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "matrix(1 0 0 -1 0 32)",
	      "cx": "12",
	      "cy": "16",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11v-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.5 4.5l-5 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 4.5l5 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderHermaphroditeIcon = {
	  name: 'GenderHermaphroditeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-hermaphrodite",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "matrix(1 0 0 -1 0 20)",
	      "cx": "12",
	      "cy": "10",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3a3 3 0 0 1 -6 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderIntergenderIcon = {
	  name: 'GenderIntergenderIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-intergender",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.5 11.5l6.5 6.5v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.5 13.5l6.5 6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "matrix(1 0 0 -1 0 18)",
	      "cx": "9",
	      "cy": "9",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 20l2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderMaleIcon = {
	  name: 'GenderMaleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-male",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "14",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 5l-5.4 5.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 5h-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 5v5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderNeutroisIcon = {
	  name: 'GenderNeutroisIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-neutrois",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "matrix(1 0 0 -1 0 30)",
	      "cx": "12",
	      "cy": "15",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10v-7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderThirdIcon = {
	  name: 'GenderThirdIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-third",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "rotate(90 16 12)",
	      "cx": "16",
	      "cy": "12",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 12h-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12l-5 -4v8z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderTransgenderIcon = {
	  name: 'GenderTransgenderIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-transgender",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 9l6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 7v-4h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 9l-6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7v-4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.5 8.5l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 19h5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GenderTrasvestiIcon = {
	  name: 'GenderTrasvestiIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gender-trasvesti",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 20a5 5 0 1 1 0 -10a5 5 0 0 1 0 10z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6l5.4 5.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GeometryIcon = {
	  name: 'GeometryIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-geometry",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 21l4 -12m2 0l1.48 4.439m.949 2.847l1.571 4.714"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "7",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12c1.526 2.955 4.588 5 8 5c3.41 0 6.473 -2.048 8 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GhostIcon = {
	  name: 'GhostIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ghost",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 11a7 7 0 0 1 14 0v7a1.78 1.78 0 0 1 -3.1 1.4a1.65 1.65 0 0 0 -2.6 0a1.65 1.65 0 0 1 -2.6 0a1.65 1.65 0 0 0 -2.6 0a1.78 1.78 0 0 1 -3.1 -1.4v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "10",
	      "x2": "10.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "10",
	      "x2": "14.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14a3.5 3.5 0 0 0 4 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GiftIcon = {
	  name: 'GiftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gift",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "8",
	      "width": "18",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 12v7a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 8a2.5 2.5 0 0 1 0 -5a4.8 8 0 0 1 4.5 5a4.8 8 0 0 1 4.5 -5a2.5 2.5 0 0 1 0 5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GitBranchIcon = {
	  name: 'GitBranchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-git-branch",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "8",
	      "x2": "7",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18h6a2 2 0 0 0 2 -2v-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "14 14 17 11 20 14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GitCommitIcon = {
	  name: 'GitCommitIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-git-commit",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "15",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GitCompareIcon = {
	  name: 'GitCompareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-git-compare",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 6h5a2 2 0 0 1 2 2v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "14 9 11 6 14 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 18h-5a2 2 0 0 1 -2 -2v-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "10 15 13 18 10 21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GitForkIcon = {
	  name: 'GitForkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-git-fork",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 8v2a2 2 0 0 0 2 2h6a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GitMergeIcon = {
	  name: 'GitMergeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-git-merge",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "8",
	      "x2": "7",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 8a4 4 0 0 0 4 4h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GitPullRequestClosedIcon = {
	  name: 'GitPullRequestClosedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-git-pull-request-closed",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 8v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 11v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GitPullRequestDraftIcon = {
	  name: 'GitPullRequestDraftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-git-pull-request-draft",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 8v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 11h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 6h.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GitPullRequestIcon = {
	  name: 'GitPullRequestIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-git-pull-request",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "8",
	      "x2": "6",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 6h5a2 2 0 0 1 2 2v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "14 9 11 6 14 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GizmoIcon = {
	  name: 'GizmoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gizmo",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 19l-8 -5.5l-8 5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4v9.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "4",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "4",
	      "cy": "19",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "20",
	      "cy": "19",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GlassFullIcon = {
	  name: 'GlassFullIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-glass-full",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "21",
	      "x2": "16",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "15",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3l1 7c0 3.012 -2.686 5 -6 5s-6 -1.988 -6 -5l1 -7h10z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10a5 5 0 0 1 6 0a5 5 0 0 0 6 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GlassOffIcon = {
	  name: 'GlassOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-glass-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "21",
	      "x2": "16",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "15",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 3h10l1 7a4.511 4.511 0 0 1 -1.053 2.94m-2.386 1.625a7.48 7.48 0 0 1 -2.561 .435c-3.314 0 -6 -1.988 -6 -5l.5 -3.495"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GlassIcon = {
	  name: 'GlassIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-glass",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "21",
	      "x2": "16",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "15",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3l1 7c0 3.012 -2.686 5 -6 5s-6 -1.988 -6 -5l1 -7h10z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GlobeIcon = {
	  name: 'GlobeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-globe",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "10",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.75 16a8.015 8.015 0 1 0 9.25 -13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18",
	      "x2": "12",
	      "y2": "22"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "22",
	      "x2": "16",
	      "y2": "22"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GolfIcon = {
	  name: 'GolfIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-golf",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18v-15l7 4l-7 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17.67c-.62 .36 -1 .82 -1 1.33c0 1.1 1.8 2 4 2s4 -.9 4 -2c0 -.5 -.38 -.97 -1 -1.33"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GpsIcon = {
	  name: 'GpsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-gps",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17l-1 -4l-4 -1l9 -4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GrainIcon = {
	  name: 'GrainIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-grain",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "4.5",
	      "cy": "9.5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9.5",
	      "cy": "4.5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9.5",
	      "cy": "14.5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "4.5",
	      "cy": "19.5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14.5",
	      "cy": "9.5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19.5",
	      "cy": "4.5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14.5",
	      "cy": "19.5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19.5",
	      "cy": "14.5",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GridDotsIcon = {
	  name: 'GridDotsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-grid-dots",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "19",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "19",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "19",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GridPatternIcon = {
	  name: 'GridPatternIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-grid-pattern",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 8v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 8v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 14h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GrillIcon = {
	  name: 'GrillIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-grill",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 8h-14a6 6 0 0 0 6 6h2a6 6 0 0 0 5.996 -5.775l.004 -.225z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 20a2 2 0 1 1 0 -4a2 2 0 0 1 0 4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 14l1 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 14l-3 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 18h-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 5v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5v-1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GripHorizontalIcon = {
	  name: 'GripHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-grip-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "9",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "15",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "9",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "15",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "9",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "15",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GripVerticalIcon = {
	  name: 'GripVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-grip-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "19",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "19",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var GrowthIcon = {
	  name: 'GrowthIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-growth",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.5 15a4.5 4.5 0 0 0 -4.5 4.5m4.5 -8.5a4.5 4.5 0 0 0 -4.5 4.5m4.5 -8.5a4.5 4.5 0 0 0 -4.5 4.5m-4 3.5c2.21 0 4 2.015 4 4.5m-4 -8.5c2.21 0 4 2.015 4 4.5m-4 -8.5c2.21 0 4 2.015 4 4.5m0 -7.5v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var H1Icon = {
	  name: 'H1Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-h-1",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 18v-8l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 6h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var H2Icon = {
	  name: 'H2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-h-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12a2 2 0 1 1 4 0c0 .591 -.417 1.318 -.816 1.858l-3.184 4.143l4 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 6h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var H3Icon = {
	  name: 'H3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-h-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 14a2 2 0 1 0 -2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 16a2 2 0 1 0 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 6h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var H4Icon = {
	  name: 'H4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-h-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 18v-8l-4 6h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 6h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var H5Icon = {
	  name: 'H5Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-h-5",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 18h2a2 2 0 1 0 0 -4h-2v-4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 6h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var H6Icon = {
	  name: 'H6Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-h-6",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "rotate(180 19 16)",
	      "cx": "19",
	      "cy": "16",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12a2 2 0 1 0 -4 0v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 6h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HammerIcon = {
	  name: 'HammerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hammer",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 10l7.383 7.418c.823 .82 .823 2.148 0 2.967a2.11 2.11 0 0 1 -2.976 0l-7.407 -7.385"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.293 15.293l-2.586 -2.586a1 1 0 0 1 0 -1.414l7.586 -7.586a1 1 0 0 1 1.414 0l2.586 2.586a1 1 0 0 1 0 1.414l-7.586 7.586a1 1 0 0 1 -1.414 0z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandClickIcon = {
	  name: 'HandClickIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-click",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 11.5v-2a1.5 1.5 0 0 1 3 0v2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10.5a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7l-.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 3l-1 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 7h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3l1 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 6h1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandFingerIcon = {
	  name: 'HandFingerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-finger",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 11.5v-2a1.5 1.5 0 1 1 3 0v2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10.5a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandGrabIcon = {
	  name: 'HandGrabIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-grab",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11v-3.5a1.5 1.5 0 0 1 3 0v2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 9.5v-3a1.5 1.5 0 0 1 3 0v3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 7.5a1.5 1.5 0 0 1 3 0v2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 9.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7l-.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandLittleFingerIcon = {
	  name: 'HandLittleFingerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-little-finger",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v-2.5a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 11.5v-1a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12v-5.5a1.5 1.5 0 0 1 3 0v9.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10.5a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandMiddleFingerIcon = {
	  name: 'HandMiddleFingerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-middle-finger",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v-2.5a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10.5a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 11.5v-8a1.5 1.5 0 1 1 3 0v8.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandMoveIcon = {
	  name: 'HandMoveIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-move",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 11.5v-2a1.5 1.5 0 0 1 3 0v2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10.5a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7l-.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2.541 5.594a13.487 13.487 0 0 1 2.46 -1.427"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3.458c1.32 .354 2.558 .902 3.685 1.612"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandOffIcon = {
	  name: 'HandOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13.5v-5.5m.44 -3.562a1.5 1.5 0 0 1 2.56 1.062v1.5m0 4.008v.992m0 -6.5v-2a1.5 1.5 0 1 1 3 0v6.5m0 -4.5a1.5 1.5 0 0 1 3 0v6.5m0 -4.5a1.5 1.5 0 0 1 3 0v8.5a6 6 0 0 1 -6 6h-2c-2.114 -.292 -3.956 -1.397 -5 -3l-2.7 -5.25a1.7 1.7 0 0 1 2.75 -2l.9 1.75"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandRingFingerIcon = {
	  name: 'HandRingFingerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-ring-finger",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v-2.5a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 11.5v-2a1.5 1.5 0 1 1 3 0v2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 12v-6.5a1.5 1.5 0 0 1 3 0v6.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandRockIcon = {
	  name: 'HandRockIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-rock",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 11.5v-1a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12v-6.5a1.5 1.5 0 0 1 3 0v10.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10.5a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandStopIcon = {
	  name: 'HandStopIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-stop",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v-7.5a1.5 1.5 0 0 1 3 0v6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 5.5v-2a1.5 1.5 0 1 1 3 0v8.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 5.5a1.5 1.5 0 0 1 3 0v6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 7.5a1.5 1.5 0 0 1 3 0v8.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandThreeFingersIcon = {
	  name: 'HandThreeFingersIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-three-fingers",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 5.5v-2a1.5 1.5 0 1 1 3 0v8.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 5.5a1.5 1.5 0 0 1 3 0v6.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HandTwoFingersIcon = {
	  name: 'HandTwoFingersIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hand-two-fingers",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10.5a1.5 1.5 0 0 1 3 0v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 5.5v-2a1.5 1.5 0 1 1 3 0v8.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Hanger2Icon = {
	  name: 'Hanger2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hanger-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9l-7.971 4.428a2 2 0 0 0 -1.029 1.749v.823a2 2 0 0 0 2 2h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 18h1a2 2 0 0 0 2 -2v-.823a2 2 0 0 0 -1.029 -1.749l-7.971 -4.428c-1.457 -.81 -1.993 -2.333 -1.996 -4a2 2 0 1 1 4 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "16",
	      "width": "12",
	      "height": "5",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HangerIcon = {
	  name: 'HangerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hanger",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.004 6a2 2 0 1 0 -4 0c.003 1.667 .67 3 2.004 4h-.008l7.971 4.428a2 2 0 0 1 1.029 1.749v.823a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-.823a2 2 0 0 1 1.029 -1.749l7.971 -4.428"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HashIcon = {
	  name: 'HashIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hash",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "9",
	      "x2": "19",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "15",
	      "x2": "19",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "4",
	      "x2": "7",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "4",
	      "x2": "13",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HazeIcon = {
	  name: 'HazeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-haze",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.6 5.6l.7 .7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.4 5.6l-.7 .7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12a4 4 0 1 1 8 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 16h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 20h18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HeadingIcon = {
	  name: 'HeadingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-heading",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 5v14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 5v14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 19h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 5h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 19h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 5h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HeadphonesOffIcon = {
	  name: 'HeadphonesOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-headphones-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "13",
	      "width": "5",
	      "height": "7",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 13h1a2 2 0 0 1 2 2v1m-.589 3.417c-.361 .36 -.86 .583 -1.411 .583h-1a2 2 0 0 1 -2 -2v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 15v-3c0 -2.21 .896 -4.21 2.344 -5.658m2.369 -1.638a8 8 0 0 1 11.287 7.296v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HeadphonesIcon = {
	  name: 'HeadphonesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-headphones",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "13",
	      "rx": "2",
	      "width": "5",
	      "height": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "15",
	      "y": "13",
	      "rx": "2",
	      "width": "5",
	      "height": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 15v-3a8 8 0 0 1 16 0v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HeadsetIcon = {
	  name: 'HeadsetIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-headset",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "13",
	      "rx": "2",
	      "width": "4",
	      "height": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "16",
	      "y": "13",
	      "rx": "2",
	      "width": "4",
	      "height": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 15v-3a8 8 0 0 1 16 0v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 19a6 3 0 0 1 -6 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HeartBrokenIcon = {
	  name: 'HeartBrokenIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-heart-broken",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.5 13.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7l-2 4l4 3l-2 4v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HeartHandshakeIcon = {
	  name: 'HeartHandshakeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-heart-handshake",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.5 13.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7l-3.293 3.293a1 1 0 0 0 0 1.414l.543 .543c.69 .69 1.81 .69 2.5 0l1 -1a3.182 3.182 0 0 1 4.5 0l2.25 2.25"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.5 16.5l2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 14l2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HeartRateMonitorIcon = {
	  name: 'HeartRateMonitorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-heart-rate-monitor",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "4",
	      "width": "18",
	      "height": "12",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 20h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 16v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 16v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 10h2l2 3l2 -6l1 3h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HeartIcon = {
	  name: 'HeartIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-heart",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.5 13.572l-7.5 7.428l-7.5 -7.428m0 0a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HeartbeatIcon = {
	  name: 'HeartbeatIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-heartbeat",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.5 13.572l-7.5 7.428l-2.896 -2.868m-6.117 -8.104a5 5 0 0 1 9.013 -3.022a5 5 0 1 1 7.5 6.572"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 13h2l2 3l2 -6l1 3h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HelicopterLandingIcon = {
	  name: 'HelicopterLandingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-helicopter-landing",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "8",
	      "x2": "9",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "8",
	      "x2": "15",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HelicopterIcon = {
	  name: 'HelicopterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-helicopter",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10l1 2h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9a2 2 0 0 0 -2 2v3c0 1.1 .9 2 2 2h7a2 2 0 0 0 2 -2c0 -3.31 -3.13 -5 -7 -5h-2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "9",
	      "x2": "13",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 9.1v3.9h5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "19",
	      "x2": "15",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "19",
	      "x2": "11",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HelmetIcon = {
	  name: 'HelmetIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-helmet",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4a9 9 0 0 1 5.656 16h-11.312a9 9 0 0 1 5.656 -16z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 9h-8.8a1 1 0 0 0 -.968 1.246c.507 2 1.596 3.418 3.268 4.254c2 1 4.333 1.5 7 1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HelpIcon = {
	  name: 'HelpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-help",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "17",
	      "x2": "12",
	      "y2": "17.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13.5a1.5 1.5 0 0 1 1 -1.5a2.6 2.6 0 1 0 -3 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HexagonOffIcon = {
	  name: 'HexagonOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hexagon-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.693 4.69l2.336 -1.39a2.056 2.056 0 0 1 2 0l6 3.573h-.029a2 2 0 0 1 1 1.747v6.536c0 .246 -.045 .485 -.13 .707m-2.16 1.847l-4.739 3.027a2 2 0 0 1 -1.942 0l-6 -3.833a2 2 0 0 1 -1.029 -1.747v-6.537a2 2 0 0 1 1.029 -1.748l1.154 -.687"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HexagonIcon = {
	  name: 'HexagonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hexagon",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 6.873a2 2 0 0 1 1 1.747v6.536a2 2 0 0 1 -1.029 1.748l-6 3.833a2 2 0 0 1 -1.942 0l-6 -3.833a2 2 0 0 1 -1.029 -1.747v-6.537a2 2 0 0 1 1.029 -1.748l6 -3.572a2.056 2.056 0 0 1 2 0l6 3.573z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HexagonsIcon = {
	  name: 'HexagonsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hexagons",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18v-5l4 -2l4 2v5l-4 2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11v-5l4 -2l4 2v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13l4 -2l4 2v5l-4 2l-4 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Hierarchy2Icon = {
	  name: 'Hierarchy2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hierarchy-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 3h4v4h-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17h4v4h-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17h4v4h-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 17l5 -4l5 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "7",
	      "x2": "12",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HierarchyIcon = {
	  name: 'HierarchyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hierarchy",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 17.5l5.5 -4.5l5.5 4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "7",
	      "x2": "12",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HighlightIcon = {
	  name: 'HighlightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-highlight",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.5 5.5l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.5 13.5l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 15v4h-8l4 -4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HistoryIcon = {
	  name: 'HistoryIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-history",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "12 8 12 12 14 14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.05 11a9 9 0 1 1 .5 4m-.5 5v-5h5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Home2Icon = {
	  name: 'Home2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-home-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "5 12 3 12 12 3 21 12 19 12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "10",
	      "y": "12",
	      "width": "4",
	      "height": "4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HomeIcon = {
	  name: 'HomeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-home",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "5 12 3 12 12 3 21 12 19 12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HotelServiceIcon = {
	  name: 'HotelServiceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hotel-service",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.5 10a1.5 1.5 0 0 1 -1.5 -1.5a5.5 5.5 0 0 1 11 0v10.5a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-2c0 -1.38 .71 -2.444 1.88 -3.175l4.424 -2.765c1.055 -.66 1.696 -1.316 1.696 -2.56a2.5 2.5 0 1 0 -5 0a1.5 1.5 0 0 1 -1.5 1.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HourglassHighIcon = {
	  name: 'HourglassHighIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hourglass-high",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 7h11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 20v-2a6 6 0 1 1 12 0v2a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4v2a6 6 0 1 0 12 0v-2a1 1 0 0 0 -1 -1h-10a1 1 0 0 0 -1 1z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HourglassLowIcon = {
	  name: 'HourglassLowIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hourglass-low",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 17h11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 20v-2a6 6 0 1 1 12 0v2a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4v2a6 6 0 1 0 12 0v-2a1 1 0 0 0 -1 -1h-10a1 1 0 0 0 -1 1z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var HourglassIcon = {
	  name: 'HourglassIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-hourglass",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 7h11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 17h11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 20v-2a6 6 0 1 1 12 0v2a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4v2a6 6 0 1 0 12 0v-2a1 1 0 0 0 -1 -1h-10a1 1 0 0 0 -1 1z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var IceCream2Icon = {
	  name: 'IceCream2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ice-cream-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.657 11.004a6 6 0 1 0 -11.315 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.342 11l5.658 11l5.657 -10.996z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var IceCreamIcon = {
	  name: 'IceCreamIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ice-cream",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21.5v-4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 17h8v-10a4 4 0 1 0 -8 0v10z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10.5l8 -3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 14.5l8 -3.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var IceSkatingIcon = {
	  name: 'IceSkatingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ice-skating",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.905 5h3.418a1 1 0 0 1 .928 .629l1.143 2.856a3 3 0 0 0 2.207 1.83l4.717 .926a2.084 2.084 0 0 1 1.682 2.045v.714a1 1 0 0 1 -1 1h-13.895a1 1 0 0 1 -.995 -1.1l.8 -8a1 1 0 0 1 .995 -.9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19h17a1 1 0 0 0 1 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 15v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var IdBadge2Icon = {
	  name: 'IdBadge2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-id-badge-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12h3v4h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6h-6a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h16a1 1 0 0 0 1 -1v-12a1 1 0 0 0 -1 -1h-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "10",
	      "y": "3",
	      "width": "4",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 16h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 12h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var IdBadgeIcon = {
	  name: 'IdBadgeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-id-badge",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "3",
	      "width": "14",
	      "height": "18",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "13",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var IdIcon = {
	  name: 'IdIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-id",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "4",
	      "width": "18",
	      "height": "16",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "10",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "8",
	      "x2": "17",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "12",
	      "x2": "17",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "16",
	      "x2": "17",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var InboxIcon = {
	  name: 'InboxIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-inbox",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 13h3l3 3h4l3 -3h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var IndentDecreaseIcon = {
	  name: 'IndentDecreaseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-indent-decrease",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "6",
	      "x2": "13",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "11",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "18",
	      "x2": "13",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8l-4 4l4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var IndentIncreaseIcon = {
	  name: 'IndentIncreaseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-indent-increase",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "6",
	      "x2": "9",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "12",
	      "x2": "13",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "18",
	      "x2": "9",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8l4 4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var InfinityIcon = {
	  name: 'InfinityIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-infinity",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.828 9.172a4 4 0 1 0 0 5.656a10 10 0 0 0 2.172 -2.828a10 10 0 0 1 2.172 -2.828a4 4 0 1 1 0 5.656a10 10 0 0 1 -2.172 -2.828a10 10 0 0 0 -2.172 -2.828"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var InfoCircleIcon = {
	  name: 'InfoCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-info-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12.01",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "11 12 12 12 12 16 13 16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var InfoSquareIcon = {
	  name: 'InfoSquareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-info-square",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12.01",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "11 12 12 12 12 16 13 16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ItalicIcon = {
	  name: 'ItalicIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-italic",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "5",
	      "x2": "17",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "19",
	      "x2": "13",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "5",
	      "x2": "10",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var JumpRopeIcon = {
	  name: 'JumpRopeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-jump-rope",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 14v-6a3 3 0 1 1 6 0v8a3 3 0 0 0 6 0v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "16",
	      "y": "3",
	      "width": "4",
	      "height": "7",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "14",
	      "width": "4",
	      "height": "7",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var KarateIcon = {
	  name: 'KarateIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-karate",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "4",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 9l4.5 1l3 2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 21v-8l3 -5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4.5l4 2l4 1l4 3.5l-2 3.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var KeringIcon = {
	  name: 'KeringIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-kering",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 15v-3.5a2.5 2.5 0 1 1 5 0v3.5m0 -2h-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 9l3 6l3 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 20l6 -16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var KeyIcon = {
	  name: 'KeyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-key",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "15",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10.85",
	      "y1": "12.15",
	      "x2": "19",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "5",
	      "x2": "20",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "8",
	      "x2": "17",
	      "y2": "10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var KeyboardHideIcon = {
	  name: 'KeyboardHideIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-keyboard-hide",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "2",
	      "y": "3",
	      "width": "20",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "7",
	      "x2": "6",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "7",
	      "x2": "10",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "7",
	      "x2": "14",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "7",
	      "x2": "18",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "11",
	      "x2": "6",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "11",
	      "x2": "18",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "11",
	      "x2": "14",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 21l2 -2l2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var KeyboardOffIcon = {
	  name: 'KeyboardOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-keyboard-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 18h-14a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h2m4 0h10a2 2 0 0 1 2 2v8c0 .554 -.226 1.056 -.59 1.418"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "10",
	      "x2": "6",
	      "y2": "10.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "10",
	      "x2": "10",
	      "y2": "10.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "10",
	      "x2": "14",
	      "y2": "10.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "10",
	      "x2": "18",
	      "y2": "10.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "14",
	      "x2": "6",
	      "y2": "14.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "14",
	      "x2": "18",
	      "y2": "14.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "14",
	      "x2": "14",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var KeyboardShowIcon = {
	  name: 'KeyboardShowIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-keyboard-show",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "2",
	      "y": "3",
	      "width": "20",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "7",
	      "x2": "6",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "7",
	      "x2": "10",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "7",
	      "x2": "14",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "7",
	      "x2": "18",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "11",
	      "x2": "6",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "11",
	      "x2": "18",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "11",
	      "x2": "14",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 19l2 2l2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var KeyboardIcon = {
	  name: 'KeyboardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-keyboard",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "2",
	      "y": "6",
	      "width": "20",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "10",
	      "x2": "6",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "10",
	      "x2": "10",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "10",
	      "x2": "14",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "10",
	      "x2": "18",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "14",
	      "x2": "6",
	      "y2": "14.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "14",
	      "x2": "18",
	      "y2": "14.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "14",
	      "x2": "14",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LadderIcon = {
	  name: 'LadderIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ladder",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 3v18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 3v18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 14h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 6h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 18h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Lamp2Icon = {
	  name: 'Lamp2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lamp-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 21l-7 -8l8.5 -5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 14c-2.148 -2.148 -2.148 -5.852 0 -8c2.088 -2.088 5.842 -1.972 8 0l-8 8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.742 7.574l-1.156 -1.156a2 2 0 0 1 2.828 -2.829l1.144 1.144"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.5 11.995l.208 .274a2.527 2.527 0 0 0 3.556 0c.939 -.933 .98 -2.42 .122 -3.4l-.366 -.369"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LampIcon = {
	  name: 'LampIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lamp",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 20h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20v-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12h14l-4 -8h-6z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LanguageHiraganaIcon = {
	  name: 'LanguageHiraganaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-language-hiragana",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 5h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 4c0 4.846 0 7 .5 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 8.5c0 2.286 -2 4.5 -3.5 4.5s-2.5 -1.135 -2.5 -2c0 -2 1 -3 3 -3s5 .57 5 2.857c0 1.524 -.667 2.571 -2 3.143"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20l4 -9l4 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.1 18h-6.2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LanguageKatakanaIcon = {
	  name: 'LanguageKatakanaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-language-katakana",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 5h6.586a1 1 0 0 1 .707 1.707l-1.293 1.293"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8c0 1.5 .5 3 -2 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20l4 -9l4 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.1 18h-6.2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LanguageIcon = {
	  name: 'LanguageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-language",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 5h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 3v2c0 4.418 -2.239 8 -5 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 9c-.003 2.144 2.952 3.908 6.7 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20l4 -9l4 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.1 18h-6.2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LassoIcon = {
	  name: 'LassoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lasso",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.028 13.252c-.657 -.972 -1.028 -2.078 -1.028 -3.252c0 -3.866 4.03 -7 9 -7s9 3.134 9 7s-4.03 7 -9 7c-1.913 0 -3.686 -.464 -5.144 -1.255"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "15",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 17c0 1.42 .316 2.805 1 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayersDifferenceIcon = {
	  name: 'LayersDifferenceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layers-difference",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h2v-2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "10 8 8 8 8 10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 14 8 16 10 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "14 8 16 8 16 10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 14 16 16 14 16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayersIntersect2Icon = {
	  name: 'LayersIntersect2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layers-intersect-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "4",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "8",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15l6 -6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayersIntersectIcon = {
	  name: 'LayersIntersectIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layers-intersect",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "4",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "8",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayersLinkedIcon = {
	  name: 'LayersLinkedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layers-linked",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 8.268a2 2 0 0 1 1 1.732v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.003 15.734a2 2 0 0 1 -1.003 -1.734v-8a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayersSubtractIcon = {
	  name: 'LayersSubtractIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layers-subtract",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "4",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayersUnionIcon = {
	  name: 'LayersUnionIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layers-union",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h2v-2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Layout2Icon = {
	  name: 'Layout2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "6",
	      "height": "5",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "13",
	      "width": "6",
	      "height": "7",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "4",
	      "width": "6",
	      "height": "7",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "15",
	      "width": "6",
	      "height": "5",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutAlignBottomIcon = {
	  name: 'LayoutAlignBottomIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-align-bottom",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "4",
	      "width": "6",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutAlignCenterIcon = {
	  name: 'LayoutAlignCenterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-align-center",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "15",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "9",
	      "width": "12",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutAlignLeftIcon = {
	  name: 'LayoutAlignLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-align-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "4",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "9",
	      "width": "12",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutAlignMiddleIcon = {
	  name: 'LayoutAlignMiddleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-align-middle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "9",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "6",
	      "width": "6",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutAlignRightIcon = {
	  name: 'LayoutAlignRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-align-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "9",
	      "width": "12",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutAlignTopIcon = {
	  name: 'LayoutAlignTopIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-align-top",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "8",
	      "width": "6",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutBoardSplitIcon = {
	  name: 'LayoutBoardSplitIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-board-split",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4v16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutBoardIcon = {
	  name: 'LayoutBoardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-board",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 9h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4v16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutBottombarIcon = {
	  name: 'LayoutBottombarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-bottombar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "15",
	      "x2": "20",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutCardsIcon = {
	  name: 'LayoutCardsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-cards",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "6",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "4",
	      "width": "6",
	      "height": "10",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutColumnsIcon = {
	  name: 'LayoutColumnsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-columns",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutDashboardIcon = {
	  name: 'LayoutDashboardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-dashboard",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4h6v8h-6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16h6v4h-6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 12h6v8h-6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 4h6v4h-6z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutDistributeHorizontalIcon = {
	  name: 'LayoutDistributeHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-distribute-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "9",
	      "width": "12",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutDistributeVerticalIcon = {
	  name: 'LayoutDistributeVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-distribute-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "4",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "4",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "6",
	      "width": "6",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutGridAddIcon = {
	  name: 'LayoutGridAddIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-grid-add",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "4",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "14",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 17h6m-3 -3v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutGridIcon = {
	  name: 'LayoutGridIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-grid",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "4",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "14",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "14",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutKanbanIcon = {
	  name: 'LayoutKanbanIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-kanban",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "4",
	      "x2": "10",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "4",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "8",
	      "width": "6",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "8",
	      "width": "6",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutListIcon = {
	  name: 'LayoutListIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-list",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "14",
	      "width": "16",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutNavbarIcon = {
	  name: 'LayoutNavbarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-navbar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "9",
	      "x2": "20",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutRowsIcon = {
	  name: 'LayoutRowsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-rows",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutSidebarLeftCollapseIcon = {
	  name: 'LayoutSidebarLeftCollapseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-sidebar-left-collapse",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 4v16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10l-2 2l2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutSidebarLeftExpandIcon = {
	  name: 'LayoutSidebarLeftExpandIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-sidebar-left-expand",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 4v16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10l2 2l-2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutSidebarRightCollapseIcon = {
	  name: 'LayoutSidebarRightCollapseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-sidebar-right-collapse",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 4v16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 10l2 2l-2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutSidebarRightExpandIcon = {
	  name: 'LayoutSidebarRightExpandIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-sidebar-right-expand",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 4v16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10l-2 2l2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutSidebarRightIcon = {
	  name: 'LayoutSidebarRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-sidebar-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "4",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutSidebarIcon = {
	  name: 'LayoutSidebarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout-sidebar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "4",
	      "x2": "9",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LayoutIcon = {
	  name: 'LayoutIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-layout",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "6",
	      "height": "5",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "13",
	      "width": "6",
	      "height": "7",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "4",
	      "width": "6",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LeafIcon = {
	  name: 'LeafIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-leaf",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21c.5 -4.5 2.5 -8 7 -10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18c6.218 0 10.5 -3.288 11 -12v-2h-4.014c-9 0 -11.986 4 -12 9c0 1 0 3 2 5h3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LegoIcon = {
	  name: 'LegoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lego",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9.5",
	      "y1": "11",
	      "x2": "9.51",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14.5",
	      "y1": "11",
	      "x2": "14.51",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 15a3.5 3.5 0 0 0 5 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 5h1v-2h8v2h1a3 3 0 0 1 3 3v9a3 3 0 0 1 -3 3v1h-10v-1a3 3 0 0 1 -3 -3v-9a3 3 0 0 1 3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Lemon2Icon = {
	  name: 'Lemon2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lemon-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 4a2 2 0 0 1 1.185 3.611c1.55 2.94 .873 6.917 -1.892 9.682c-2.765 2.765 -6.743 3.442 -9.682 1.892a2 2 0 1 1 -2.796 -2.796c-1.55 -2.94 -.873 -6.917 1.892 -9.682c2.765 -2.765 6.743 -3.442 9.682 -1.892a1.999 1.999 0 0 1 1.611 -.815z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LemonIcon = {
	  name: 'LemonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lemon",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.536 3.393c3.905 3.906 3.905 10.237 0 14.143c-3.906 3.905 -10.237 3.905 -14.143 0l14.143 -14.143"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.868 15.06a6.5 6.5 0 0 0 9.193 -9.192"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.464 10.464l4.597 4.597"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.464 10.464v6.364"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.464 10.464h6.364"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterAIcon = {
	  name: 'LetterAIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-a",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 20v-12a4 4 0 0 1 4 -4h2a4 4 0 0 1 4 4v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "13",
	      "x2": "17",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterBIcon = {
	  name: 'LetterBIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-b",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 20v-16h6a4 4 0 0 1 0 8a4 4 0 0 1 0 8h-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "12",
	      "x2": "13",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterCIcon = {
	  name: 'LetterCIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-c",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 9a5 5 0 0 0 -5 -5h-2a5 5 0 0 0 -5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterCaseLowerIcon = {
	  name: 'LetterCaseLowerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-case-lower",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6.5",
	      "cy": "15.5",
	      "r": "3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17.5",
	      "cy": "15.5",
	      "r": "3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12v7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterCaseToggleIcon = {
	  name: 'LetterCaseToggleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-case-toggle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6.5",
	      "cy": "15.5",
	      "r": "3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 19v-10.5a3.5 3.5 0 0 1 7 0v10.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 13h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12v7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterCaseUpperIcon = {
	  name: 'LetterCaseUpperIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-case-upper",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19v-10.5a3.5 3.5 0 0 1 7 0v10.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 13h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 19v-10.5a3.5 3.5 0 0 1 7 0v10.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 13h7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterCaseIcon = {
	  name: 'LetterCaseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-case",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17.5",
	      "cy": "15.5",
	      "r": "3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19v-10.5a3.5 3.5 0 0 1 7 0v10.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 13h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12v7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterDIcon = {
	  name: 'LetterDIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-d",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 4h6a5 5 0 0 1 5 5v6a5 5 0 0 1 -5 5h-6v-16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterEIcon = {
	  name: 'LetterEIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-e",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4h-10v16h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterFIcon = {
	  name: 'LetterFIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-f",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4h-10v16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterGIcon = {
	  name: 'LetterGIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-g",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 9a5 5 0 0 0 -5 -5h-2a5 5 0 0 0 -5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5 -5v-2h-4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterHIcon = {
	  name: 'LetterHIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-h",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "4",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "12",
	      "x2": "17",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "4",
	      "x2": "7",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterIIcon = {
	  name: 'LetterIIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-i",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterJIcon = {
	  name: 'LetterJIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-j",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4v12a4 4 0 0 1 -4 4h-2a4 4 0 0 1 -4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterKIcon = {
	  name: 'LetterKIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-k",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "4",
	      "x2": "7",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12h2l8 -8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterLIcon = {
	  name: 'LetterLIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-l",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 4v16h10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterMIcon = {
	  name: 'LetterMIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-m",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 20v-16l6 14l6 -14v16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterNIcon = {
	  name: 'LetterNIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-n",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 20v-16l10 16v-16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterOIcon = {
	  name: 'LetterOIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-o",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 9a5 5 0 0 0 -5 -5h-2a5 5 0 0 0 -5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5 -5v-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterPIcon = {
	  name: 'LetterPIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-p",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 20v-16h5.5a4 4 0 0 1 0 9h-5.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterQIcon = {
	  name: 'LetterQIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-q",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 9a5 5 0 0 0 -5 -5h-2a5 5 0 0 0 -5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5 -5v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "15",
	      "x2": "18",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterRIcon = {
	  name: 'LetterRIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-r",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 20v-16h5.5a4 4 0 0 1 0 9h-5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "13",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterSIcon = {
	  name: 'LetterSIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-s",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 8a4 4 0 0 0 -4 -4h-2a4 4 0 0 0 0 8h2a4 4 0 0 1 0 8h-2a4 4 0 0 1 -4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterSpacingIcon = {
	  name: 'LetterSpacingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-spacing",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12v-5.5a2.5 2.5 0 0 1 5 0v5.5m0 -4h-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 4l3 8l3 -8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 18h14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 20l2 -2l-2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 16l-2 2l2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterTIcon = {
	  name: 'LetterTIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-t",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "4",
	      "x2": "18",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterUIcon = {
	  name: 'LetterUIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-u",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4v11a5 5 0 0 0 5 5h2a5 5 0 0 0 5 -5v-11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterVIcon = {
	  name: 'LetterVIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-v",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4l6 16l6 -16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterWIcon = {
	  name: 'LetterWIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-w",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4l4 16l4 -14l4 14l4 -16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterXIcon = {
	  name: 'LetterXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "4",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "4",
	      "x2": "7",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterYIcon = {
	  name: 'LetterYIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-y",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 4l5 9l5 -9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "13",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LetterZIcon = {
	  name: 'LetterZIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-letter-z",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 4h10l-10 16h10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LicenseIcon = {
	  name: 'LicenseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-license",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 21h-9a3 3 0 0 1 -3 -3v-1h10v2a2 2 0 0 0 4 0v-14a2 2 0 1 1 2 2h-2m2 -4h-11a3 3 0 0 0 -3 3v11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "7",
	      "x2": "13",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "11",
	      "x2": "13",
	      "y2": "11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LifebuoyIcon = {
	  name: 'LifebuoyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lifebuoy",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "15",
	      "x2": "18.35",
	      "y2": "18.35"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "15",
	      "x2": "5.65",
	      "y2": "18.35"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5.65",
	      "y1": "5.65",
	      "x2": "9",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18.35",
	      "y1": "5.65",
	      "x2": "15",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LineDashedIcon = {
	  name: 'LineDashedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-line-dashed",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 12h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LineDottedIcon = {
	  name: 'LineDottedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-line-dotted",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 12v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LineHeightIcon = {
	  name: 'LineHeightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-line-height",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "3 8 6 5 9 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "3 16 6 19 9 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "5",
	      "x2": "6",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "18",
	      "x2": "20",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LineIcon = {
	  name: 'LineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-line",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7.5",
	      "y1": "16.5",
	      "x2": "16.5",
	      "y2": "7.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LinkIcon = {
	  name: 'LinkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-link",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ListCheckIcon = {
	  name: 'ListCheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-list-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.5 5.5l1.5 1.5l2.5 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.5 11.5l1.5 1.5l2.5 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.5 17.5l1.5 1.5l2.5 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "18",
	      "x2": "20",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ListDetailsIcon = {
	  name: 'ListDetailsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-list-details",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 5h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 9h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 15h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 19h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "4",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "14",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ListNumbersIcon = {
	  name: 'ListNumbersIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-list-numbers",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 6h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 12h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16a2 2 0 1 1 4 0c0 .591 -.5 1 -1 1.5l-3 2.5h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10v-6l-2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ListSearchIcon = {
	  name: 'ListSearchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-list-search",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "15",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.5 18.5l2.5 2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ListIcon = {
	  name: 'ListIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-list",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "18",
	      "x2": "20",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "6",
	      "x2": "5",
	      "y2": "6.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "5",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "18",
	      "x2": "5",
	      "y2": "18.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LivePhotoIcon = {
	  name: 'LivePhotoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-live-photo",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15.9",
	      "y1": "20.11",
	      "x2": "15.9",
	      "y2": "20.12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19.04",
	      "y1": "17.61",
	      "x2": "19.04",
	      "y2": "17.62"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20.77",
	      "y1": "14",
	      "x2": "20.77",
	      "y2": "14.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20.77",
	      "y1": "10",
	      "x2": "20.77",
	      "y2": "10.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19.04",
	      "y1": "6.39",
	      "x2": "19.04",
	      "y2": "6.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15.9",
	      "y1": "3.89",
	      "x2": "15.9",
	      "y2": "3.9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "3.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8.1",
	      "y1": "3.89",
	      "x2": "8.1",
	      "y2": "3.9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4.96",
	      "y1": "6.39",
	      "x2": "4.96",
	      "y2": "6.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3.23",
	      "y1": "10",
	      "x2": "3.23",
	      "y2": "10.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3.23",
	      "y1": "14",
	      "x2": "3.23",
	      "y2": "14.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4.96",
	      "y1": "17.61",
	      "x2": "4.96",
	      "y2": "17.62"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8.1",
	      "y1": "20.11",
	      "x2": "8.1",
	      "y2": "20.12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "21",
	      "x2": "12",
	      "y2": "21.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LiveViewIcon = {
	  name: 'LiveViewIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-live-view",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v-2a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v2a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "11",
	      "x2": "12",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18l-3.5 -5a4 4 0 1 1 7 0l-3.5 5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LoaderQuarterIcon = {
	  name: 'LoaderQuarterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-loader-quarter",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "6",
	      "x2": "12",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "12",
	      "x2": "3",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7.75",
	      "y1": "7.75",
	      "x2": "5.6",
	      "y2": "5.6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LoaderIcon = {
	  name: 'LoaderIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-loader",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "6",
	      "x2": "12",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16.25",
	      "y1": "7.75",
	      "x2": "18.4",
	      "y2": "5.6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16.25",
	      "y1": "16.25",
	      "x2": "18.4",
	      "y2": "18.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7.75",
	      "y1": "16.25",
	      "x2": "5.6",
	      "y2": "18.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "12",
	      "x2": "3",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7.75",
	      "y1": "7.75",
	      "x2": "5.6",
	      "y2": "5.6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LocationIcon = {
	  name: 'LocationIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-location",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 3l-6.5 18a0.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a0.55 .55 0 0 1 0 -1l18 -6.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LockAccessIcon = {
	  name: 'LockAccessIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lock-access",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v-2a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v2a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "11",
	      "width": "8",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 11v-2a2 2 0 1 1 4 0v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LockOffIcon = {
	  name: 'LockOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lock-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 19a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h4m4 0h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "16",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11v-3m.712 -3.278a4 4 0 0 1 7.288 2.278v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LockOpenIcon = {
	  name: 'LockOpenIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lock-open",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "11",
	      "width": "14",
	      "height": "10",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "16",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11v-5a4 4 0 0 1 8 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LockSquareIcon = {
	  name: 'LockSquareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lock-square",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "11",
	      "width": "8",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 11v-2a2 2 0 1 1 4 0v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LockIcon = {
	  name: 'LockIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lock",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "11",
	      "width": "14",
	      "height": "10",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "16",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11v-4a4 4 0 0 1 8 0v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LoginIcon = {
	  name: 'LoginIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-login",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12h-13l3 -3m0 6l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LogoutIcon = {
	  name: 'LogoutIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-logout",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12h14l-3 -3m0 6l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LollipopIcon = {
	  name: 'LollipopIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lollipop",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "10",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 10a3.5 3.5 0 0 0 -7 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10a3.5 3.5 0 0 1 -7 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 17a3.5 3.5 0 0 0 0 -7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3a3.5 3.5 0 0 0 0 7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21l6 -6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LuggageIcon = {
	  name: 'LuggageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-luggage",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "6",
	      "width": "12",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 6v-1a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10h12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 16h12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 20v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 20v1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var LungsIcon = {
	  name: 'LungsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-lungs",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.081 20c1.612 0 2.919 -1.335 2.919 -2.98v-9.763c0 -.694 -.552 -1.257 -1.232 -1.257c-.205 0 -.405 .052 -.584 .15l-.13 .083c-1.46 1.059 -2.432 2.647 -3.404 5.824c-.42 1.37 -.636 2.962 -.648 4.775c-.012 1.675 1.261 3.054 2.877 3.161l.203 .007z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.92 20c-1.613 0 -2.92 -1.335 -2.92 -2.98v-9.763c0 -.694 .552 -1.257 1.233 -1.257c.204 0 .405 .052 .584 .15l.13 .083c1.46 1.059 2.432 2.647 3.405 5.824c.42 1.37 .636 2.962 .648 4.775c.012 1.675 -1.261 3.054 -2.878 3.161l-.202 .007z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12a3 3 0 0 0 3 -3a3 3 0 0 0 3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4v5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MacroIcon = {
	  name: 'MacroIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-macro",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15a6 6 0 1 0 12 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15a6 6 0 0 0 -6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21a6 6 0 0 0 -6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11a5 5 0 0 1 -5 -5v-3l3 2l2 -2l2 2l3 -2v3a5 5 0 0 1 -5 5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MagnetIcon = {
	  name: 'MagnetIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-magnet",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 13v-8a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v8a2 2 0 0 0 6 0v-8a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v8a8 8 0 0 1 -16 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "9",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "8",
	      "x2": "19",
	      "y2": "8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MailFastIcon = {
	  name: 'MailFastIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mail-fast",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 11h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.02 8.801l-.6 6a2 2 0 0 0 1.99 2.199h7.98a2 2 0 0 0 1.99 -1.801l.6 -6a2 2 0 0 0 -1.99 -2.199h-7.98a2 2 0 0 0 -1.99 1.801z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.8 7.5l2.982 3.28a3 3 0 0 0 4.238 .202l3.28 -2.982"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MailForwardIcon = {
	  name: 'MailForwardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mail-forward",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6l9 6l9 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 18h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MailOpenedIcon = {
	  name: 'MailOpenedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mail-opened",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "3 9 12 15 21 9 12 3 3 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 9v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "19",
	      "x2": "9",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "13",
	      "x2": "21",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MailIcon = {
	  name: 'MailIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mail",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "3 7 12 13 21 7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MailboxIcon = {
	  name: 'MailboxIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mailbox",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 21v-6.5a3.5 3.5 0 0 0 -7 0v6.5h18v-6a4 4 0 0 0 -4 -4h-10.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11v-8h4l2 2l-2 2h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15h1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ManIcon = {
	  name: 'ManIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-man",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 22v-5l-1 -1v-4a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4l-1 1v5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ManualGearboxIcon = {
	  name: 'ManualGearboxIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-manual-gearbox",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "6",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "8",
	      "x2": "5",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 8v2a2 2 0 0 1 -2 2h-12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Map2Icon = {
	  name: 'Map2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-map-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "6",
	      "x2": "18",
	      "y2": "6.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 13l-3.5 -5a4 4 0 1 1 7 0l-3.5 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "10.5 4.75 9 4 3 7 3 20 9 17 15 20 21 17 21 15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "4",
	      "x2": "9",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "15",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MapPinOffIcon = {
	  name: 'MapPinOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-map-pin-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.44 9.435a3 3 0 0 0 4.126 4.124m1.434 -2.559a3 3 0 0 0 -3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.048 4.042a8 8 0 0 1 10.912 10.908m-1.8 2.206l-3.745 3.744a2 2 0 0 1 -2.827 0l-4.244 -4.243a8 8 0 0 1 -.48 -10.79"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MapPinIcon = {
	  name: 'MapPinIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-map-pin",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "11",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.657 16.657l-4.243 4.243a2 2 0 0 1 -2.827 0l-4.244 -4.243a8 8 0 1 1 11.314 0z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MapPinsIcon = {
	  name: 'MapPinsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-map-pins",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.828 9.828a4 4 0 1 0 -5.656 0l2.828 2.829l2.828 -2.829z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "7",
	      "x2": "8",
	      "y2": "7.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.828 17.828a4 4 0 1 0 -5.656 0l2.828 2.829l2.828 -2.829z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "15",
	      "x2": "16",
	      "y2": "15.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MapSearchIcon = {
	  name: 'MapSearchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-map-search",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 18l-2 -1l-6 3v-13l6 -3l6 3l6 -3v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 4v13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 7v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16.5",
	      "cy": "17.5",
	      "r": "2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.5 19.5l2.5 2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MapIcon = {
	  name: 'MapIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-map",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "3 7 9 4 15 7 21 4 21 17 15 20 9 17 3 20 3 7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "4",
	      "x2": "9",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "7",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MarkdownIcon = {
	  name: 'MarkdownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-markdown",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 15v-6l2 2l2 -2v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 13l2 2l2 -2m-2 2v-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Marquee2Icon = {
	  name: 'Marquee2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-marquee-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v-1a1 1 0 0 1 1 -1h1m5 0h2m5 0h1a1 1 0 0 1 1 1v1m0 5v2m0 5v1a1 1 0 0 1 -1 1h-1m-5 0h-2m-5 0h-1a1 1 0 0 1 -1 -1v-1m0 -5v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MarqueeIcon = {
	  name: 'MarqueeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-marquee",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6a2 2 0 0 1 2 -2m3 0h1.5m3 0h1.5m3 0a2 2 0 0 1 2 2m0 3v1.5m0 3v1.5m0 3a2 2 0 0 1 -2 2m-3 0h-1.5m-3 0h-1.5m-3 0a2 2 0 0 1 -2 -2m0 -3v-1.5m0 -3v-1.5m0 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MarsIcon = {
	  name: 'MarsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mars",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "14",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "5",
	      "x2": "13.6",
	      "y2": "10.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "5",
	      "x2": "14",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "5",
	      "x2": "19",
	      "y2": "10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MaskOffIcon = {
	  name: 'MaskOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mask-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.42 19.41a2 2 0 0 1 -1.42 .59h-12a2 2 0 0 1 -2 -2v-12c0 -.554 .225 -1.055 .588 -1.417m3.412 -.583h10a2 2 0 0 1 2 2v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.885 9.872a3 3 0 1 0 4.245 4.24m.582 -3.396a3.012 3.012 0 0 0 -1.438 -1.433"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MaskIcon = {
	  name: 'MaskIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mask",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MassageIcon = {
	  name: 'MassageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-massage",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "4",
	      "cy": "17",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 22l4 -2v-3h12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 20h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 14l3 -2l1 -4c3 1 3 4 3 6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MathAvgIcon = {
	  name: 'MathAvgIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-math-avg",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21l18 -18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MathFunctionIcon = {
	  name: 'MathFunctionIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-math-function",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10h1c1 0 1 1 2.016 3.527c.984 2.473 .984 3.473 1.984 3.473h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 17c1.5 0 3 -2 4 -3.5s2.5 -3.5 4 -3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19c0 1.5 .5 2 2 2s2 -4 3 -9s1.5 -9 3 -9s2 .5 2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "11",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MathMaxIcon = {
	  name: 'MathMaxIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-math-max",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 20c0 -8.75 4 -14 7 -14.5m4 0c3 .5 7 5.75 7 14.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MathMinIcon = {
	  name: 'MathMinIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-math-min",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "matrix(1 0 0 -1 0 38)",
	      "cx": "12",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 4c0 8.75 4 14 7 14.5m4 0c3 -.5 7 -5.75 7 -14.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MathSymbolsIcon = {
	  name: 'MathSymbolsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-math-symbols",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16.5",
	      "y1": "4.5",
	      "x2": "19.5",
	      "y2": "7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19.5",
	      "y1": "4.5",
	      "x2": "16.5",
	      "y2": "7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "4",
	      "x2": "6",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "8",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "16",
	      "x2": "18.01",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "20",
	      "x2": "18.01",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "18",
	      "x2": "8",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MathIcon = {
	  name: 'MathIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-math",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 13l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 5h-7l-4 14l-3 -6h-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MaximizeIcon = {
	  name: 'MaximizeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-maximize",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8v-2a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v2a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MeatIcon = {
	  name: 'MeatIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-meat",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.62 8.382l1.966 -1.967a2 2 0 1 1 3.414 -1.415a2 2 0 1 1 -1.413 3.414l-1.82 1.821"
	    }, null), vue.createTextVNode("     "), vue.createVNode("ellipse", {
	      "transform": "rotate(45 8.025 16.475)",
	      "cx": "8.025",
	      "cy": "16.475",
	      "rx": "7",
	      "ry": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 16l1 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.975 21.425c3.905 -3.906 4.855 -9.288 2.121 -12.021c-2.733 -2.734 -8.115 -1.784 -12.02 2.121"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Medal2Icon = {
	  name: 'Medal2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-medal-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 3h6l3 7l-6 2l-6 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-3 -9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 11l-3 -8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19.5l-3 1.5l.5 -3.5l-2 -2l3 -.5l1.5 -3l1.5 3l3 .5l-2 2l.5 3.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MedalIcon = {
	  name: 'MedalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-medal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4v3m-4 -3v6m8 -6v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18.5l-3 1.5l.5 -3.5l-2 -2l3 -.5l1.5 -3l1.5 3l3 .5l-2 2l.5 3.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MedicalCrossIcon = {
	  name: 'MedicalCrossIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-medical-cross",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 3a1 1 0 0 1 1 1v4.535l3.928 -2.267a1 1 0 0 1 1.366 .366l1 1.732a1 1 0 0 1 -.366 1.366l-3.927 2.268l3.927 2.269a1 1 0 0 1 .366 1.366l-1 1.732a1 1 0 0 1 -1.366 .366l-3.928 -2.269v4.536a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-4.536l-3.928 2.268a1 1 0 0 1 -1.366 -.366l-1 -1.732a1 1 0 0 1 .366 -1.366l3.927 -2.268l-3.927 -2.268a1 1 0 0 1 -.366 -1.366l1 -1.732a1 1 0 0 1 1.366 -.366l3.928 2.267v-4.535a1 1 0 0 1 1 -1h2z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MedicineSyrupIcon = {
	  name: 'MedicineSyrupIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-medicine-syrup",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 21h8a1 1 0 0 0 1 -1v-10a3 3 0 0 0 -3 -3h-4a3 3 0 0 0 -3 3v10a1 1 0 0 0 1 1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 7v-3a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Menu2Icon = {
	  name: 'Menu2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-menu-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "18",
	      "x2": "20",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MenuIcon = {
	  name: 'MenuIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-menu",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Message2CodeIcon = {
	  name: 'Message2CodeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-2-code",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20l-3 -3h-2a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-2l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 9l-2 2l2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 9l2 2l-2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Message2ShareIcon = {
	  name: 'Message2ShareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-2-share",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4h4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 11v3a3 3 0 0 1 -3 3h-2l-3 3l-3 -3h-2a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 9l5 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Message2Icon = {
	  name: 'Message2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20l-3 -3h-2a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-2l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "9",
	      "x2": "16",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "13",
	      "x2": "14",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessageCircle2Icon = {
	  name: 'MessageCircle2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-circle-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 20l1.3 -3.9a9 8 0 1 1 3.4 2.9l-4.7 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "8",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessageCircleOffIcon = {
	  name: 'MessageCircleOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-circle-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.585 4.581c3.225 -1.181 7.032 -.616 9.66 1.626c2.983 2.543 3.602 6.525 1.634 9.662m-1.908 2.108c-2.786 2.19 -6.89 2.665 -10.271 1.023l-4.7 1l1.3 -3.9c-2.237 -3.308 -1.489 -7.54 1.714 -10.084"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessageCircleIcon = {
	  name: 'MessageCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 20l1.3 -3.9a9 8 0 1 1 3.4 2.9l-4.7 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "8",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessageCodeIcon = {
	  name: 'MessageCodeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-code",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21v-13a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-9l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 9l-2 2l2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 9l2 2l-2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessageDotsIcon = {
	  name: 'MessageDotsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-dots",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21v-13a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-9l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "11",
	      "x2": "12",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "11",
	      "x2": "8",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "11",
	      "x2": "16",
	      "y2": "11.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessageLanguageIcon = {
	  name: 'MessageLanguageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-language",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21v-13a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-9l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14v-4a2 2 0 1 1 4 0v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 12h-4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessageOffIcon = {
	  name: 'MessageOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17h-9l-4 4v-13c0 -1.086 .577 -2.036 1.44 -2.563m3.561 -.437h8a3 3 0 0 1 3 3v6c0 .575 -.162 1.112 -.442 1.568"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessagePlusIcon = {
	  name: 'MessagePlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21v-13a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-9l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "11",
	      "x2": "14",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "12",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessageReportIcon = {
	  name: 'MessageReportIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-report",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21v-13a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-9l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "12",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14",
	      "x2": "12",
	      "y2": "14.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessageShareIcon = {
	  name: 'MessageShareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message-share",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 11v3a3 3 0 0 1 -3 3h-9l-4 4v-13a3 3 0 0 1 3 -3h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4h4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 9l5 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessageIcon = {
	  name: 'MessageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-message",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21v-13a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-9l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "9",
	      "x2": "16",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "13",
	      "x2": "14",
	      "y2": "13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessagesOffIcon = {
	  name: 'MessagesOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-messages-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 11a1 1 0 0 1 -1 -1m0 -3.968v-2.032a1 1 0 0 1 1 -1h9a1 1 0 0 1 1 1v10l-3 -3h-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 15v2a1 1 0 0 1 -1 1h-7l-3 3v-10a1 1 0 0 1 1 -1h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MessagesIcon = {
	  name: 'MessagesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-messages",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 14l-3 -3h-7a1 1 0 0 1 -1 -1v-6a1 1 0 0 1 1 -1h9a1 1 0 0 1 1 1v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 15v2a1 1 0 0 1 -1 1h-7l-3 3v-10a1 1 0 0 1 1 -1h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Microphone2Icon = {
	  name: 'Microphone2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-microphone-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.002 12.9a5 5 0 1 0 -3.902 -3.9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.002 12.9l-3.902 -3.899l-7.513 8.584a2 2 0 1 0 2.827 2.83l8.588 -7.515z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MicrophoneOffIcon = {
	  name: 'MicrophoneOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-microphone-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5a3 3 0 0 1 6 0v5a3 3 0 0 1 -.13 .874m-2 2a3 3 0 0 1 -3.87 -2.872v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 10a7 7 0 0 0 10.846 5.85m2.002 -2a6.967 6.967 0 0 0 1.152 -3.85"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "21",
	      "x2": "16",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "17",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MicrophoneIcon = {
	  name: 'MicrophoneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-microphone",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "2",
	      "width": "6",
	      "height": "11",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 10a7 7 0 0 0 14 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "21",
	      "x2": "16",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "17",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MicroscopeIcon = {
	  name: 'MicroscopeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-microscope",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21h14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 18h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 11l3 3l6 -6l-3 -3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 12.5l-1.5 1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21a6 6 0 0 0 3.715 -10.712"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MilitaryAwardIcon = {
	  name: 'MilitaryAwardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-military-award",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "13",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 10l-1 -2h-5l2.48 5.788a2 2 0 0 0 1.84 1.212h1.18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10l1 -2h5l-2.48 5.788a2 2 0 0 1 -1.84 1.212h-1.18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MilitaryRankIcon = {
	  name: 'MilitaryRankIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-military-rank",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 7v13h-10v-13l5 -3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13l2 -1l2 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 17l2 -1l2 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 9l2 -1l2 1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MilkIcon = {
	  name: 'MilkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-milk",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 6h8v-2a1 1 0 0 0 -1 -1h-6a1 1 0 0 0 -1 1v2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 6l1.094 1.759a6 6 0 0 1 .906 3.17v8.071a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8.071a6 6 0 0 1 .906 -3.17l1.094 -1.759"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "16",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MinimizeIcon = {
	  name: 'MinimizeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-minimize",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 19v-2a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 5v2a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 15h2a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 9h2a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MinusVerticalIcon = {
	  name: 'MinusVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-minus-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5v14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MinusIcon = {
	  name: 'MinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MistIcon = {
	  name: 'MistIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mist",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 5h3m4 0h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10h11m4 0h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 15h5m4 0h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 20h9m4 0h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodBoyIcon = {
	  name: 'MoodBoyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-boy",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4.5a9 9 0 0 1 3.864 5.89a2.5 2.5 0 0 1 -.29 4.36a9 9 0 0 1 -17.137 0a2.5 2.5 0 0 1 -.29 -4.36a9 9 0 0 1 3.746 -5.81"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 16a3.5 3.5 0 0 0 5 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.5 2c1.5 1 2.5 3.5 2.5 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.5 2c1.5 2 2 3.5 2 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "9.01",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "12",
	      "x2": "15.01",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodConfuzedIcon = {
	  name: 'MoodConfuzedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-confuzed",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "10",
	      "x2": "9.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "10",
	      "x2": "15.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 16a10 10 0 0 1 6 -1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodCrazyHappyIcon = {
	  name: 'MoodCrazyHappyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-crazy-happy",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "8.5",
	      "x2": "10",
	      "y2": "11.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 11.5l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "8.5",
	      "x2": "17",
	      "y2": "11.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 11.5l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 15a3.5 3.5 0 0 0 5 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodCryIcon = {
	  name: 'MoodCryIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-cry",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "10",
	      "x2": "9.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "10",
	      "x2": "15.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 15.25a3.5 3.5 0 0 1 5 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.566 17.606a2 2 0 1 0 2.897 .03l-1.463 -1.636l-1.434 1.606z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.865 13.517a8.937 8.937 0 0 0 .135 -1.517a9 9 0 1 0 -9 9c.69 0 1.36 -.076 2 -.222"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodEmptyIcon = {
	  name: 'MoodEmptyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-empty",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "10",
	      "x2": "9.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "10",
	      "x2": "15.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "15",
	      "x2": "15",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodHappyIcon = {
	  name: 'MoodHappyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-happy",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "9",
	      "x2": "9.01",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "9",
	      "x2": "15.01",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13a4 4 0 1 0 8 0m0 0h-8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodKidIcon = {
	  name: 'MoodKidIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-kid",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "10",
	      "x2": "9.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "10",
	      "x2": "15.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 15a3.5 3.5 0 0 0 5 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a2 2 0 0 0 0 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodNervousIcon = {
	  name: 'MoodNervousIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-nervous",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 10h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16l2 -2l2 2l2 -2l2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodNeutralIcon = {
	  name: 'MoodNeutralIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-neutral",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "10",
	      "x2": "9.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "10",
	      "x2": "15.01",
	      "y2": "10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodSadIcon = {
	  name: 'MoodSadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-sad",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "10",
	      "x2": "9.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "10",
	      "x2": "15.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 15.25a3.5 3.5 0 0 1 5 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodSmileIcon = {
	  name: 'MoodSmileIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-smile",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "10",
	      "x2": "9.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "10",
	      "x2": "15.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 15a3.5 3.5 0 0 0 5 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodSuprisedIcon = {
	  name: 'MoodSuprisedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-suprised",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "9",
	      "x2": "9.01",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "9",
	      "x2": "15.01",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "15",
	      "r": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoodTongueIcon = {
	  name: 'MoodTongueIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mood-tongue",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "10",
	      "x2": "9.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "10",
	      "x2": "15.01",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14v2a2 2 0 0 0 4 0v-2m1.5 0h-7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Moon2Icon = {
	  name: 'Moon2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-moon-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.418 4.157a8 8 0 0 0 0 15.686"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoonStarsIcon = {
	  name: 'MoonStarsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-moon-stars",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 11h2m-1 -1v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MoonIcon = {
	  name: 'MoonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-moon",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MopedIcon = {
	  name: 'MopedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-moped",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 16v1a2 2 0 0 0 4 0v-5h-3a3 3 0 0 0 -3 3v1h10a6 6 0 0 1 5 -4v-5a2 2 0 0 0 -2 -2h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "9",
	      "x2": "9",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MotorbikeIcon = {
	  name: 'MotorbikeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-motorbike",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "16",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "16",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 14h5l4 -4h-10.5m1.5 4l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 6h2l1.5 3l2 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MountainIcon = {
	  name: 'MountainIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mountain",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 20h18l-6.921 -14.612a2.3 2.3 0 0 0 -4.158 0l-6.921 14.612z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 11l2 2.5l2.5 -2.5l2 3l2.5 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MouseIcon = {
	  name: 'MouseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mouse",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "3",
	      "width": "12",
	      "height": "18",
	      "rx": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "7",
	      "x2": "12",
	      "y2": "11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MovieIcon = {
	  name: 'MovieIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-movie",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "8",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "4",
	      "x2": "16",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "8",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "8",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MugIcon = {
	  name: 'MugIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mug",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.083 5h10.834a1.08 1.08 0 0 1 1.083 1.077v8.615c0 2.38 -1.94 4.308 -4.333 4.308h-4.334c-2.393 0 -4.333 -1.929 -4.333 -4.308v-8.615a1.08 1.08 0 0 1 1.083 -1.077"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8h2.5c1.38 0 2.5 1.045 2.5 2.333v2.334c0 1.288 -1.12 2.333 -2.5 2.333h-2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Multiplier05xIcon = {
	  name: 'Multiplier05xIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-multiplier-0-5x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16h2a2 2 0 1 0 0 -4h-2v-4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 16l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 16l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Multiplier15xIcon = {
	  name: 'Multiplier15xIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-multiplier-1-5x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16v-8l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16h2a2 2 0 1 0 0 -4h-2v-4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 16l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 16l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Multiplier1xIcon = {
	  name: 'Multiplier1xIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-multiplier-1x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 16v-8l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 16l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 16l-4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Multiplier2xIcon = {
	  name: 'Multiplier2xIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-multiplier-2x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 16l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 16l-4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10a2 2 0 1 1 4 0c0 .591 -.417 1.318 -.816 1.858l-3.184 4.143l4 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MushroomIcon = {
	  name: 'MushroomIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-mushroom",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 11.1c0 -4.474 -3.582 -8.1 -8 -8.1s-8 3.626 -8 8.1a0.9 .9 0 0 0 .9 .9h14.2a0.9 .9 0 0 0 .9 -.9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12v7a2 2 0 1 0 4 0v-7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var MusicIcon = {
	  name: 'MusicIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-music",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "17",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16",
	      "cy": "17",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "9 17 9 4 19 4 19 17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "8",
	      "x2": "19",
	      "y2": "8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NetworkIcon = {
	  name: 'NetworkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-network",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "9",
	      "r": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3c1.333 .333 2 2.333 2 6s-.667 5.667 -2 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3c-1.333 .333 -2 2.333 -2 6s.667 5.667 2 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 9h12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 19h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NewSectionIcon = {
	  name: 'NewSectionIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-new-section",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6v-1a1 1 0 0 1 1 -1h1m5 0h2m5 0h1a1 1 0 0 1 1 1v1m0 5v2m0 5v1a1 1 0 0 1 -1 1h-1m-5 0h-2m-5 0h-1a1 1 0 0 1 -1 -1v-1m0 -5v-2m0 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NewsIcon = {
	  name: 'NewsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-news",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 6h3a1 1 0 0 1 1 1v11a2 2 0 0 1 -4 0v-13a1 1 0 0 0 -1 -1h-10a1 1 0 0 0 -1 1v12a3 3 0 0 0 3 3h11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "8",
	      "x2": "12",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "16",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NfcIcon = {
	  name: 'NfcIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-nfc",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 20a3 3 0 0 1 -3 -3v-11l5 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 4a3 3 0 0 1 3 3v11l-5 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NoCopyrightIcon = {
	  name: 'NoCopyrightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-no-copyright",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 9.75a3.016 3.016 0 0 0 -4.163 .173a2.993 2.993 0 0 0 0 4.154a3.016 3.016 0 0 0 4.163 .173"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6l1.5 1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.5 16.5l1.5 1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NoCreativeCommonsIcon = {
	  name: 'NoCreativeCommonsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-no-creative-commons",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 10.5c-.847 -.71 -2.132 -.658 -2.914 .116a1.928 1.928 0 0 0 0 2.768c.782 .774 2.067 .825 2.914 .116"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.5 10.5c-.847 -.71 -2.132 -.658 -2.914 .116a1.928 1.928 0 0 0 0 2.768c.782 .774 2.067 .825 2.914 .116"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6l1.5 1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.5 16.5l1.5 1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NoDerivativesIcon = {
	  name: 'NoDerivativesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-no-derivatives",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 10h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 14h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NorthStarIcon = {
	  name: 'NorthStarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-north-star",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 7.5l9 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 16.5l9 -9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NoteIcon = {
	  name: 'NoteIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-note",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "20",
	      "x2": "20",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 20v-6a1 1 0 0 1 1 -1h6v-7a2 2 0 0 0 -2 -2h-12a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NotebookIcon = {
	  name: 'NotebookIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-notebook",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4h11a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-11a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1m3 0v18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "8",
	      "x2": "15",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NotesIcon = {
	  name: 'NotesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-notes",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "3",
	      "width": "14",
	      "height": "18",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "7",
	      "x2": "15",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "11",
	      "x2": "15",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "15",
	      "x2": "13",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NotificationIcon = {
	  name: 'NotificationIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-notification",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6h-3a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "7",
	      "r": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Number0Icon = {
	  name: 'Number0Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-number-0",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16v-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20a4 4 0 0 0 4 -4v-8a4 4 0 1 0 -8 0v8a4 4 0 0 0 4 4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Number1Icon = {
	  name: 'Number1Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-number-1",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 20v-16l-5 5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Number2Icon = {
	  name: 'Number2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-number-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8a4 4 0 1 1 8 0c0 1.098 -.564 2.025 -1.159 2.815l-6.841 9.185h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Number3Icon = {
	  name: 'Number3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-number-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12a4 4 0 1 0 -4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16a4 4 0 1 0 4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Number4Icon = {
	  name: 'Number4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-number-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 20v-15l-8 11h10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Number5Icon = {
	  name: 'Number5Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-number-5",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 20h4a4 4 0 1 0 0 -8h-4v-8h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Number6Icon = {
	  name: 'Number6Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-number-6",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16a4 4 0 1 0 8 0v-1a4 4 0 1 0 -8 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8a4 4 0 1 0 -8 0v8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Number7Icon = {
	  name: 'Number7Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-number-7",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4h8l-4 16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Number8Icon = {
	  name: 'Number8Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-number-8",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "8",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "16",
	      "r": "4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Number9Icon = {
	  name: 'Number9Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-number-9",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8a4 4 0 1 0 -8 0v1a4 4 0 1 0 8 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16a4 4 0 1 0 8 0v-8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NumbersIcon = {
	  name: 'NumbersIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-numbers",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10v-7l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 16a2 2 0 1 1 4 0c0 .591 -.601 1.46 -1 2l-3 3.001h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 14a2 2 0 1 0 2 -2a2 2 0 1 0 -2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 10h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var NurseIcon = {
	  name: 'NurseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-nurse",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6c2.941 0 5.685 .847 8 2.31l-2 9.69h-12l-2 -9.691a14.93 14.93 0 0 1 8 -2.309z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var OctagonOffIcon = {
	  name: 'OctagonOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-octagon-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.647 3.653l.353 -.353c.2 -.2 .4 -.3 .7 -.3h6.6c.3 0 .5 .1 .7 .3l4.7 4.7c.2 .2 .3 .4 .3 .7v6.6c0 .3 -.1 .5 -.3 .7l-.35 .35m-1.997 1.997l-2.353 2.353c-.2 .2 -.4 .3 -.7 .3h-6.6c-.3 0 -.5 -.1 -.7 -.3l-4.7 -4.7c-.2 -.2 -.3 -.4 -.3 -.7v-6.6c0 -.3 .1 -.5 .3 -.7l2.35 -2.35"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var OctagonIcon = {
	  name: 'OctagonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-octagon",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.7 3h6.6c.3 0 .5 .1 .7 .3l4.7 4.7c.2 .2 .3 .4 .3 .7v6.6c0 .3 -.1 .5 -.3 .7l-4.7 4.7c-.2 .2 -.4 .3 -.7 .3h-6.6c-.3 0 -.5 -.1 -.7 -.3l-4.7 -4.7c-.2 -.2 -.3 -.4 -.3 -.7v-6.6c0 -.3 .1 -.5 .3 -.7l4.7 -4.7c.2 -.2 .4 -.3 .7 -.3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var OldIcon = {
	  name: 'OldIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-old",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 21l-1 -4l-2 -3v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 14l-1 -3l4 -3l3 2l3 .5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "4",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 17l-2 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 21v-8.5a1.5 1.5 0 0 1 3 0v.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var OlympicsIcon = {
	  name: 'OlympicsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-olympics",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "9",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "9",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "9",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "15",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "15",
	      "r": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var OmegaIcon = {
	  name: 'OmegaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-omega",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 19h5v-1a7.35 7.35 0 1 1 6 0v1h5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var OutletIcon = {
	  name: 'OutletIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-outlet",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "12",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "12",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var OvalVerticalIcon = {
	  name: 'OvalVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-oval-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("     "), vue.createVNode("ellipse", {
	      "transform": "matrix(0 -1 -1 0 24 24)",
	      "cx": "12",
	      "cy": "12",
	      "rx": "6",
	      "ry": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var OvalIcon = {
	  name: 'OvalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-oval",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("     "), vue.createVNode("ellipse", {
	      "cx": "12",
	      "cy": "12",
	      "rx": "6",
	      "ry": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var OverlineIcon = {
	  name: 'OverlineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-overline",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 9v5a5 5 0 0 0 10 0v-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 5h14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PackageIcon = {
	  name: 'PackageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-package",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "12 3 20 7.5 20 16.5 12 21 4 16.5 4 7.5 12 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "20",
	      "y2": "7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "4",
	      "y2": "7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "5.25",
	      "x2": "8",
	      "y2": "9.75"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PackgeExportIcon = {
	  name: 'PackgeExportIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-packge-export",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21l-8 -4.5v-9l8 -4.5l8 4.5v4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l8 -4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-8 -4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 18h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 15l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PackgeImportIcon = {
	  name: 'PackgeImportIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-packge-import",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21l-8 -4.5v-9l8 -4.5l8 4.5v4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l8 -4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l-8 -4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 18h-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 15l-3 3l3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PacmanIcon = {
	  name: 'PacmanIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pacman",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.636 5.636a9 9 0 0 1 13.397 .747l-5.619 5.617l5.619 5.617a9 9 0 1 1 -13.397 -11.981z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "11.5",
	      "cy": "7.5",
	      "r": "1",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PageBreakIcon = {
	  name: 'PageBreakIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-page-break",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3v4a1 1 0 0 0 1 1h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 18v1a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 14h3m4.5 0h3m4.5 0h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 10v-5a2 2 0 0 1 2 -2h7l5 5v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PaintIcon = {
	  name: 'PaintIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-paint",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "3",
	      "width": "14",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "10",
	      "y": "15",
	      "width": "4",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PaletteIcon = {
	  name: 'PaletteIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-palette",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21a9 9 0 1 1 0 -18a9 8 0 0 1 9 8a4.5 4 0 0 1 -4.5 4h-2.5a2 2 0 0 0 -1 3.75a1.3 1.3 0 0 1 -1 2.25"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7.5",
	      "cy": "10.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "7.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16.5",
	      "cy": "10.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PanoramaHorizontalIcon = {
	  name: 'PanoramaHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-panorama-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.338 5.53c5.106 1.932 10.211 1.932 15.317 .002a1 1 0 0 1 1.345 .934v11c0 .692 -.692 1.2 -1.34 .962c-5.107 -1.932 -10.214 -1.932 -15.321 0c-.648 .246 -1.339 -.242 -1.339 -.935v-11.027a1 1 0 0 1 1.338 -.935z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PanoramaVerticalIcon = {
	  name: 'PanoramaVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-panorama-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.463 4.338c-1.932 5.106 -1.932 10.211 0 15.317a1 1 0 0 1 -.934 1.345h-11c-.692 0 -1.208 -.692 -.962 -1.34c1.932 -5.107 1.932 -10.214 0 -15.321c-.246 -.648 .243 -1.339 .935 -1.339h11.028c.693 0 1.18 .691 .935 1.338z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PaperBagIcon = {
	  name: 'PaperBagIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-paper-bag",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 3h8a2 2 0 0 1 2 2v1.82a5 5 0 0 0 .528 2.236l.944 1.888a5 5 0 0 1 .528 2.236v5.82a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-5.82a5 5 0 0 1 .528 -2.236l1.472 -2.944v-3a2 2 0 0 1 2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "15",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21a2 2 0 0 0 2 -2v-5.82a5 5 0 0 0 -.528 -2.236l-1.472 -2.944"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 7h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PaperclipIcon = {
	  name: 'PaperclipIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-paperclip",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 7l-6.5 6.5a1.5 1.5 0 0 0 3 3l6.5 -6.5a3 3 0 0 0 -6 -6l-6.5 6.5a4.5 4.5 0 0 0 9 9l6.5 -6.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ParachuteIcon = {
	  name: 'ParachuteIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-parachute",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 12a10 10 0 1 0 -20 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 12c0 -1.66 -1.46 -3 -3.25 -3c-1.8 0 -3.25 1.34 -3.25 3c0 -1.66 -1.57 -3 -3.5 -3s-3.5 1.34 -3.5 3c0 -1.66 -1.46 -3 -3.25 -3c-1.8 0 -3.25 1.34 -3.25 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 12l10 10l-3.5 -10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.5 12l-3.5 10l10 -10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ParenthesesIcon = {
	  name: 'ParenthesesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-parentheses",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 4a12.25 12.25 0 0 0 0 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4a12.25 12.25 0 0 1 0 16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ParkingIcon = {
	  name: 'ParkingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-parking",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 16v-8h4a2 2 0 0 1 0 4h-4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PawIcon = {
	  name: 'PawIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-paw",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.7 13.5c-1.1 -1.996 -1.441 -2.5 -2.7 -2.5c-1.259 0 -1.736 .755 -2.836 2.747c-.942 1.703 -2.846 1.845 -3.321 3.291c-.097 .265 -.145 .677 -.143 .962c0 1.176 .787 2 1.8 2c1.259 0 3.004 -1 4.5 -1s3.241 1 4.5 1c1.013 0 1.8 -.823 1.8 -2c0 -.285 -.049 -.697 -.146 -.962c-.475 -1.451 -2.512 -1.835 -3.454 -3.538z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.188 8.082a1.039 1.039 0 0 0 -.406 -.082h-.015c-.735 .012 -1.56 .75 -1.993 1.866c-.519 1.335 -.28 2.7 .538 3.052c.129 .055 .267 .082 .406 .082c.739 0 1.575 -.742 2.011 -1.866c.516 -1.335 .273 -2.7 -.54 -3.052z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.474 9c.055 0 .109 -.004 .163 -.011c.944 -.128 1.533 -1.346 1.32 -2.722c-.203 -1.297 -1.047 -2.267 -1.932 -2.267c-.055 0 -.109 .004 -.163 .011c-.944 .128 -1.533 1.346 -1.32 2.722c.204 1.293 1.048 2.267 1.933 2.267z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.456 6.733c.214 -1.376 -.375 -2.594 -1.32 -2.722a1.164 1.164 0 0 0 -.162 -.011c-.885 0 -1.728 .97 -1.93 2.267c-.214 1.376 .375 2.594 1.32 2.722c.054 .007 .108 .011 .162 .011c.885 0 1.73 -.974 1.93 -2.267z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.69 12.918c.816 -.352 1.054 -1.719 .536 -3.052c-.436 -1.124 -1.271 -1.866 -2.009 -1.866c-.14 0 -.277 .027 -.407 .082c-.816 .352 -1.054 1.719 -.536 3.052c.436 1.124 1.271 1.866 2.009 1.866c.14 0 .277 -.027 .407 -.082z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PeaceIcon = {
	  name: 'PeaceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-peace",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "18.3",
	      "y2": "18.3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "5.7",
	      "y2": "18.3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PencilIcon = {
	  name: 'PencilIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pencil",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13.5",
	      "y1": "6.5",
	      "x2": "17.5",
	      "y2": "10.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Pennant2Icon = {
	  name: 'Pennant2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pennant-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 21h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 21v-18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 4l-9 4l9 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PennantIcon = {
	  name: 'PennantIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pennant",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "21",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "21",
	      "x2": "10",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4l9 4l-9 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PentagonIcon = {
	  name: 'PentagonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pentagon",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.2 3.394l7.033 5.237a2 2 0 0 1 .7 2.247l-2.973 8.764a2 2 0 0 1 -1.894 1.358h-8.12a2 2 0 0 1 -1.9 -1.373l-2.896 -8.765a2 2 0 0 1 .696 -2.225l6.958 -5.237a2 2 0 0 1 2.397 -.006z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PepperIcon = {
	  name: 'PepperIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pepper",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 11c0 2.21 -2.239 4 -5 4s-5 -1.79 -5 -4a8 8 0 1 0 16 0a3 3 0 0 0 -6 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8c0 -2 2 -4 4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PercentageIcon = {
	  name: 'PercentageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-percentage",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "7",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "18",
	      "x2": "18",
	      "y2": "6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PerspectiveIcon = {
	  name: 'PerspectiveIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-perspective",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.141 4.163l12 1.714a1 1 0 0 1 .859 .99v10.266a1 1 0 0 1 -.859 .99l-12 1.714a1 1 0 0 1 -1.141 -.99v-13.694a1 1 0 0 1 1.141 -.99z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhoneCallIcon = {
	  name: 'PhoneCallIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-phone-call",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 7a2 2 0 0 1 2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3a6 6 0 0 1 6 6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhoneCallingIcon = {
	  name: 'PhoneCallingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-phone-calling",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "7",
	      "x2": "15",
	      "y2": "7.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "7",
	      "x2": "18",
	      "y2": "7.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "7",
	      "x2": "21",
	      "y2": "7.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhoneCheckIcon = {
	  name: 'PhoneCheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-phone-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 6l2 2l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhoneIncomingIcon = {
	  name: 'PhoneIncomingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-phone-incoming",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "9",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "15 5 15 9 19 9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhoneOffIcon = {
	  name: 'PhoneOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-phone-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.831 14.161a15.946 15.946 0 0 1 -2.831 -8.161a2 2 0 0 1 2 -2h4l2 5l-2.5 1.5c.108 .22 .223 .435 .345 .645m1.751 2.277c.843 .84 1.822 1.544 2.904 2.078l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a15.963 15.963 0 0 1 -10.344 -4.657"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhoneOutgoingIcon = {
	  name: 'PhoneOutgoingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-phone-outgoing",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "9",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 4 20 4 20 8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhonePauseIcon = {
	  name: 'PhonePauseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-phone-pause",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "3",
	      "x2": "20",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "3",
	      "x2": "16",
	      "y2": "7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhonePlusIcon = {
	  name: 'PhonePlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-phone-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 6h6m-3 -3v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhoneXIcon = {
	  name: 'PhoneXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-phone-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhoneIcon = {
	  name: 'PhoneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-phone",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhotoOffIcon = {
	  name: 'PhotoOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-photo-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "8",
	      "x2": "15.01",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.121 19.122a3 3 0 0 1 -2.121 .878h-10a3 3 0 0 1 -3 -3v-10c0 -.833 .34 -1.587 .888 -2.131m3.112 -.869h9a3 3 0 0 1 3 3v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 15l4 -4c.928 -.893 2.072 -.893 3 0l5 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.32 12.34c.577 -.059 1.162 .162 1.68 .66l2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhotoIcon = {
	  name: 'PhotoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-photo",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "8",
	      "x2": "15.01",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 15l4 -4a3 5 0 0 1 3 0l5 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 14l1 -1a3 5 0 0 1 3 0l2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PhysotherapistIcon = {
	  name: 'PhysotherapistIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-physotherapist",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 15l-1 -3l4 -2l4 1h3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "4",
	      "cy": "19",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "6",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 20h7l1 -4l4 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PictureInPictureOffIcon = {
	  name: 'PictureInPictureOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-picture-in-picture-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 19h-6a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "14",
	      "width": "7",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "9",
	      "x2": "11",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12v-3h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PictureInPictureOnIcon = {
	  name: 'PictureInPictureOnIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-picture-in-picture-on",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 19h-6a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "14",
	      "width": "7",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "9",
	      "x2": "11",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13h3v-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PictureInPictureTopIcon = {
	  name: 'PictureInPictureTopIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-picture-in-picture-top",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 5h-6a2 2 0 0 0 -2 2v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2 -2v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "transform": "matrix(1 0 0 -1 0 15)",
	      "x": "14",
	      "y": "5",
	      "width": "7",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PictureInPictureIcon = {
	  name: 'PictureInPictureIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-picture-in-picture",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 19h-6a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "14",
	      "width": "7",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PigIcon = {
	  name: 'PigIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pig",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 11v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 3l0 3.803a6.019 6.019 0 0 1 2.658 3.197h1.341a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-1.342a6.008 6.008 0 0 1 -1.658 2.473v2.027a1.5 1.5 0 0 1 -3 0v-.583a6.04 6.04 0 0 1 -1 .083h-4a6.04 6.04 0 0 1 -1 -.083v.583a1.5 1.5 0 0 1 -3 0v-2l.001 -.027a6 6 0 0 1 3.999 -10.473h2.5l4.5 -3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PillIcon = {
	  name: 'PillIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pill",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.5 12.5l8 -8a4.94 4.94 0 0 1 7 7l-8 8a4.94 4.94 0 0 1 -7 -7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8.5",
	      "y1": "8.5",
	      "x2": "15.5",
	      "y2": "15.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PillsIcon = {
	  name: 'PillsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pills",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "8",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.5 4.5l7 7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.5 14.5l-5 5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PinIcon = {
	  name: 'PinIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pin",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 4.5l-4 4l-4 1.5l-1.5 1.5l7 7l1.5 -1.5l1.5 -4l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "15",
	      "x2": "4.5",
	      "y2": "19.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14.5",
	      "y1": "4",
	      "x2": "20",
	      "y2": "9.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PinnedOffIcon = {
	  name: 'PinnedOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pinned-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 4.5l-3.249 3.249m-2.57 1.433l-2.181 .818l-1.5 1.5l7 7l1.5 -1.5l.82 -2.186m1.43 -2.563l3.25 -3.251"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "15",
	      "x2": "4.5",
	      "y2": "19.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14.5",
	      "y1": "4",
	      "x2": "20",
	      "y2": "9.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PinnedIcon = {
	  name: 'PinnedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pinned",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 4v6l-2 4v2h10v-2l-2 -4v-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "16",
	      "y2": "4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PizzaIcon = {
	  name: 'PizzaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pizza",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21.5c-3.04 0 -5.952 -.714 -8.5 -1.983l8.5 -16.517l8.5 16.517a19.09 19.09 0 0 1 -8.5 1.983z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.38 15.866a14.94 14.94 0 0 0 6.815 1.634a14.944 14.944 0 0 0 6.502 -1.479"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 11.01v-.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 14v-.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlaneArrivalIcon = {
	  name: 'PlaneArrivalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-plane-arrival",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 12h5a2 2 0 0 1 0 4h-15l-3 -6h3l2 2h3l-2 -7h3z",
	      "transform": "rotate(15 12 12) translate(0 -1)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlaneDepartureIcon = {
	  name: 'PlaneDepartureIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-plane-departure",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 12h5a2 2 0 0 1 0 4h-15l-3 -6h3l2 2h3l-2 -7h3z",
	      "transform": "rotate(-15 12 12) translate(0 -1)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlaneInflightIcon = {
	  name: 'PlaneInflightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-plane-inflight",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 11.085h5a2 2 0 1 1 0 4h-15l-3 -6h3l2 2h3l-2 -7h3l4 7z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21h18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlaneIcon = {
	  name: 'PlaneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-plane",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 10h4a2 2 0 0 1 0 4h-4l-4 7h-3l2 -7h-4l-2 2h-3l2 -4l-2 -4h3l2 2h4l-2 -7h3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlanetIcon = {
	  name: 'PlanetIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-planet",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.816 13.58c2.292 2.138 3.546 4 3.092 4.9c-.745 1.46 -5.783 -.259 -11.255 -3.838c-5.47 -3.579 -9.304 -7.664 -8.56 -9.123c.464 -.91 2.926 -.444 5.803 .805"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Plant2Icon = {
	  name: 'Plant2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-plant-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 9a10 10 0 1 0 20 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19a10 10 0 0 1 10 -10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 9a10 10 0 0 1 10 10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4a9.7 9.7 0 0 1 2.99 7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.01 11.5a9.7 9.7 0 0 1 2.99 -7.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlantIcon = {
	  name: 'PlantIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-plant",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 15h10v4a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2v-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9a6 6 0 0 0 -6 -6h-3v2a6 6 0 0 0 6 6h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 11a6 6 0 0 1 6 -6h3v1a6 6 0 0 1 -6 6h-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "15",
	      "x2": "12",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlayCardIcon = {
	  name: 'PlayCardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-play-card",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "transform": "rotate(90 12 12)",
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "6",
	      "x2": "8.01",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "18",
	      "x2": "16.01",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16l-3 -4l3 -4l3 4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlayerEjectIcon = {
	  name: 'PlayerEjectIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-player-eject",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12h14l-7 -8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "16",
	      "width": "14",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlayerPauseIcon = {
	  name: 'PlayerPauseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-player-pause",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "5",
	      "width": "4",
	      "height": "14",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "5",
	      "width": "4",
	      "height": "14",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlayerPlayIcon = {
	  name: 'PlayerPlayIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-player-play",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 4v16l13 -8z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlayerRecordIcon = {
	  name: 'PlayerRecordIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-player-record",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlayerSkipBackIcon = {
	  name: 'PlayerSkipBackIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-player-skip-back",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 5v14l-12 -7z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "5",
	      "x2": "4",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlayerSkipForwardIcon = {
	  name: 'PlayerSkipForwardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-player-skip-forward",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 5v14l12 -7z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "5",
	      "x2": "20",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlayerStopIcon = {
	  name: 'PlayerStopIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-player-stop",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "5",
	      "width": "14",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlayerTrackNextIcon = {
	  name: 'PlayerTrackNextIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-player-track-next",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 5v14l8 -7z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 5v14l8 -7z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlayerTrackPrevIcon = {
	  name: 'PlayerTrackPrevIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-player-track-prev",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 5v14l-8 -7z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5v14l-8 -7z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlaylistAddIcon = {
	  name: 'PlaylistAddIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-playlist-add",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 8h-14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 16h-6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 16h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 13v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlaylistXIcon = {
	  name: 'PlaylistXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-playlist-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 8h-14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 12h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16h-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 14l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 14l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlaylistIcon = {
	  name: 'PlaylistIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-playlist",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14",
	      "cy": "17",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17v-13h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 5h-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "9",
	      "x2": "13",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 13h-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlugConnectedXIcon = {
	  name: 'PlugConnectedXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-plug-connected-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 16l-4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12l5 5l-1.5 1.5a3.536 3.536 0 1 1 -5 -5l1.5 -1.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12l-5 -5l1.5 -1.5a3.536 3.536 0 1 1 5 5l-1.5 1.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21l2.5 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.5 5.5l2.5 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 11l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 14l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16l4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlugConnectedIcon = {
	  name: 'PlugConnectedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-plug-connected",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12l5 5l-1.5 1.5a3.536 3.536 0 1 1 -5 -5l1.5 -1.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12l-5 -5l1.5 -1.5a3.536 3.536 0 1 1 5 5l-1.5 1.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21l2.5 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.5 5.5l2.5 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 11l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 14l-2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlugXIcon = {
	  name: 'PlugXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-plug-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.55 17.733a5.806 5.806 0 0 1 -7.356 -4.052a5.81 5.81 0 0 1 1.537 -5.627l2.054 -2.054l7.165 7.165"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20l3.5 -3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 4l-3.5 3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 9l-3.5 3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 16l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 16l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlugIcon = {
	  name: 'PlugIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-plug",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.785 6l8.215 8.215l-2.054 2.054a5.81 5.81 0 1 1 -8.215 -8.215l2.054 -2.054z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20l3.5 -3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 4l-3.5 3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 9l-3.5 3.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PlusIcon = {
	  name: 'PlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PointIcon = {
	  name: 'PointIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-point",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PokeballIcon = {
	  name: 'PokeballIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pokeball",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "9",
	      "r": "9",
	      "transform": "translate(3 3)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h6m6 0h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PolaroidIcon = {
	  name: 'PolaroidIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-polaroid",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12l3 -3c.928 -.893 2.072 -.893 3 0l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 12l2 -2c.928 -.893 2.072 -.893 3 0l2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "7",
	      "x2": "14.01",
	      "y2": "7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PolygonIcon = {
	  name: 'PolygonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-polygon",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "8",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "11",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 9.5l3.5 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 5.5l3 1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.5 10l-2.5 7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.5 17.5l-7 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PoolIcon = {
	  name: 'PoolIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pool",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 16a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 12v-7.5a1.5 1.5 0 0 1 3 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12v-7.5a1.5 1.5 0 0 0 -3 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "5",
	      "x2": "9",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "10",
	      "x2": "15",
	      "y2": "10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PowerIcon = {
	  name: 'PowerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-power",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 6a7.75 7.75 0 1 0 10 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PrayIcon = {
	  name: 'PrayIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pray",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 20h8l-4 -4v-7l4 3l2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PremiumRightsIcon = {
	  name: 'PremiumRightsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-premium-rights",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.867 9.75c-.246 -.48 -.708 -.769 -1.2 -.75h-1.334c-.736 0 -1.333 .67 -1.333 1.5c0 .827 .597 1.499 1.333 1.499h1.334c.736 0 1.333 .671 1.333 1.5c0 .828 -.597 1.499 -1.333 1.499h-1.334c-.492 .019 -.954 -.27 -1.2 -.75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 15v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PrescriptionIcon = {
	  name: 'PrescriptionIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-prescription",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 19v-16h4.5a4.5 4.5 0 1 1 0 9h-4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 21l-9 -9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 21l6 -6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PresentationAnalyticsIcon = {
	  name: 'PresentationAnalyticsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-presentation-analytics",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 12v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 4h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 20h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PresentationIcon = {
	  name: 'PresentationIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-presentation",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "4",
	      "x2": "21",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "16",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "20",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12l3 -3l2 2l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PrinterIcon = {
	  name: 'PrinterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-printer",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 9v-4a2 2 0 0 0 -2 -2h-6a2 2 0 0 0 -2 2v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "13",
	      "width": "10",
	      "height": "8",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PrisonIcon = {
	  name: 'PrisonIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-prison",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 4v16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 4v16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 9h-6v6h6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 15v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12h-.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PromptIcon = {
	  name: 'PromptIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-prompt",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "5 7 10 12 5 17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "17",
	      "x2": "19",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PropellerIcon = {
	  name: 'PropellerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-propeller",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "13",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.167 10.5c.722 -1.538 1.156 -3.043 1.303 -4.514c.22 -1.63 -.762 -2.986 -3.47 -2.986s-3.69 1.357 -3.47 2.986c.147 1.471 .581 2.976 1.303 4.514"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.169 16.751c.97 1.395 2.057 2.523 3.257 3.386c1.3 1.006 2.967 .833 4.321 -1.512c1.354 -2.345 .67 -3.874 -.85 -4.498c-1.348 -.608 -2.868 -.985 -4.562 -1.128"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.664 12.999c-1.693 .143 -3.213 .52 -4.56 1.128c-1.522 .623 -2.206 2.153 -.852 4.498s3.02 2.517 4.321 1.512c1.2 -.863 2.287 -1.991 3.258 -3.386"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Puzzle2Icon = {
	  name: 'Puzzle2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-puzzle-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4v2.5a0.5 .5 0 0 1 -.5 .5a1.5 1.5 0 0 0 0 3a0.5 .5 0 0 1 .5 .5v1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v1.5a0.5 .5 0 0 0 .5 .5a1.5 1.5 0 0 1 0 3a0.5 .5 0 0 0 -.5 .5v2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12h-2.5a0.5 .5 0 0 1 -.5 -.5a1.5 1.5 0 0 0 -3 0a0.5 .5 0 0 1 -.5 .5h-1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12h-1.5a0.5 .5 0 0 0 -.5 .5a1.5 1.5 0 0 1 -3 0a0.5 .5 0 0 0 -.5 -.5h-2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PuzzleIcon = {
	  name: 'PuzzleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-puzzle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 7h3a1 1 0 0 0 1 -1v-1a2 2 0 0 1 4 0v1a1 1 0 0 0 1 1h3a1 1 0 0 1 1 1v3a1 1 0 0 0 1 1h1a2 2 0 0 1 0 4h-1a1 1 0 0 0 -1 1v3a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-1a2 2 0 0 0 -4 0v1a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h1a2 2 0 0 0 0 -4h-1a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var PyramidIcon = {
	  name: 'PyramidIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-pyramid",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17l9 4l9 -4l-9 -14z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var QrcodeIcon = {
	  name: 'QrcodeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-qrcode",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "17",
	      "x2": "7",
	      "y2": "17.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "14",
	      "y": "4",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "7",
	      "x2": "7",
	      "y2": "7.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "14",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "7",
	      "x2": "17",
	      "y2": "7.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "14",
	      "x2": "17",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "14",
	      "x2": "20",
	      "y2": "14.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "14",
	      "x2": "14",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "20",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "17",
	      "x2": "20",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "17",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var QuestionMarkIcon = {
	  name: 'QuestionMarkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-question-mark",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8a3.5 3 0 0 1 3.5 -3h1a3.5 3 0 0 1 3.5 3a3 3 0 0 1 -2 3a3 4 0 0 0 -2 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "19",
	      "x2": "12",
	      "y2": "19.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var QuoteIcon = {
	  name: 'QuoteIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-quote",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 11h-4a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h3a1 1 0 0 1 1 1v6c0 2.667 -1.333 4.333 -4 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 11h-4a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h3a1 1 0 0 1 1 1v6c0 2.667 -1.333 4.333 -4 5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Radar2Icon = {
	  name: 'Radar2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-radar-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.51 15.56a5 5 0 1 0 -3.51 1.44"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.832 17.86a9 9 0 1 0 -6.832 3.14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RadarIcon = {
	  name: 'RadarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-radar",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12h-8a1 1 0 1 0 -1 1v8a9 9 0 0 0 9 -9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.999 8.998a5 5 0 1 0 -6.999 7.003"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.486 8.995a9 9 0 1 0 -11.482 11.495"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RadioIcon = {
	  name: 'RadioIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-radio",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 3l-9.371 3.749a1 1 0 0 0 -.629 .928v11.323a1 1 0 0 0 1 1h14a1 1 0 0 0 1 -1v-11a1 1 0 0 0 -1 -1h-14.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 16v.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RadioactiveIcon = {
	  name: 'RadioactiveIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-radioactive",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.5 14.6l3 5.19a9 9 0 0 0 4.5 -7.79h-6a3 3 0 0 1 -1.5 2.6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.5 9.4l3 -5.19a9 9 0 0 0 -9 0l3 5.19a3 3 0 0 1 3 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 14.6l-3 5.19a9 9 0 0 1 -4.5 -7.79h6a3 3 0 0 0 1.5 2.6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RadiusBottomLeftIcon = {
	  name: 'RadiusBottomLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-radius-bottom-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 19h-6a8 8 0 0 1 -8 -8v-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RadiusBottomRightIcon = {
	  name: 'RadiusBottomRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-radius-bottom-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 5v6a8 8 0 0 1 -8 8h-6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RadiusTopLeftIcon = {
	  name: 'RadiusTopLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-radius-top-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 19v-6a8 8 0 0 1 8 -8h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RadiusTopRightIcon = {
	  name: 'RadiusTopRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-radius-top-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 5h6a8 8 0 0 1 8 8v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RainbowIcon = {
	  name: 'RainbowIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rainbow",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 17c0 -5.523 -4.477 -10 -10 -10s-10 4.477 -10 10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 17a6 6 0 1 0 -12 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 17a2 2 0 1 0 -4 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Receipt2Icon = {
	  name: 'Receipt2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-receipt-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16l-3 -2l-2 2l-2 -2l-2 2l-2 -2l-3 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 8h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5m2 0v1.5m0 -9v1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ReceiptOffIcon = {
	  name: 'ReceiptOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-receipt-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-16m2 -2h10a2 2 0 0 1 2 2v10m0 4.01v1.99l-3 -2l-2 2l-2 -2l-2 2l-2 -2l-3 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "7",
	      "x2": "15",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "11",
	      "x2": "11",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "15",
	      "x2": "15",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "11",
	      "x2": "15",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ReceiptRefundIcon = {
	  name: 'ReceiptRefundIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-receipt-refund",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16l-3 -2l-2 2l-2 -2l-2 2l-2 -2l-3 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 14v-2a2 2 0 0 0 -2 -2h-4l2 -2m0 4l-2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ReceiptTaxIcon = {
	  name: 'ReceiptTaxIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-receipt-tax",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "14",
	      "x2": "15",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9.5",
	      "cy": "8.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "14.5",
	      "cy": "13.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16l-3 -2l-2 2l-2 -2l-2 2l-2 -2l-3 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ReceiptIcon = {
	  name: 'ReceiptIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-receipt",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16l-3 -2l-2 2l-2 -2l-2 2l-2 -2l-3 2m4 -14h6m-6 4h6m-2 4h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RechargingIcon = {
	  name: 'RechargingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-recharging",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.038 4.5a9 9 0 0 0 -2.495 2.47"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.186 10.209a9 9 0 0 0 0 3.508"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.5 16.962a9 9 0 0 0 2.47 2.495"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.209 20.814a9 9 0 0 0 3.5 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.962 19.5a9 9 0 0 0 2.495 -2.47"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.814 13.791a9 9 0 0 0 0 -3.508"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.5 7.038a9 9 0 0 0 -2.47 -2.495"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.791 3.186a9 9 0 0 0 -3.508 -.02"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8l-2 4h4l-2 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21a9 9 0 0 0 0 -18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RecordMailIcon = {
	  name: 'RecordMailIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-record-mail",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "15",
	      "x2": "17",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RectangleVerticalIcon = {
	  name: 'RectangleVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rectangle-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "3",
	      "width": "14",
	      "height": "18",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RectangleIcon = {
	  name: 'RectangleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rectangle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RecycleIcon = {
	  name: 'RecycleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-recycle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17l-2 2l2 2m-2 -2h9a2 2 0 0 0 1.75 -2.75l-.55 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17l-2 2l2 2m-2 -2h9a2 2 0 0 0 1.75 -2.75l-.55 -1",
	      "transform": "rotate(120 12 13)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17l-2 2l2 2m-2 -2h9a2 2 0 0 0 1.75 -2.75l-.55 -1",
	      "transform": "rotate(240 12 13)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RefreshAlertIcon = {
	  name: 'RefreshAlertIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-refresh-alert",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "12",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "15",
	      "x2": "12.01",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RefreshDotIcon = {
	  name: 'RefreshDotIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-refresh-dot",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RefreshIcon = {
	  name: 'RefreshIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-refresh",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RegisteredIcon = {
	  name: 'RegisteredIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-registered",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 15v-6h2a2 2 0 1 1 0 4h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 15l-2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RelationManyToManyIcon = {
	  name: 'RelationManyToManyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-relation-many-to-many",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 14v-4l3 4v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 14v-4l3 4v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "10.5",
	      "x2": "12",
	      "y2": "10.51"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "13.5",
	      "x2": "12",
	      "y2": "13.51"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RelationOneToManyIcon = {
	  name: 'RelationOneToManyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-relation-one-to-many",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 10h1v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 14v-4l3 4v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "10.5",
	      "x2": "11",
	      "y2": "10.51"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "13.5",
	      "x2": "11",
	      "y2": "13.51"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RelationOneToOneIcon = {
	  name: 'RelationOneToOneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-relation-one-to-one",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 10h1v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10h1v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "10.5",
	      "x2": "12",
	      "y2": "10.51"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "13.5",
	      "x2": "12",
	      "y2": "13.51"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RepeatOnceIcon = {
	  name: 'RepeatOnceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-repeat-once",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v-3a3 3 0 0 1 3 -3h13m-3 -3l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12v3a3 3 0 0 1 -3 3h-13m3 3l-3 -3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 11l1 -1v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RepeatIcon = {
	  name: 'RepeatIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-repeat",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12v-3a3 3 0 0 1 3 -3h13m-3 -3l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12v3a3 3 0 0 1 -3 3h-13m3 3l-3 -3l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ReplaceIcon = {
	  name: 'ReplaceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-replace",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "3",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "15",
	      "y": "15",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 11v-3a2 2 0 0 0 -2 -2h-6l3 3m0 -6l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 13v3a2 2 0 0 0 2 2h6l-3 -3m0 6l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ReportAnalyticsIcon = {
	  name: 'ReportAnalyticsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-report-analytics",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 17v-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 17v-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ReportMedicalIcon = {
	  name: 'ReportMedicalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-report-medical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "14",
	      "x2": "14",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ReportMoneyIcon = {
	  name: 'ReportMoneyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-report-money",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 11h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v1m0 -8v1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ReportSearchIcon = {
	  name: 'ReportSearchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-report-search",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h5.697"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 12v-5a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 15h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16.5",
	      "cy": "17.5",
	      "r": "2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.5 19.5l2.5 2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ReportIcon = {
	  name: 'ReportIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-report",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h5.697"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 14v4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 11v-4a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "3",
	      "width": "6",
	      "height": "4",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "18",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 11h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 15h3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ResizeIcon = {
	  name: 'ResizeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-resize",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 11v8a1 1 0 0 0 1 1h8m-9 -14v-1a1 1 0 0 1 1 -1h1m5 0h2m5 0h1a1 1 0 0 1 1 1v1m0 5v2m0 5v1a1 1 0 0 1 -1 1h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h7a1 1 0 0 1 1 1v7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RippleIcon = {
	  name: 'RippleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ripple",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7c3 -2 6 -2 9 0s6 2 9 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17c3 -2 6 -2 9 0s6 2 9 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12c3 -2 6 -2 9 0s6 2 9 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RoadSignIcon = {
	  name: 'RoadSignIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-road-sign",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 20.4l-6.9 -6.9c-.781 -.781 -.781 -2.219 0 -3l6.9 -6.9c.781 -.781 2.219 -.781 3 0l6.9 6.9c.781 .781 .781 2.219 0 3l-6.9 6.9c-.781 .781 -2.219 .781 -3 0z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 14v-2c0 -.59 .414 -1 1 -1h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 9l2 2l-2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RoadIcon = {
	  name: 'RoadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-road",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 19l4 -14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 5l4 14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18v-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RobotIcon = {
	  name: 'RobotIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-robot",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 7h10a2 2 0 0 1 2 2v1l1 1v3l-1 1v3a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-3l-1 -1v-3l1 -1v-1a2 2 0 0 1 2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "11.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "11.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 7l-1 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 7l1 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RocketIcon = {
	  name: 'RocketIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rocket",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 13a8 8 0 0 1 7 7a6 6 0 0 0 3 -5a9 9 0 0 0 6 -8a3 3 0 0 0 -3 -3a9 9 0 0 0 -8 6a6 6 0 0 0 -5 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 14a6 6 0 0 0 -3 6a6 6 0 0 0 6 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "9",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RollerSkatingIcon = {
	  name: 'RollerSkatingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-roller-skating",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.905 5h3.418a1 1 0 0 1 .928 .629l1.143 2.856a3 3 0 0 0 2.207 1.83l4.717 .926a2.084 2.084 0 0 1 1.682 2.045v.714a1 1 0 0 1 -1 1h-13.895a1 1 0 0 1 -.995 -1.1l.8 -8a1 1 0 0 1 .995 -.9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RollercoasterIcon = {
	  name: 'RollercoasterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rollercoaster",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21a5.55 5.55 0 0 0 5.265 -3.795l.735 -2.205a8.775 8.775 0 0 1 8.325 -6h3.675"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 9v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 21v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 9.5v11.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3h5v3h-5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 8l4 -3l2 2.5l-4 3l-1.8 -.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Rotate2Icon = {
	  name: 'Rotate2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rotate-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 4.55a8 8 0 0 0 -6 14.9m0 -4.45v5h-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18.37",
	      "y1": "7.16",
	      "x2": "18.37",
	      "y2": "7.17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "19.94",
	      "x2": "13",
	      "y2": "19.95"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16.84",
	      "y1": "18.37",
	      "x2": "16.84",
	      "y2": "18.38"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19.37",
	      "y1": "15.1",
	      "x2": "19.37",
	      "y2": "15.11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19.94",
	      "y1": "11",
	      "x2": "19.94",
	      "y2": "11.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Rotate360Icon = {
	  name: 'Rotate360Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rotate-360",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16h4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.458 11.042c.86 -2.366 .722 -4.58 -.6 -5.9c-2.272 -2.274 -7.185 -1.045 -10.973 2.743c-3.788 3.788 -5.017 8.701 -2.744 10.974c2.227 2.226 6.987 1.093 10.74 -2.515"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RotateClockwise2Icon = {
	  name: 'RotateClockwise2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rotate-clockwise-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 4.55a8 8 0 0 1 6 14.9m0 -4.45v5h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5.63",
	      "y1": "7.16",
	      "x2": "5.63",
	      "y2": "7.17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4.06",
	      "y1": "11",
	      "x2": "4.06",
	      "y2": "11.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4.63",
	      "y1": "15.1",
	      "x2": "4.63",
	      "y2": "15.11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7.16",
	      "y1": "18.37",
	      "x2": "7.16",
	      "y2": "18.38"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "19.94",
	      "x2": "11",
	      "y2": "19.95"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RotateClockwiseIcon = {
	  name: 'RotateClockwiseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rotate-clockwise",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.05 11a8 8 0 1 1 .5 4m-.5 5v-5h5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RotateDotIcon = {
	  name: 'RotateDotIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rotate-dot",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.95 11a8 8 0 1 0 -.5 4m.5 5v-5h-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RotateRectangleIcon = {
	  name: 'RotateRectangleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rotate-rectangle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.3 5h.7a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h5l-2.82 -2.82m0 5.64l2.82 -2.82",
	      "transform": "rotate(-45 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RotateIcon = {
	  name: 'RotateIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rotate",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19.95 11a8 8 0 1 0 -.5 4m.5 5v-5h-5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RouteIcon = {
	  name: 'RouteIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-route",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19h4.5a3.5 3.5 0 0 0 0 -7h-8a3.5 3.5 0 0 1 0 -7h3.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RouterIcon = {
	  name: 'RouterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-router",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "13",
	      "width": "18",
	      "height": "8",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "17",
	      "x2": "17",
	      "y2": "17.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "17",
	      "x2": "13",
	      "y2": "17.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "13",
	      "x2": "15",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.75 8.75a4 4 0 0 1 6.5 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.5 6.5a8 8 0 0 1 13 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RowInsertBottomIcon = {
	  name: 'RowInsertBottomIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-row-insert-bottom",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 6v4a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "15",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "17",
	      "x2": "10",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RowInsertTopIcon = {
	  name: 'RowInsertTopIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-row-insert-top",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18v-4a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "7",
	      "x2": "14",
	      "y2": "7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RssIcon = {
	  name: 'RssIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-rss",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "19",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4a16 16 0 0 1 16 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 11a9 9 0 0 1 9 9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Ruler2Icon = {
	  name: 'Ruler2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ruler-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3l4 4l-14 14l-4 -4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 7l-1.5 -1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 10l-1.5 -1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13l-1.5 -1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 16l-1.5 -1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RulerIcon = {
	  name: 'RulerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ruler",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h14a1 1 0 0 1 1 1v5a1 1 0 0 1 -1 1h-7a1 1 0 0 0 -1 1v7a1 1 0 0 1 -1 1h-5a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "6",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "7",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "16",
	      "x2": "6",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "4",
	      "x2": "8",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "12 4 12 7 "
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 4 16 6 "
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var RunIcon = {
	  name: 'RunIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-run",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "13",
	      "cy": "4",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 17l5 1l.75 -1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 21l0 -4l-4 -3l1 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12l0 -3l5 -1l3 3l3 1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SailboatIcon = {
	  name: 'SailboatIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sailboat",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18l-1 -3h18l-1 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 12h7l-7 -9v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "7",
	      "x2": "6",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SaltIcon = {
	  name: 'SaltIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-salt",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 16v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 8h9l-.281 -2.248a2 2 0 0 0 -1.985 -1.752h-4.468a2 2 0 0 0 -1.986 1.752l-.28 2.248z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 8l-1.612 9.671a2 2 0 0 0 1.973 2.329h8.278a2 2 0 0 0 1.973 -2.329l-1.612 -9.671"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SatelliteIcon = {
	  name: 'SatelliteIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-satellite",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.707 6.293l2.586 -2.586a1 1 0 0 1 1.414 0l5.586 5.586a1 1 0 0 1 0 1.414l-2.586 2.586a1 1 0 0 1 -1.414 0l-5.586 -5.586a1 1 0 0 1 0 -1.414z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10l-3 3l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6l3 -3l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "13.5",
	      "y2": "13.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.5 17a2.5 2.5 0 0 0 2.5 -2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 21a6 6 0 0 0 6 -6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SausageIcon = {
	  name: 'SausageIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sausage",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.5 5.5a2.5 2.5 0 0 0 -2.5 2.5c0 7.18 5.82 13 13 13a2.5 2.5 0 1 0 0 -5a8 8 0 0 1 -8 -8a2.5 2.5 0 0 0 -2.5 -2.5z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.195 5.519l-1.243 -1.989a1 1 0 0 1 .848 -1.53h1.392a1 1 0 0 1 .848 1.53l-1.245 1.99"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.482 18.225l1.989 -1.243a1 1 0 0 1 1.53 .848v1.392a1 1 0 0 1 -1.53 .848l-1.991 -1.245"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ScaleOutlineIcon = {
	  name: 'ScaleOutlineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-scale-outline",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "3",
	      "width": "18",
	      "height": "18",
	      "rx": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7c1.956 0 3.724 .802 4.994 2.095l-2.956 2.904a3 3 0 0 0 -2.038 -.799a3 3 0 0 0 -2.038 .798l-2.956 -2.903a6.979 6.979 0 0 1 4.994 -2.095z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ScaleIcon = {
	  name: 'ScaleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-scale",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "20",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6l6 -1l6 1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12l-3 -6l-3 6a3 3 0 0 0 6 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12l-3 -6l-3 6a3 3 0 0 0 6 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ScanIcon = {
	  name: 'ScanIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-scan",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 7v-1a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 17v1a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h2a2 2 0 0 1 2 2v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h2a2 2 0 0 0 2 -2v-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SchoolIcon = {
	  name: 'SchoolIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-school",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 9l-10 -4l-10 4l10 4l10 -4v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10.6v5.4a6 3 0 0 0 12 0v-5.4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ScissorsIcon = {
	  name: 'ScissorsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-scissors",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "7",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "17",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8.6",
	      "y1": "8.6",
	      "x2": "19",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8.6",
	      "y1": "15.4",
	      "x2": "19",
	      "y2": "5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ScooterElectricIcon = {
	  name: 'ScooterElectricIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-scooter-electric",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 17h5a6 6 0 0 1 5 -5v-5a2 2 0 0 0 -2 -2h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4l-2 4h3l-2 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ScooterIcon = {
	  name: 'ScooterIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-scooter",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 17h5a6 6 0 0 1 5 -5v-5a2 2 0 0 0 -2 -2h-1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ScreenShareOffIcon = {
	  name: 'ScreenShareOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-screen-share-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12v3a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "20",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "16",
	      "x2": "9",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "16",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 8l4 -4m-4 0l4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ScreenShareIcon = {
	  name: 'ScreenShareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-screen-share",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12v3a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "20",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "16",
	      "x2": "9",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "16",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4h4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 9l5 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ScribbleIcon = {
	  name: 'ScribbleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-scribble",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 15c2 3 4 4 7 4s7 -3 7 -7s-3 -7 -6 -7s-5 1.5 -5 4s2 5 6 5s8.408 -2.453 10 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ScubaMaskIcon = {
	  name: 'ScubaMaskIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-scuba-mask",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 7h12a1 1 0 0 1 1 1v4.5a2.5 2.5 0 0 1 -2.5 2.5h-.5a2 2 0 0 1 -2 -2a2 2 0 1 0 -4 0a2 2 0 0 1 -2 2h-.5a2.5 2.5 0 0 1 -2.5 -2.5v-4.5a1 1 0 0 1 1 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 17a2 2 0 0 0 2 2h3.5a5.5 5.5 0 0 0 5.5 -5.5v-9.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SearchIcon = {
	  name: 'SearchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-search",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "10",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "21",
	      "x2": "15",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SectionSignIcon = {
	  name: 'SectionSignIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-section-sign",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.172 19.004a3.001 3.001 0 1 0 2.828 -4.004"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.83 5.002a3.001 3.001 0 1 0 -2.83 3.998"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SectionIcon = {
	  name: 'SectionIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-section",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 20h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 20h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 20h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4h.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4l0 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "8",
	      "width": "16",
	      "height": "8",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SeedingIcon = {
	  name: 'SeedingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-seeding",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 10a6 6 0 0 0 -6 -6h-3v2a6 6 0 0 0 6 6h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14a6 6 0 0 1 6 -6h3v1a6 6 0 0 1 -6 6h-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "12",
	      "y2": "10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SelectIcon = {
	  name: 'SelectIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-select",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 11l3 3l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SelectorIcon = {
	  name: 'SelectorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-selector",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 9 12 5 16 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 15 12 19 8 15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SendIcon = {
	  name: 'SendIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-send",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "14",
	      "x2": "21",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 3l-6.5 18a0.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a0.55 .55 0 0 1 0 -1l18 -6.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SeparatorHorizontalIcon = {
	  name: 'SeparatorHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-separator-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 8 12 4 16 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 16 12 20 8 16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SeparatorVerticalIcon = {
	  name: 'SeparatorVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-separator-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 8 4 12 8 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 16 20 12 16 8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SeparatorIcon = {
	  name: 'SeparatorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-separator",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "3",
	      "y2": "12.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "12",
	      "x2": "17",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Server2Icon = {
	  name: 'Server2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-server-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "4",
	      "width": "18",
	      "height": "8",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "12",
	      "width": "18",
	      "height": "8",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "8",
	      "x2": "7",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "16",
	      "x2": "7",
	      "y2": "16.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 8h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 16h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ServerIcon = {
	  name: 'ServerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-server",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "4",
	      "width": "18",
	      "height": "8",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "12",
	      "width": "18",
	      "height": "8",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "8",
	      "x2": "7",
	      "y2": "8.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "16",
	      "x2": "7",
	      "y2": "16.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ServicemarkIcon = {
	  name: 'ServicemarkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-servicemark",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 9h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 15v-6l3 4l3 -4v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SettingsAutomationIcon = {
	  name: 'SettingsAutomationIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-settings-automation",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 9v6l5 -3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SettingsIcon = {
	  name: 'SettingsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-settings",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShadowOffIcon = {
	  name: 'ShadowOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shadow-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.634 5.638a9 9 0 0 0 12.728 12.727m1.68 -2.32a9 9 0 0 0 -12.086 -12.088"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 12h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 15h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 18h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 9h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 6h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShadowIcon = {
	  name: 'ShadowIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shadow",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 12h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 15h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 18h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 9h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 6h1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Shape2Icon = {
	  name: 'Shape2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shape-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 17.5l11 -11m-12.5 .5v10m14 -10v10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Shape3Icon = {
	  name: 'Shape3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shape-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 5h10m-12 2v10m14 -10v10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShapeIcon = {
	  name: 'ShapeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shape",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "7",
	      "x2": "5",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "5",
	      "x2": "17",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "19",
	      "x2": "17",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "7",
	      "x2": "19",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShareIcon = {
	  name: 'ShareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-share",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "6",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "18",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8.7",
	      "y1": "10.7",
	      "x2": "15.3",
	      "y2": "7.3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8.7",
	      "y1": "13.3",
	      "x2": "15.3",
	      "y2": "16.7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShieldCheckIcon = {
	  name: 'ShieldCheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shield-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12l2 2l4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShieldCheckeredIcon = {
	  name: 'ShieldCheckeredIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shield-checkered",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.5 12h17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShieldChevronIcon = {
	  name: 'ShieldChevronIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shield-chevron",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 14l8 -3l8 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShieldLockIcon = {
	  name: 'ShieldLockIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shield-lock",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "11",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "14.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShieldOffIcon = {
	  name: 'ShieldOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shield-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.669 17.669a12 12 0 0 1 -5.669 3.331a12 12 0 0 1 -8.5 -15c.797 .036 1.589 0 2.366 -.126m3.092 -.912a12 12 0 0 0 3.042 -1.962a12 12 0 0 0 8.5 3a12 12 0 0 1 -1.117 9.379"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShieldXIcon = {
	  name: 'ShieldXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shield-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShieldIcon = {
	  name: 'ShieldIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shield",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShipIcon = {
	  name: 'ShipIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ship",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18l-1 -5h18l-2 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 13v-6h8l4 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 7v-4h-1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShirtIcon = {
	  name: 'ShirtIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shirt",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 4l6 2v5h-3v8a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1v-8h-3v-5l6 -2a3 3 0 0 0 6 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShoeIcon = {
	  name: 'ShoeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shoe",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6h5.426a1 1 0 0 1 .863 .496l1.064 1.823a3 3 0 0 0 1.896 1.407l4.677 1.114a4 4 0 0 1 3.074 3.89v2.27a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 13l1 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 18v-1a4 4 0 0 0 -4 -4h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12l1.5 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShoppingCartDiscountIcon = {
	  name: 'ShoppingCartDiscountIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shopping-cart-discount",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17h-11v-14h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 6l-1 7h-13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10l6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10.5",
	      "cy": "4.5",
	      "r": ".5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15.5",
	      "cy": "9.5",
	      "r": ".5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShoppingCartOffIcon = {
	  name: 'ShoppingCartOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shopping-cart-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17a2 2 0 1 0 2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17h-11v-11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.239 5.231l10.761 .769l-1 7h-2m-4 0h-7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShoppingCartPlusIcon = {
	  name: 'ShoppingCartPlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shopping-cart-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17h-11v-14h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 5l6.005 .429m7.138 6.573l-.143 .998h-13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 6h6m-3 -3v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShoppingCartXIcon = {
	  name: 'ShoppingCartXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shopping-cart-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17h-11v-14h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 5l7.999 .571m5.43 4.43l-.429 2.999h-13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 3l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShoppingCartIcon = {
	  name: 'ShoppingCartIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shopping-cart",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 17h-11v-14h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 5l14 1l-1 7h-13"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ShredderIcon = {
	  name: 'ShredderIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-shredder",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "10",
	      "width": "16",
	      "height": "5",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 10v-4a2 2 0 0 0 -2 -2h-6a2 2 0 0 0 -2 2v4m5 5v5m4 -5v2m-8 -2v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SignLeftIcon = {
	  name: 'SignLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sign-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 21h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 21v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 6v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 6h-10l-2 2.5l2 2.5h10z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SignRightIcon = {
	  name: 'SignRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sign-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 21h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 21v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6h10l2 2.5l-2 2.5h-10z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SignatureIcon = {
	  name: 'SignatureIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-signature",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17c3.333 -3.333 5 -6 5 -8c0 -3 -1 -3 -2 -3s-2.032 1.085 -2 3c.034 2.048 1.658 4.877 2.5 6c1.5 2 2.5 2.5 3.5 1l2 -3c.333 2.667 1.333 4 3 4c.53 0 2.639 -2 3 -2c.517 0 1.517 .667 3 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SitemapIcon = {
	  name: 'SitemapIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sitemap",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "15",
	      "width": "6",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "15",
	      "y": "15",
	      "width": "6",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "6",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15v-1a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "12",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SkateboardIcon = {
	  name: 'SkateboardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-skateboard",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "15",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "15",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 9a2 1 0 0 0 2 1h14a2 1 0 0 0 2 -1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SleighIcon = {
	  name: 'SleighIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sleigh",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19h15a4 4 0 0 0 4 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 15h-9a4 4 0 0 1 -4 -4v-6l1.243 1.243a6 6 0 0 0 4.242 1.757h3.515v2a2 2 0 0 0 2 2h.5a1.5 1.5 0 0 0 1.5 -1.5a1.5 1.5 0 0 1 3 0v1.5a3 3 0 0 1 -3 3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 15v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 15v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SliceIcon = {
	  name: 'SliceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-slice",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19l15 -15l3 3l-6 6l2 2a14 14 0 0 1 -14 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SlideshowIcon = {
	  name: 'SlideshowIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-slideshow",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "6",
	      "x2": "15.01",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "3",
	      "width": "18",
	      "height": "14",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 13l4 -4a3 5 0 0 1 3 0l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 12l2 -2a3 5 0 0 1 3 0l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "21",
	      "x2": "8.01",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "21",
	      "x2": "12.01",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "21",
	      "x2": "16.01",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SmartHomeIcon = {
	  name: 'SmartHomeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-smart-home",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 8.71l-5.333 -4.148a2.666 2.666 0 0 0 -3.274 0l-5.334 4.148a2.665 2.665 0 0 0 -1.029 2.105v7.2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-7.2c0 -.823 -.38 -1.6 -1.03 -2.105"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 15c-2.21 1.333 -5.792 1.333 -8 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SmokingNoIcon = {
	  name: 'SmokingNoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-smoking-no",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "13",
	      "x2": "8",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 5v.5a2 2 0 0 0 2 2a2 2 0 0 1 2 2v.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 13h3a1 1 0 0 1 1 1v2c0 .28 -.115 .533 -.3 .714m-3.7 .286h-13a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SmokingIcon = {
	  name: 'SmokingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-smoking",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "13",
	      "width": "18",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "13",
	      "x2": "8",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 5v.5a2 2 0 0 0 2 2a2 2 0 0 1 2 2v.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SnowflakeIcon = {
	  name: 'SnowflakeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-snowflake",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4l2 1l2 -1m-2 -2v6.5l3 1.72"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4l2 1l2 -1m-2 -2v6.5l3 1.72",
	      "transform": "rotate(60 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4l2 1l2 -1m-2 -2v6.5l3 1.72",
	      "transform": "rotate(120 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4l2 1l2 -1m-2 -2v6.5l3 1.72",
	      "transform": "rotate(180 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4l2 1l2 -1m-2 -2v6.5l3 1.72",
	      "transform": "rotate(240 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4l2 1l2 -1m-2 -2v6.5l3 1.72",
	      "transform": "rotate(300 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SoccerFieldIcon = {
	  name: 'SoccerFieldIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-soccer-field",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 9h3v6h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 9h3v6h-3z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "5",
	      "width": "18",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SocialIcon = {
	  name: 'SocialIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-social",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "7",
	      "x2": "12",
	      "y2": "11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6.7",
	      "y1": "17.8",
	      "x2": "9.5",
	      "y2": "15.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17.3",
	      "y1": "17.8",
	      "x2": "14.5",
	      "y2": "15.8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SockIcon = {
	  name: 'SockIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sock",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 3v6l4.798 5.142a4 4 0 0 1 -5.441 5.86l-6.736 -6.41a2 2 0 0 1 -.621 -1.451v-9.141h8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.895 15.768c.708 -.721 1.105 -1.677 1.105 -2.768a4 4 0 0 0 -4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SofaIcon = {
	  name: 'SofaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sofa",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 11a2 2 0 0 1 2 2v1h12v-1a2 2 0 1 1 4 0v5a1 1 0 0 1 -1 1h-18a1 1 0 0 1 -1 -1v-5a2 2 0 0 1 2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 11v-3a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5v9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SortAscending2Icon = {
	  name: 'SortAscending2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sort-ascending-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 9l3 -3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "5",
	      "width": "5",
	      "height": "5",
	      "rx": ".5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "14",
	      "width": "5",
	      "height": "5",
	      "rx": ".5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 6v12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SortAscendingLettersIcon = {
	  name: 'SortAscendingLettersIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sort-ascending-letters",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10v-5c0 -1.38 .62 -2 2 -2s2 .62 2 2v5m0 -3h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 21h-4l4 -7h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 15l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 6v12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SortAscendingNumbersIcon = {
	  name: 'SortAscendingNumbersIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sort-ascending-numbers",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 15l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3a2 2 0 0 1 2 2v3a2 2 0 1 1 -4 0v-3a2 2 0 0 1 2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "16",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 16v3a2 2 0 0 1 -2 2h-1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SortAscendingIcon = {
	  name: 'SortAscendingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sort-ascending",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "11",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "11",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "18",
	      "x2": "13",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "15 9 18 6 21 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "6",
	      "x2": "18",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SortDescending2Icon = {
	  name: 'SortDescending2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sort-descending-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "5",
	      "width": "5",
	      "height": "5",
	      "rx": ".5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "5",
	      "y": "14",
	      "width": "5",
	      "height": "5",
	      "rx": ".5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 15l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 18v-12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SortDescendingLettersIcon = {
	  name: 'SortDescendingLettersIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sort-descending-letters",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 21v-5c0 -1.38 .62 -2 2 -2s2 .62 2 2v5m0 -3h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 10h-4l4 -7h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 15l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 6v12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SortDescendingNumbersIcon = {
	  name: 'SortDescendingNumbersIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sort-descending-numbers",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 15l3 3l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 6v12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 14a2 2 0 0 1 2 2v3a2 2 0 1 1 -4 0v-3a2 2 0 0 1 2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 5v3a2 2 0 0 1 -2 2h-1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SortDescendingIcon = {
	  name: 'SortDescendingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sort-descending",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "13",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "11",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "18",
	      "x2": "11",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "15 15 18 18 21 15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "6",
	      "x2": "18",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SoupIcon = {
	  name: 'SoupIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-soup",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19h18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 11h18a8 8 0 0 1 -8 8h-2a8 8 0 0 1 -8 -8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 8v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 5v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SpaceIcon = {
	  name: 'SpaceIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-space",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 10v3a1 1 0 0 0 1 1h14a1 1 0 0 0 1 -1v-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SpacingHorizontalIcon = {
	  name: 'SpacingHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-spacing-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 20h-2a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20h2a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8v8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SpacingVerticalIcon = {
	  name: 'SpacingVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-spacing-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20v-2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 12h-8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SpadeIcon = {
	  name: 'SpadeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-spade",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3l4.919 4.5c.61 .587 1.177 1.177 1.703 1.771a5.527 5.527 0 0 1 .264 6.979c-1.18 1.56 -3.338 1.92 -4.886 .75v1l1 3h-6l1 -3v-1c-1.54 1.07 -3.735 .772 -4.886 -.75a5.527 5.527 0 0 1 .264 -6.979a30.883 30.883 0 0 1 1.703 -1.771a1541.72 1541.72 0 0 1 4.919 -4.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SpeakerphoneIcon = {
	  name: 'SpeakerphoneIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-speakerphone",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 8a3 3 0 0 1 0 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 8v11a1 1 0 0 1 -1 1h-1a1 1 0 0 1 -1 -1v-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8h0l4.524 -3.77a0.9 .9 0 0 1 1.476 .692v12.156a0.9 .9 0 0 1 -1.476 .692l-4.524 -3.77h-8a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SpeedboatIcon = {
	  name: 'SpeedboatIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-speedboat",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17h13.4a3 3 0 0 0 2.5 -1.34l3.1 -4.66h0h-6.23a4 4 0 0 0 -1.49 .29l-3.56 1.42a4 4 0 0 1 -1.49 .29h-3.73h0h-1l-1.5 4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "13",
	      "x2": "7.5",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 8h8l2 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SportBillardIcon = {
	  name: 'SportBillardIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sport-billard",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "10",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Square0Icon = {
	  name: 'Square0Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-0",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Square1Icon = {
	  name: 'Square1Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-1",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 16v-8l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Square2Icon = {
	  name: 'Square2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10a2 2 0 1 1 4 0c0 .591 -.417 1.318 -.816 1.858l-3.184 4.143l4 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Square3Icon = {
	  name: 'Square3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12a2 2 0 1 0 -2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14a2 2 0 1 0 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Square4Icon = {
	  name: 'Square4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 16v-8l-4 6h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Square5Icon = {
	  name: 'Square5Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-5",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 16h2a2 2 0 1 0 0 -4h-2v-4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Square6Icon = {
	  name: 'Square6Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-6",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "transform": "rotate(180 12 14)",
	      "cx": "12",
	      "cy": "14",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10a2 2 0 1 0 -4 0v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Square7Icon = {
	  name: 'Square7Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-7",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 8h4l-2 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Square8Icon = {
	  name: 'Square8Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-8",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "10",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "14",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Square9Icon = {
	  name: 'Square9Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-9",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "10",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14a2 2 0 1 0 4 0v-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareAsteriskIcon = {
	  name: 'SquareAsteriskIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-asterisk",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8.5v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 10l6 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 14l6 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareCheckIcon = {
	  name: 'SquareCheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12l2 2l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareDotIcon = {
	  name: 'SquareDotIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-dot",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareForbid2Icon = {
	  name: 'SquareForbid2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-forbid-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "15",
	      "x2": "15",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareForbidIcon = {
	  name: 'SquareForbidIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-forbid",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "9",
	      "x2": "15",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareHalfIcon = {
	  name: 'SquareHalfIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-half",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 4v16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13l7.5 -7.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18l8 -8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 20l5 -5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareMinusIcon = {
	  name: 'SquareMinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareOffIcon = {
	  name: 'SquareOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4h10a2 2 0 0 1 2 2v10m-.584 3.412a1.994 1.994 0 0 1 -1.416 .588h-12a2 2 0 0 1 -2 -2v-12c0 -.552 .224 -1.052 .586 -1.414"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquarePlusIcon = {
	  name: 'SquarePlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "12",
	      "x2": "15",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "9",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareRoot2Icon = {
	  name: 'SquareRoot2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-root-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 12h1c1 0 1 1 2.016 3.527c.984 2.473 .984 3.473 1.984 3.473h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 19c1.5 0 3 -2 4 -3.5s2.5 -3.5 4 -3.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h1l3 8l3 -16h10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareRootIcon = {
	  name: 'SquareRootIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-root",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h2l4 8l4 -16h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareRotatedForbid2Icon = {
	  name: 'SquareRotatedForbid2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-rotated-forbid-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 20.4l-6.9 -6.9c-.781 -.781 -.781 -2.219 0 -3l6.9 -6.9c.781 -.781 2.219 -.781 3 0l6.9 6.9c.781 .781 .781 2.219 0 3l-6.9 6.9c-.781 .781 -2.219 .781 -3 0z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 9.5l5 5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareRotatedForbidIcon = {
	  name: 'SquareRotatedForbidIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-rotated-forbid",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 20.4l-6.9 -6.9c-.781 -.781 -.781 -2.219 0 -3l6.9 -6.9c.781 -.781 2.219 -.781 3 0l6.9 6.9c.781 .781 .781 2.219 0 3l-6.9 6.9c-.781 .781 -2.219 .781 -3 0z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.5 14.5l5 -5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareRotatedOffIcon = {
	  name: 'SquareRotatedOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-rotated-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.964 16.952l-3.462 3.461c-.782 .783 -2.222 .783 -3.004 0l-6.911 -6.91c-.783 -.783 -.783 -2.223 0 -3.005l3.455 -3.456m2.003 -2.003l1.453 -1.452c.782 -.783 2.222 -.783 3.004 0l6.911 6.91c.783 .783 .783 2.223 0 3.005l-1.448 1.45"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareRotatedIcon = {
	  name: 'SquareRotatedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-rotated",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 20.4l-6.9 -6.9c-.781 -.781 -.781 -2.219 0 -3l6.9 -6.9c.781 -.781 2.219 -.781 3 0l6.9 6.9c.781 .781 .781 2.219 0 3l-6.9 6.9c-.781 .781 -2.219 .781 -3 0z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareToggleHorizontalIcon = {
	  name: 'SquareToggleHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-toggle-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M22 12h-20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 14v-8a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20a2 2 0 0 0 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18a2 2 0 0 0 2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "20",
	      "x2": "10",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareToggleIcon = {
	  name: 'SquareToggleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-toggle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "2",
	      "x2": "12",
	      "y2": "22"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 20h-8a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 6a2 2 0 0 0 -2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20a2 2 0 0 0 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "10",
	      "x2": "20",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareXIcon = {
	  name: 'SquareXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquareIcon = {
	  name: 'SquareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-square",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquaresDiagonalIcon = {
	  name: 'SquaresDiagonalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-squares-diagonal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "8",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.586 19.414l10.827 -10.827"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SquaresFilledIcon = {
	  name: 'SquaresFilledIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-squares-filled",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "8",
	      "y": "8",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 14.5l6.492 -6.492"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13.496 20.004l6.504 -6.504l-6.504 6.504z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.586 19.414l10.827 -10.827"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Stack2Icon = {
	  name: 'Stack2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-stack-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "12 4 4 8 12 12 20 8 12 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "4 12 12 16 20 12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "4 16 12 20 20 16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Stack3Icon = {
	  name: 'Stack3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-stack-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 2l-8 4l8 4l8 -4l-8 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 10l8 4l8 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18l8 4l8 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 14l8 4l8 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StackIcon = {
	  name: 'StackIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-stack",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6l-8 4l8 4l8 -4l-8 -4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 14l8 4l8 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StairsDownIcon = {
	  name: 'StairsDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-stairs-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20h4v-4h4v-4h4v-4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 4l-7 7v-4m4 4h-4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StairsUpIcon = {
	  name: 'StairsUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-stairs-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20h4v-4h4v-4h4v-4h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 11l7 -7v4m-4 -4h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StairsIcon = {
	  name: 'StairsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-stairs",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18h4v-4h4v-4h4v-4h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StarHalfIcon = {
	  name: 'StarHalfIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-star-half",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StarOffIcon = {
	  name: 'StarOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-star-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.012 6.016l1.981 -4.014l3.086 6.253l6.9 1l-4.421 4.304m.012 4.01l.588 3.426l-6.158 -3.245l-6.172 3.245l1.179 -6.873l-5 -4.867l6.327 -.917"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StarIcon = {
	  name: 'StarIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-star",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StarsIcon = {
	  name: 'StarsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-stars",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.8 19.817l-2.172 1.138a0.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a0.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a0.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a0.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a0.39 .39 0 0 1 -.567 .411l-2.172 -1.138z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.2 19.817l-2.172 1.138a0.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a0.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a0.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a0.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a0.39 .39 0 0 1 -.567 .411l-2.172 -1.138z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9.817l-2.172 1.138a0.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a0.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a0.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a0.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a0.39 .39 0 0 1 -.567 .411l-2.172 -1.138z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SteeringWheelIcon = {
	  name: 'SteeringWheelIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-steering-wheel",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "12",
	      "x2": "3.25",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "12",
	      "x2": "20.75",
	      "y2": "10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StepIntoIcon = {
	  name: 'StepIntoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-step-into",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "11",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "11",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "20",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StepOutIcon = {
	  name: 'StepOutIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-step-out",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "7",
	      "x2": "12",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "7",
	      "x2": "12",
	      "y2": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "20",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StethoscopeIcon = {
	  name: 'StethoscopeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-stethoscope",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 4h-1a2 2 0 0 0 -2 2v3.5h0a5.5 5.5 0 0 0 11 0v-3.5a2 2 0 0 0 -2 -2h-1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 15a6 6 0 1 0 12 0v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 3v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 3v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "20",
	      "cy": "10",
	      "r": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StickerIcon = {
	  name: 'StickerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sticker",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12l-2 .5a6 6 0 0 1 -6.5 -6.5l.5 -2l8 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12a8 8 0 1 1 -8 -8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var StrikethroughIcon = {
	  name: 'StrikethroughIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-strikethrough",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 6.5a4 2 0 0 0 -4 -1.5h-1a3.5 3.5 0 0 0 0 7h2a3.5 3.5 0 0 1 0 7h-1.5a4 2 0 0 1 -4 -1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SubmarineIcon = {
	  name: 'SubmarineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-submarine",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 11v6h2l1 -1.5l3 1.5h10a3 3 0 0 0 0 -6h-10h0l-3 1.5l-1 -1.5h-2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 11l-1 -3h-5l-1 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 8v-2a1 1 0 0 1 1 -1h1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SubscriptIcon = {
	  name: 'SubscriptIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-subscript",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7l8 10m-8 0l8 -10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 20h-4l3.5 -4a1.73 1.73 0 0 0 -3.5 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SubtaskIcon = {
	  name: 'SubtaskIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-subtask",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "9",
	      "x2": "12",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "5",
	      "x2": "8",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 5v11a1 1 0 0 0 1 1h5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "12",
	      "y": "7",
	      "width": "8",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "12",
	      "y": "15",
	      "width": "8",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SumIcon = {
	  name: 'SumIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sum",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 16v2a1 1 0 0 1 -1 1h-11l6 -7l-6 -7h11a1 1 0 0 1 1 1v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SunOffIcon = {
	  name: 'SunOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sun-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 12a4 4 0 0 0 -4 -4m-2.834 1.177a4 4 0 0 0 5.66 5.654"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SunIcon = {
	  name: 'SunIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sun",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SunriseIcon = {
	  name: 'SunriseIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sunrise",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17h1m16 0h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7m-9.7 5.7a4 4 0 0 1 8 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 9v-6l3 3m-6 0l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SunsetIcon = {
	  name: 'SunsetIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sunset",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17h1m16 0h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7m-9.7 5.7a4 4 0 0 1 8 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "21",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3v6l3 -3m-6 0l3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SuperscriptIcon = {
	  name: 'SuperscriptIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-superscript",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7l8 10m-8 0l8 -10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 11h-4l3.5 -4a1.73 1.73 0 0 0 -3.5 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SwimmingIcon = {
	  name: 'SwimmingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-swimming",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16",
	      "cy": "9",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 11l4 -2l3.5 3l-1.5 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 16.75a2.4 2.4 0 0 0 1 .25a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 1 -.25"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Switch2Icon = {
	  name: 'Switch2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-switch-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17h5l1.67 -2.386m3.66 -5.227l1.67 -2.387h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 4l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7h5l7 10h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20l3 -3l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Switch3Icon = {
	  name: 'Switch3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-switch-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17h2.397a5 5 0 0 0 4.096 -2.133l.177 -.253m3.66 -5.227l.177 -.254a5 5 0 0 1 4.096 -2.133h3.397"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 4l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 7h2.397a5 5 0 0 1 4.096 2.133l4.014 5.734a5 5 0 0 0 4.096 2.133h3.397"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 20l3 -3l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SwitchHorizontalIcon = {
	  name: 'SwitchHorizontalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-switch-horizontal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 3 20 7 16 11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "7",
	      "x2": "20",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "8 13 4 17 8 21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "17",
	      "x2": "13",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SwitchVerticalIcon = {
	  name: 'SwitchVerticalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-switch-vertical",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "3 8 7 4 11 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "4",
	      "x2": "7",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "13 16 17 20 21 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "10",
	      "x2": "17",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SwitchIcon = {
	  name: 'SwitchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-switch",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "15 4 19 4 19 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14.75",
	      "y1": "9.25",
	      "x2": "19",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "19",
	      "x2": "9",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "15 19 19 19 19 15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "5",
	      "x2": "19",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var SwordIcon = {
	  name: 'SwordIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-sword",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4v5l-9 7l-4 4l-3 -3l4 -4l7 -9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.5 11.5l6 6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TableExportIcon = {
	  name: 'TableExportIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-table-export",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.5 20h-5.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v7.5m-16 -3.5h16m-10 -6v16m4 -1h7m-3 -3l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TableImportIcon = {
	  name: 'TableImportIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-table-import",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 13.5v-7.5a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-6m-8 -10h16m-10 -6v11.5m-8 3.5h7m-3 -3l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TableOffIcon = {
	  name: 'TableOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-table-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 4h10a2 2 0 0 1 2 2v10m-.588 3.417c-.362 .36 -.86 .583 -1.412 .583h-12a2 2 0 0 1 -2 -2v-12c0 -.552 .224 -1.053 .586 -1.414"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 10h6m4 0h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 4v2m0 4v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TableIcon = {
	  name: 'TableIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-table",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "10",
	      "x2": "20",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "4",
	      "x2": "10",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TagOffIcon = {
	  name: 'TagOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tag-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.792 7.793a1 1 0 0 0 1.414 1.414"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.88 4.877a2.99 2.99 0 0 0 -.88 2.123v3.859c0 .537 .213 1.052 .593 1.432l8.116 8.116a2.025 2.025 0 0 0 2.864 0l2.416 -2.416m2.002 -2.002l.416 -.416a2.025 2.025 0 0 0 0 -2.864l-8.117 -8.116a2.025 2.025 0 0 0 -1.431 -.593h-2.859"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TagIcon = {
	  name: 'TagIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tag",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8.5",
	      "cy": "8.5",
	      "r": "1",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 7v3.859c0 .537 .213 1.052 .593 1.432l8.116 8.116a2.025 2.025 0 0 0 2.864 0l4.834 -4.834a2.025 2.025 0 0 0 0 -2.864l-8.117 -8.116a2.025 2.025 0 0 0 -1.431 -.593h-3.859a3 3 0 0 0 -3 3z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TagsOffIcon = {
	  name: 'TagsOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tags-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 6h-.975a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834c.028 -.028 .055 -.056 .08 -.085"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.573 18.407l.418 -.418m1.997 -1.997l.419 -.419a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 9h-.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TagsIcon = {
	  name: 'TagsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tags",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 9h-.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Tallymark1Icon = {
	  name: 'Tallymark1Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tallymark-1",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Tallymark2Icon = {
	  name: 'Tallymark2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tallymark-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "5",
	      "x2": "10",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "5",
	      "x2": "14",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Tallymark3Icon = {
	  name: 'Tallymark3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tallymark-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "5",
	      "x2": "8",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "5",
	      "x2": "12",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "5",
	      "x2": "16",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Tallymark4Icon = {
	  name: 'Tallymark4Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tallymark-4",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "5",
	      "x2": "6",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "5",
	      "x2": "10",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "5",
	      "x2": "14",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "5",
	      "x2": "18",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TallymarksIcon = {
	  name: 'TallymarksIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tallymarks",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "5",
	      "x2": "6",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "5",
	      "x2": "10",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "5",
	      "x2": "14",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "5",
	      "x2": "18",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "17",
	      "x2": "21",
	      "y2": "7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TankIcon = {
	  name: 'TankIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tank",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "2",
	      "y": "12",
	      "width": "18",
	      "height": "6",
	      "rx": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 12l1 -5h5l3 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "9",
	      "x2": "13.2",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TargetIcon = {
	  name: 'TargetIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-target",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TelescopeIcon = {
	  name: 'TelescopeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-telescope",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21l6 -5l6 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13v8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.294 13.678l.166 .281c.52 .88 1.624 1.265 2.605 .91l14.242 -5.165a1.023 1.023 0 0 0 .565 -1.456l-2.62 -4.705a1.087 1.087 0 0 0 -1.447 -.42l-.056 .032l-12.694 7.618c-1.02 .613 -1.357 1.897 -.76 2.905z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 5l3 5.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TemperatureCelsiusIcon = {
	  name: 'TemperatureCelsiusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-temperature-celsius",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "8",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 9a3 3 0 0 0 -3 -3h-1a3 3 0 0 0 -3 3v6a3 3 0 0 0 3 3h1a3 3 0 0 0 3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TemperatureFahrenheitIcon = {
	  name: 'TemperatureFahrenheitIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-temperature-fahrenheit",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "8",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "12",
	      "x2": "18",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 6h-6a1 1 0 0 0 -1 1v11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TemperatureMinusIcon = {
	  name: 'TemperatureMinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-temperature-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13.5a4 4 0 1 0 4 0v-8.5a2 2 0 0 0 -4 0v8.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "9",
	      "x2": "12",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "9",
	      "x2": "22",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TemperaturePlusIcon = {
	  name: 'TemperaturePlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-temperature-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13.5a4 4 0 1 0 4 0v-8.5a2 2 0 0 0 -4 0v8.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "9",
	      "x2": "12",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "9",
	      "x2": "22",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "6",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TemperatureIcon = {
	  name: 'TemperatureIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-temperature",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13.5a4 4 0 1 0 4 0v-8.5a2 2 0 0 0 -4 0v8.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "9",
	      "x2": "14",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TemplateIcon = {
	  name: 'TemplateIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-template",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "12",
	      "width": "6",
	      "height": "8",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "16",
	      "x2": "20",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TentIcon = {
	  name: 'TentIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tent",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 14l4 6h6l-9 -16l-9 16h6l4 -6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Terminal2Icon = {
	  name: 'Terminal2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-terminal-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 9l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "15",
	      "x2": "16",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "4",
	      "width": "18",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TerminalIcon = {
	  name: 'TerminalIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-terminal",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7l5 5l-5 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "19",
	      "x2": "19",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TestPipe2Icon = {
	  name: 'TestPipe2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-test-pipe-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3v15a3 3 0 0 1 -6 0v-15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 12h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 3h8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TestPipeIcon = {
	  name: 'TestPipeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-test-pipe",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 8.04l-12.122 12.124a2.857 2.857 0 1 1 -4.041 -4.04l12.122 -12.124"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 13h8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 15l1.5 1.6a2 2 0 1 1 -3 0l1.5 -1.6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 3l6 6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TextDirectionLtrIcon = {
	  name: 'TextDirectionLtrIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-text-direction-ltr",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 19h14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 21l2 -2l-2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h-6.5a3.5 3.5 0 0 0 0 7h.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 15v-11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 15v-11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TextDirectionRtlIcon = {
	  name: 'TextDirectionRtlIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-text-direction-rtl",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 4h-6.5a3.5 3.5 0 0 0 0 7h.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 15v-11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 15v-11"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 19h14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 21l-2 -2l2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TextResizeIcon = {
	  name: 'TextResizeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-text-resize",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 5h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 19h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 7v10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14v-4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TextWrapDisabledIcon = {
	  name: 'TextWrapDisabledIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-text-wrap-disabled",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "14",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "18",
	      "x2": "14",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h17l-3 -3m0 6l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TextWrapIcon = {
	  name: 'TextWrapIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-text-wrap",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "6",
	      "x2": "20",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "18",
	      "x2": "9",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12h13a3 3 0 0 1 0 6h-4l2 -2m0 4l-2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ThermometerIcon = {
	  name: 'ThermometerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-thermometer",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 5a2.828 2.828 0 0 1 0 4l-8 8h-4v-4l8 -8a2.828 2.828 0 0 1 4 0z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 7l-1.5 -1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 10l-1.5 -1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13l-1.5 -1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 17l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ThumbDownIcon = {
	  name: 'ThumbDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-thumb-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 13v-8a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v7a1 1 0 0 0 1 1h3a4 4 0 0 1 4 4v1a2 2 0 0 0 4 0v-5h3a2 2 0 0 0 2 -2l-1 -5a2 3 0 0 0 -2 -2h-7a3 3 0 0 0 -3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ThumbUpIcon = {
	  name: 'ThumbUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-thumb-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 11v8a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-7a1 1 0 0 1 1 -1h3a4 4 0 0 0 4 -4v-1a2 2 0 0 1 4 0v5h3a2 2 0 0 1 2 2l-1 5a2 3 0 0 1 -2 2h-7a3 3 0 0 1 -3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TicketIcon = {
	  name: 'TicketIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-ticket",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "5",
	      "x2": "15",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "11",
	      "x2": "15",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "17",
	      "x2": "15",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 5h14a2 2 0 0 1 2 2v3a2 2 0 0 0 0 4v3a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-3a2 2 0 0 0 0 -4v-3a2 2 0 0 1 2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TieIcon = {
	  name: 'TieIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tie",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 22l4 -4l-2.5 -11l.993 -2.649a1 1 0 0 0 -.936 -1.351h-3.114a1 1 0 0 0 -.936 1.351l.993 2.649l-2.5 11l4 4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 7h3l5 5.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TiltShiftIcon = {
	  name: 'TiltShiftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tilt-shift",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.56 3.69a9 9 0 0 0 -2.92 1.95"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.69 8.56a9 9 0 0 0 -.69 3.44"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.69 15.44a9 9 0 0 0 1.95 2.92"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.56 20.31a9 9 0 0 0 3.44 .69"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.44 20.31a9 9 0 0 0 2.92 -1.95"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.31 15.44a9 9 0 0 0 .69 -3.44"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20.31 8.56a9 9 0 0 0 -1.95 -2.92"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.44 3.69a9 9 0 0 0 -3.44 -.69"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TimelineIcon = {
	  name: 'TimelineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-timeline",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16l6 -7l5 5l5 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "14",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "9",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "4",
	      "cy": "16",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "20",
	      "cy": "8",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TirIcon = {
	  name: 'TirIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tir",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18h8m4 0h2v-6a5 7 0 0 0 -5 -7h-1l1.5 7h4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 18v-13h3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "3 17 3 12 12 12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ToggleLeftIcon = {
	  name: 'ToggleLeftIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-toggle-left",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "8",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "2",
	      "y": "6",
	      "width": "20",
	      "height": "12",
	      "rx": "6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ToggleRightIcon = {
	  name: 'ToggleRightIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-toggle-right",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16",
	      "cy": "12",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "2",
	      "y": "6",
	      "width": "20",
	      "height": "12",
	      "rx": "6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ToiletPaperIcon = {
	  name: 'ToiletPaperIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-toilet-paper",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("     "), vue.createVNode("ellipse", {
	      "cx": "6",
	      "cy": "10",
	      "rx": "3",
	      "ry": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 10c0 -3.866 -1.343 -7 -3 -7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 3h12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 10v10l-3 -1l-3 2l-3 -3l-3 2v-10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 10h.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ToolIcon = {
	  name: 'ToolIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tool",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 10h3v-3l-3.5 -3.5a6 6 0 0 1 8 8l6 6a2 2 0 0 1 -3 3l-6 -6a6 6 0 0 1 -8 -8l3.5 3.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ToolsKitchen2Icon = {
	  name: 'ToolsKitchen2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tools-kitchen-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 3v12h-5c-.023 -3.681 .184 -7.406 5 -12zm0 12v6h-1v-3m-10 -14v17m-3 -17v3a3 3 0 1 0 6 0v-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ToolsKitchenIcon = {
	  name: 'ToolsKitchenIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tools-kitchen",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 3h8l-1 9h-6z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18h2v3h-2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 3v12h-5c-.023 -3.681 .184 -7.406 5 -12z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 15v6h-1v-3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "12",
	      "x2": "8",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ToolsIcon = {
	  name: 'ToolsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tools",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21h4l13 -13a1.5 1.5 0 0 0 -4 -4l-13 13v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14.5",
	      "y1": "5.5",
	      "x2": "18.5",
	      "y2": "9.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "12 8 7 3 3 7 8 12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "8",
	      "x2": "5.5",
	      "y2": "9.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "16 12 21 17 17 21 12 16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "17",
	      "x2": "14.5",
	      "y2": "18.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TornadoIcon = {
	  name: 'TornadoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tornado",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "4",
	      "x2": "3",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "16",
	      "x2": "7",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "11",
	      "y1": "20",
	      "x2": "15",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "8",
	      "x2": "20",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "12",
	      "x2": "16",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TournamentIcon = {
	  name: 'TournamentIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tournament",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 14h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 7h4a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "12",
	      "x2": "20",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrackIcon = {
	  name: 'TrackIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-track",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 15l11 -11m5 5l-11 11m-4 -8l7 7m-3.5 -10.5l7 7m-3.5 -10.5l7 7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TractorIcon = {
	  name: 'TractorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tractor",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "15",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "15",
	      "x2": "7",
	      "y2": "15.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10.5",
	      "y1": "17",
	      "x2": "17",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 15.2v-4.2a1 1 0 0 0 -1 -1h-6l-2 -5h-6v6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 5h-1a1 1 0 0 0 -1 1v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrademarkIcon = {
	  name: 'TrademarkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trademark",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.5 9h5m-2.5 0v6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 15v-6l3 4l3 -4v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrafficConeIcon = {
	  name: 'TrafficConeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-traffic-cone",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "20",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9.4",
	      "y1": "10",
	      "x2": "14.6",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7.8",
	      "y1": "15",
	      "x2": "16.2",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 20l5 -15h2l5 15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrafficLightsIcon = {
	  name: 'TrafficLightsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-traffic-lights",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "7",
	      "y": "2",
	      "width": "10",
	      "height": "20",
	      "rx": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "7",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "17",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrainIcon = {
	  name: 'TrainIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-train",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 13c0 -3.87 -3.37 -7 -10 -7h-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 15h16a2 2 0 0 0 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6v5h17.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "10",
	      "x2": "3",
	      "y2": "14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "11",
	      "x2": "8",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "11",
	      "x2": "13",
	      "y2": "6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "19",
	      "x2": "21",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TransferInIcon = {
	  name: 'TransferInIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-transfer-in",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 18v3h16v-14l-8 -4l-8 4v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 14h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 11l3 3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TransferOutIcon = {
	  name: 'TransferOutIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-transfer-out",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 19v2h16v-14l-8 -4l-8 4v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 14h-9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 11l-3 3l3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrashOffIcon = {
	  name: 'TrashOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trash-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 7h3m4 0h9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "11",
	      "x2": "10",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "14",
	      "x2": "14",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l.077 -.923"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18.384",
	      "y1": "14.373",
	      "x2": "19",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 5v-1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrashXIcon = {
	  name: 'TrashXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trash-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 7h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrashIcon = {
	  name: 'TrashIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trash",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "7",
	      "x2": "20",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "11",
	      "x2": "10",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "11",
	      "x2": "14",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TreeIcon = {
	  name: 'TreeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-tree",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 13l-2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12l2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.824 15.995a3 3 0 0 1 -2.743 -3.69a2.998 2.998 0 0 1 .304 -4.833a3 3 0 0 1 4.615 -3.707a3 3 0 0 1 4.614 3.707a2.997 2.997 0 0 1 .305 4.833a3 3 0 0 1 -2.919 3.695h-4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TreesIcon = {
	  name: 'TreesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trees",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 5l3 3l-2 1l4 4l-3 1l4 4h-9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "21",
	      "x2": "15",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 13l-2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12l2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 21v-13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5.824 15.995a3 3 0 0 1 -2.743 -3.69a2.998 2.998 0 0 1 .304 -4.833a3 3 0 0 1 4.615 -3.707a3 3 0 0 1 4.614 3.707a2.997 2.997 0 0 1 .305 4.833a3 3 0 0 1 -2.919 3.695h-4z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrendingDown2Icon = {
	  name: 'TrendingDown2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trending-down-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6h5l7 10h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 19l3 -3l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrendingDown3Icon = {
	  name: 'TrendingDown3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trending-down-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6h2.397a5 5 0 0 1 4.096 2.133l4.014 5.734a5 5 0 0 0 4.096 2.133h3.397"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 19l3 -3l-3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrendingDownIcon = {
	  name: 'TrendingDownIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trending-down",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "3 7 9 13 13 9 21 17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "21 10 21 17 14 17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrendingUp2Icon = {
	  name: 'TrendingUp2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trending-up-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 5l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18h5l7 -10h6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrendingUp3Icon = {
	  name: 'TrendingUp3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trending-up-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 5l3 3l-3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18h2.397a5 5 0 0 0 4.096 -2.133l4.014 -5.734a5 5 0 0 1 4.096 -2.133h3.397"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrendingUpIcon = {
	  name: 'TrendingUpIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trending-up",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "3 17 9 11 13 15 21 7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "14 7 21 7 21 14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TriangleInvertedIcon = {
	  name: 'TriangleInvertedIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-triangle-inverted",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4h14a2 2 0 0 1 1.84 2.75l-7.1 12.25a2 2 0 0 1 -3.5 0l-7.1 -12.25a2 2 0 0 1 1.75 -2.75"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TriangleOffIcon = {
	  name: 'TriangleOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-triangle-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 19h14m1.986 -2.014a2 2 0 0 0 -.146 -.736l-7.1 -12.25a2 2 0 0 0 -3.5 0l-.825 1.424m-1.467 2.53l-4.808 8.296a2 2 0 0 0 1.75 2.75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3l18 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TriangleSquareCircleIcon = {
	  name: 'TriangleSquareCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-triangle-square-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3l-4 7h8z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "14",
	      "width": "6",
	      "height": "6",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TriangleIcon = {
	  name: 'TriangleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-triangle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrianglesIcon = {
	  name: 'TrianglesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-triangles",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.974 21h8.052a0.975 .975 0 0 0 .81 -1.517l-4.025 -6.048a0.973 .973 0 0 0 -1.622 0l-4.025 6.048a0.977 .977 0 0 0 .81 1.517z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.98 16h14.04c.542 0 .98 -.443 .98 -.989a0.995 .995 0 0 0 -.156 -.534l-7.02 -11.023a0.974 .974 0 0 0 -1.648 0l-7.02 11.023a0.994 .994 0 0 0 .294 1.366a0.973 .973 0 0 0 .53 .157z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TridentIcon = {
	  name: 'TridentIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trident",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6l2 -2v3a7 7 0 0 0 14 0v-3l2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21v-18l-2 2m4 0l-2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TrophyIcon = {
	  name: 'TrophyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-trophy",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "21",
	      "x2": "16",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "17",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "4",
	      "x2": "17",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 4v8a5 5 0 0 1 -10 0v-8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "5",
	      "cy": "9",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "9",
	      "r": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TruckDeliveryIcon = {
	  name: 'TruckDeliveryIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-truck-delivery",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 17h-2v-4m-1 -8h11v12m-4 0h6m4 0h2v-6h-8m0 -5h5l3 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "9",
	      "x2": "7",
	      "y2": "9"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TruckOffIcon = {
	  name: 'TruckOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-truck-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.585 15.586a2 2 0 0 0 2.826 2.831"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 17h-2v-11a1 1 0 0 1 1 -1h1m3.96 0h4.04v4m0 4v4m-4 0h6m6 0v-6h-6m-2 -5h5l3 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TruckReturnIcon = {
	  name: 'TruckReturnIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-truck-return",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 17h-2v-11a1 1 0 0 1 1 -1h9v6h-5l2 2m0 -4l-2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "17",
	      "x2": "15",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 6h5l3 5v6h-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TruckIcon = {
	  name: 'TruckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-truck",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 17h-2v-11a1 1 0 0 1 1 -1h9v12m-4 0h6m4 0h2v-6h-8m0 -5h5l3 5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var TypographyIcon = {
	  name: 'TypographyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-typography",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "7",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "14",
	      "y1": "20",
	      "x2": "21",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6.9",
	      "y1": "15",
	      "x2": "13.8",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10.2",
	      "y1": "6.3",
	      "x2": "16",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "5 20 11 4 13 4 20 20"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UmbrellaIcon = {
	  name: 'UmbrellaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-umbrella",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 12a8 8 0 0 1 16 0z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12v6a2 2 0 0 0 4 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UnderlineIcon = {
	  name: 'UnderlineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-underline",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 5v5a5 5 0 0 0 10 0v-5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 19h14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UnlinkIcon = {
	  name: 'UnlinkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-unlink",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "21",
	      "x2": "16",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "16",
	      "x2": "21",
	      "y2": "16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "8",
	      "x2": "5",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "3",
	      "x2": "8",
	      "y2": "5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UploadIcon = {
	  name: 'UploadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-upload",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "7 9 12 4 17 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "4",
	      "x2": "12",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UrgentIcon = {
	  name: 'UrgentIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-urgent",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16v-4a4 4 0 0 1 8 0v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "6",
	      "y": "16",
	      "width": "12",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UsbIcon = {
	  name: 'UsbIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-usb",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "19",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 17v-11.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 10v3l5 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 14.5l5 -2v-2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 10h2v-2h-2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "7",
	      "cy": "9",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5.5h4l-2 -2.5z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UserCheckIcon = {
	  name: 'UserCheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-user-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "7",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 11l2 2l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UserCircleIcon = {
	  name: 'UserCircleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-user-circle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "10",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.168 18.849a4 4 0 0 1 3.832 -2.849h4a4 4 0 0 1 3.834 2.855"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UserExclamationIcon = {
	  name: 'UserExclamationIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-user-exclamation",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "7",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "7",
	      "x2": "19",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "14",
	      "x2": "19",
	      "y2": "14.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UserMinusIcon = {
	  name: 'UserMinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-user-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "7",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "16",
	      "y1": "11",
	      "x2": "22",
	      "y2": "11"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UserOffIcon = {
	  name: 'UserOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-user-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14.274 10.291a4 4 0 1 0 -5.554 -5.58m-.548 3.453a4.01 4.01 0 0 0 2.62 2.65"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 1.147 .167m2.685 2.681a4 4 0 0 1 .168 1.152v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UserPlusIcon = {
	  name: 'UserPlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-user-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "7",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 11h6m-3 -3v6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UserSearchIcon = {
	  name: 'UserSearchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-user-search",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "7",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21v-2a4 4 0 0 1 4 -4h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16.5",
	      "cy": "17.5",
	      "r": "2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18.5 19.5l2.5 2.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UserXIcon = {
	  name: 'UserXIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-user-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "7",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 9l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UserIcon = {
	  name: 'UserIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-user",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "7",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var UsersIcon = {
	  name: 'UsersIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-users",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "7",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 3.13a4 4 0 0 1 0 7.75"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 21v-2a4 4 0 0 0 -3 -3.85"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VaccineBottleIcon = {
	  name: 'VaccineBottleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-vaccine-bottle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "9",
	      "y": "3",
	      "width": "6",
	      "height": "3",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6v.98c0 .877 -.634 1.626 -1.5 1.77c-.866 .144 -1.5 .893 -1.5 1.77v8.48a2 2 0 0 0 2 2h6a2 2 0 0 0 2 -2v-8.48c0 -.877 -.634 -1.626 -1.5 -1.77a1.795 1.795 0 0 1 -1.5 -1.77v-.98"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 12h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 18h10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 15h2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VaccineIcon = {
	  name: 'VaccineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-vaccine",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 3l4 4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 5l-4.5 4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.5 6.5l6 6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.5 11.5l-6.5 6.5h-4v-4l6.5 -6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7.5 12.5l1.5 1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10.5 9.5l1.5 1.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VariableIcon = {
	  name: 'VariableIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-variable",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 4c-2.5 5 -2.5 10 0 16m14 -16c2.5 5 2.5 10 0 16m-10 -11h1c1 0 1 1 2.016 3.527c.984 2.473 .984 3.473 1.984 3.473h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 16c1.5 0 3 -2 4 -3.5s2.5 -3.5 4 -3.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VectorBeizer2Icon = {
	  name: 'VectorBeizer2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-vector-beizer-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "3",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "17",
	      "y": "17",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "5",
	      "x2": "14",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "19",
	      "x2": "17",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "9",
	      "cy": "19",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "15",
	      "cy": "5",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 5.5a5 6.5 0 0 1 5 6.5a5 6.5 0 0 0 5 6.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VectorBezierIcon = {
	  name: 'VectorBezierIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-vector-bezier",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "14",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "17",
	      "y": "14",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "10",
	      "y": "6",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 8.5a6 6 0 0 0 -5 5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 8.5a6 6 0 0 1 5 5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "8",
	      "x2": "4",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "20",
	      "y1": "8",
	      "x2": "14",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "3",
	      "cy": "8",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "21",
	      "cy": "8",
	      "r": "1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VectorTriangleIcon = {
	  name: 'VectorTriangleIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-vector-triangle",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "10",
	      "y": "4",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "17",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "17",
	      "y": "17",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6.5",
	      "y1": "17.1",
	      "x2": "11.5",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17.5",
	      "y1": "17.1",
	      "x2": "12.5",
	      "y2": "8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "19",
	      "x2": "17",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VectorIcon = {
	  name: 'VectorIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-vector",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "3",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "17",
	      "y": "3",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "17",
	      "y": "17",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "17",
	      "width": "4",
	      "height": "4",
	      "rx": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "7",
	      "x2": "5",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19",
	      "y1": "7",
	      "x2": "19",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "5",
	      "x2": "17",
	      "y2": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "19",
	      "x2": "17",
	      "y2": "19"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VenusIcon = {
	  name: 'VenusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-venus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "9",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "14",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "18",
	      "x2": "15",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VersionsIcon = {
	  name: 'VersionsIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-versions",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "10",
	      "y": "5",
	      "width": "10",
	      "height": "14",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "7",
	      "x2": "7",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "8",
	      "x2": "4",
	      "y2": "16"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VideoMinusIcon = {
	  name: 'VideoMinusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-video-minus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10l4.553 -2.276a1 1 0 0 1 1.447 .894v6.764a1 1 0 0 1 -1.447 .894l-4.553 -2.276v-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "6",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "12",
	      "x2": "11",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VideoOffIcon = {
	  name: 'VideoOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-video-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 11v-1l4.553 -2.276a1 1 0 0 1 1.447 .894v6.764a1 1 0 0 1 -.675 .946"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 6h3a2 2 0 0 1 2 2v3m0 4v1a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VideoPlusIcon = {
	  name: 'VideoPlusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-video-plus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10l4.553 -2.276a1 1 0 0 1 1.447 .894v6.764a1 1 0 0 1 -1.447 .894l-4.553 -2.276v-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "6",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "12",
	      "x2": "11",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "9",
	      "y1": "10",
	      "x2": "9",
	      "y2": "14"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VideoIcon = {
	  name: 'VideoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-video",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 10l4.553 -2.276a1 1 0 0 1 1.447 .894v6.764a1 1 0 0 1 -1.447 .894l-4.553 -2.276v-4z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "3",
	      "y": "6",
	      "width": "12",
	      "height": "12",
	      "rx": "2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var View360Icon = {
	  name: 'View360Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-view-360",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("ellipse", {
	      "cx": "12",
	      "cy": "12",
	      "rx": "4",
	      "ry": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("ellipse", {
	      "cx": "12",
	      "cy": "12",
	      "rx": "4",
	      "ry": "9",
	      "transform": "rotate(90 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ViewfinderIcon = {
	  name: 'ViewfinderIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-viewfinder",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "21",
	      "x2": "12",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "7",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "12",
	      "x2": "18",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "12",
	      "x2": "12",
	      "y2": "12.01"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ViewportNarrowIcon = {
	  name: 'ViewportNarrowIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-viewport-narrow",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h7l-3 -3m0 6l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12h-7l3 -3m0 6l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 6v-3h6v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 18v3h6v-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ViewportWideIcon = {
	  name: 'ViewportWideIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-viewport-wide",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 12h-7l3 -3m0 6l-3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 12h7l-3 -3m0 6l3 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 6v-3h18v3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 18v3h18v-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VinylIcon = {
	  name: 'VinylIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-vinyl",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16.004 3.937a9 9 0 1 0 4.996 8.063"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "20",
	      "cy": "4",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 4l-3.5 10l-2.5 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VirusOffIcon = {
	  name: 'VirusOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-virus-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8.469 8.46a5 5 0 0 0 7.058 7.084m1.386 -2.608a5 5 0 0 0 -5.826 -5.853"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(45 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(90 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "13",
	      "y2": "3",
	      "transform": "rotate(135 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(180 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(225 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(270 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "11",
	      "y2": "3",
	      "transform": "rotate(315 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VirusSearchIcon = {
	  name: 'VirusSearchIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-virus-search",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 12a5 5 0 1 0 -5 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(45 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(90 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(180 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(225 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(270 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(315 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "17.5",
	      "cy": "17.5",
	      "r": "2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "19.5",
	      "y1": "19.5",
	      "x2": "22",
	      "y2": "22"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VirusIcon = {
	  name: 'VirusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-virus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(45 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(90 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(135 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(180 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(225 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(270 12 12)"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7v-4m-1 0h2",
	      "transform": "rotate(315 12 12)"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VocabularyIcon = {
	  name: 'VocabularyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-vocabulary",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 19h-6a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1h6a2 2 0 0 1 2 2a2 2 0 0 1 2 -2h6a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-6a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5v16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 7h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 11h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 7h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 11h1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 15h1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Volume2Icon = {
	  name: 'Volume2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-volume-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 8a5 5 0 0 1 0 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15h-2a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h2l3.5 -4.5a0.8 .8 0 0 1 1.5 .5v14a0.8 .8 0 0 1 -1.5 .5l-3.5 -4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Volume3Icon = {
	  name: 'Volume3Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-volume-3",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15h-2a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h2l3.5 -4.5a0.8 .8 0 0 1 1.5 .5v14a0.8 .8 0 0 1 -1.5 .5l-3.5 -4.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 10l4 4m0 -4l-4 4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var VolumeIcon = {
	  name: 'VolumeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-volume",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 8a5 5 0 0 1 0 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17.7 5a9 9 0 0 1 0 14"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 15h-2a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h2l3.5 -4.5a0.8 .8 0 0 1 1.5 .5v14a0.8 .8 0 0 1 -1.5 .5l-3.5 -4.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WalkIcon = {
	  name: 'WalkIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-walk",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "13",
	      "cy": "4",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "21",
	      "x2": "10",
	      "y2": "17"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 21l-2 -4l-3 -3l1 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 12l2 -3l4 -1l3 3l3 1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WallIcon = {
	  name: 'WallIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wall",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("rect", {
	      "x": "4",
	      "y": "4",
	      "width": "16",
	      "height": "16",
	      "rx": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 8h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12h-16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16h16"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 4v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 8v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 12v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11 16v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WalletIcon = {
	  name: 'WalletIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wallet",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 8v-3a1 1 0 0 0 -1 -1h-10a2 2 0 0 0 0 4h12a1 1 0 0 1 1 1v3m0 4v3a1 1 0 0 1 -1 1h-12a2 2 0 0 1 -2 -2v-12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 12v4h-4a2 2 0 0 1 0 -4h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WallpaperIcon = {
	  name: 'WallpaperIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wallpaper",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 6h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "18",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 18v-12a2 2 0 1 0 -4 0v12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WandIcon = {
	  name: 'WandIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wand",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("polyline", {
	      "points": "6 21 21 6 18 3 3 18 6 21"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "15",
	      "y1": "6",
	      "x2": "18",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 3a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 13a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WaveSawToolIcon = {
	  name: 'WaveSawToolIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wave-saw-tool",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h5l4 8v-16l4 8h5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WaveSineIcon = {
	  name: 'WaveSineIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wave-sine",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12h-2c-.894 0 -1.662 -.857 -1.761 -2c-.296 -3.45 -.749 -6 -2.749 -6s-2.5 3.582 -2.5 8s-.5 8 -2.5 8s-2.452 -2.547 -2.749 -6c-.1 -1.147 -.867 -2 -1.763 -2h-2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WaveSquareIcon = {
	  name: 'WaveSquareIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wave-square",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h5v8h4v-16h4v8h5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WebhookIcon = {
	  name: 'WebhookIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-webhook",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4.876 13.61a4 4 0 1 0 6.124 3.39h6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15.066 20.502a4 4 0 1 0 1.934 -7.502c-.706 0 -1.424 .179 -2 .5l-3 -5.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 8a4 4 0 1 0 -8 0c0 1.506 .77 2.818 2 3.5l-3 5.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Wifi0Icon = {
	  name: 'Wifi0Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wifi-0",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18",
	      "x2": "12.01",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Wifi1Icon = {
	  name: 'Wifi1Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wifi-1",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18",
	      "x2": "12.01",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.172 15.172a4 4 0 0 1 5.656 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var Wifi2Icon = {
	  name: 'Wifi2Icon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wifi-2",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18",
	      "x2": "12.01",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.172 15.172a4 4 0 0 1 5.656 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.343 12.343a8 8 0 0 1 11.314 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WifiOffIcon = {
	  name: 'WifiOffIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wifi-off",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18",
	      "x2": "12.01",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.172 15.172a4 4 0 0 1 5.656 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.343 12.343a7.963 7.963 0 0 1 3.864 -2.14m4.163 .155a7.965 7.965 0 0 1 3.287 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.515 9.515a12 12 0 0 1 3.544 -2.455m3.101 -.92a12 12 0 0 1 10.325 3.374"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "3",
	      "x2": "21",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WifiIcon = {
	  name: 'WifiIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wifi",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18",
	      "x2": "12.01",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9.172 15.172a4 4 0 0 1 5.656 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6.343 12.343a8 8 0 0 1 11.314 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.515 9.515c4.686 -4.687 12.284 -4.687 17 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WindIcon = {
	  name: 'WindIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wind",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 8h8.5a2.5 2.5 0 1 0 -2.34 -3.24"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12h15.5a2.5 2.5 0 1 1 -2.34 3.24"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 16h5.5a2.5 2.5 0 1 1 -2.34 3.24"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WindmillIcon = {
	  name: 'WindmillIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-windmill",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12c2.76 0 5 -2.01 5 -4.5s-2.24 -4.5 -5 -4.5v9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12c0 2.76 2.01 5 4.5 5s4.5 -2.24 4.5 -5h-9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12c-2.76 0 -5 2.01 -5 4.5s2.24 4.5 5 4.5v-9z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 12c0 -2.76 -2.01 -5 -4.5 -5s-4.5 2.24 -4.5 5h9z"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WindowIcon = {
	  name: 'WindowIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-window",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3c-3.866 0 -7 3.272 -7 7v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1 -1v-10c0 -3.728 -3.134 -7 -7 -7z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "13",
	      "x2": "19",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WindsockIcon = {
	  name: 'WindsockIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-windsock",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 3v18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 11l12 -1v-4l-12 -1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 5.5v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M14 6v4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 21h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WiperWashIcon = {
	  name: 'WiperWashIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wiper-wash",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "20",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 11l5.5 5.5a5 5 0 0 1 7 0l5.5 -5.5a12 12 0 0 0 -18 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "20",
	      "x2": "12",
	      "y2": "6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 6a4 4 0 0 1 .4 -1.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 2.1a4 4 0 0 1 2 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6a4 4 0 0 0 -.4 -1.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 6a4 4 0 0 1 .4 -1.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 2.1a4 4 0 0 1 2 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 6a4 4 0 0 0 -.4 -1.8"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WiperIcon = {
	  name: 'WiperIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wiper",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "18",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 9l5.5 5.5a5 5 0 0 1 7 0l5.5 -5.5a12 12 0 0 0 -18 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "18",
	      "x2": "9.8",
	      "y2": "5.2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WomanIcon = {
	  name: 'WomanIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-woman",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "5",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 22v-4h-2l2 -6a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1l2 6h-2v4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WorldDownloadIcon = {
	  name: 'WorldDownloadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-world-download",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12a9 9 0 1 0 -9 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.6 9h16.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.6 15h8.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.578 3a17 17 0 0 0 0 18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.5 3c1.719 2.755 2.5 5.876 2.5 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 14v7m-3 -3l3 3l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WorldLatitudeIcon = {
	  name: 'WorldLatitudeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-world-latitude",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4.6",
	      "y1": "7",
	      "x2": "19.4",
	      "y2": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3",
	      "y1": "12",
	      "x2": "21",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4.6",
	      "y1": "17",
	      "x2": "19.4",
	      "y2": "17"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WorldLongitudeIcon = {
	  name: 'WorldLongitudeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-world-longitude",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.5 3a11.2 11.2 0 0 0 0 18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.5 3a11.2 11.2 0 0 1 0 18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "3",
	      "x2": "12",
	      "y2": "21"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WorldUploadIcon = {
	  name: 'WorldUploadIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-world-upload",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12a9 9 0 1 0 -9 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.6 9h16.8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3.6 15h8.4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.578 3a17 17 0 0 0 0 18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.5 3c1.719 2.755 2.5 5.876 2.5 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 21v-7m3 3l-3 -3l-3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WorldIcon = {
	  name: 'WorldIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-world",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3.6",
	      "y1": "9",
	      "x2": "20.4",
	      "y2": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "3.6",
	      "y1": "15",
	      "x2": "20.4",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M11.5 3a17 17 0 0 0 0 18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12.5 3a17 17 0 0 1 0 18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WreckingBallIcon = {
	  name: 'WreckingBallIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-wrecking-ball",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "19",
	      "cy": "13",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "4",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "13",
	      "cy": "17",
	      "r": "2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "13",
	      "y1": "19",
	      "x2": "4",
	      "y2": "19"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "15",
	      "x2": "13",
	      "y2": "15"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 12v-5h2a3 3 0 0 1 3 3v5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 15v-2a1 1 0 0 1 1 -1h7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 11v-7l-6 7"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WritingSignIcon = {
	  name: 'WritingSignIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-writing-sign",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 19c3.333 -2 5 -4 5 -6c0 -3 -1 -3 -2 -3s-2.032 1.085 -2 3c.034 2.048 1.658 2.877 2.5 4c1.5 2 2.5 2.5 3.5 1c.667 -1 1.167 -1.833 1.5 -2.5c1 2.333 2.333 3.5 4 3.5h2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 17v-12c0 -1.121 -.879 -2 -2 -2s-2 .879 -2 2v12l2 2l2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 7h4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var WritingIcon = {
	  name: 'WritingIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-writing",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M20 17v-12c0 -1.121 -.879 -2 -2 -2s-2 .879 -2 2v12l2 2l2 -2z"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 7h4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M18 19h-13a2 2 0 1 1 0 -4h4a2 2 0 1 0 0 -4h-3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var XIcon = {
	  name: 'XIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-x",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "18",
	      "y1": "6",
	      "x2": "6",
	      "y2": "18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6",
	      "y1": "6",
	      "x2": "18",
	      "y2": "18"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var YinYangIcon = {
	  name: 'YinYangIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-yin-yang",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "12",
	      "r": "9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 3a4.5 4.5 0 0 0 0 9a4.5 4.5 0 0 1 0 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "7.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "16.5",
	      "r": ".5",
	      "fill": "currentColor"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var YogaIcon = {
	  name: 'YogaIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-yoga",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "4",
	      "r": "1"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 20h4l1.5 -3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M17 20l-1 -5h-5l1 -7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 10l4 -1l4 -1l4 1.5l4 1.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacAquariusIcon = {
	  name: 'ZodiacAquariusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-aquarius",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 10l3 -3l3 3l3 -3l3 3l3 -3l3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 17l3 -3l3 3l3 -3l3 3l3 -3l3 3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacAriesIcon = {
	  name: 'ZodiacAriesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-aries",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 5a5 5 0 1 0 -4 8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M16 13a5 5 0 1 0 -4 -8"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "21",
	      "x2": "12",
	      "y2": "5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacCancerIcon = {
	  name: 'ZodiacCancerIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-cancer",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "18",
	      "cy": "12",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 12a10 6.5 0 0 1 14 -6.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 12a10 6.5 0 0 1 -14 6.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacCapricornIcon = {
	  name: 'ZodiacCapricornIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-capricorn",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M4 4a3 3 0 0 1 3 3v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 7a3 3 0 0 1 6 0v11a3 3 0 0 1 -3 3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "16",
	      "cy": "17",
	      "r": "3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacGeminiIcon = {
	  name: 'ZodiacGeminiIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-gemini",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 3a21 21 0 0 0 18 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 21a21 21 0 0 1 18 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "4.5",
	      "x2": "7",
	      "y2": "19.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "17",
	      "y1": "4.5",
	      "x2": "17",
	      "y2": "19.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacLeoIcon = {
	  name: 'ZodiacLeoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-leo",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 17a4 4 0 1 0 8 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "6",
	      "cy": "16",
	      "r": "3"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "11",
	      "cy": "7",
	      "r": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 7c0 3 2 5 2 9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M15 7c0 4 -2 6 -2 10"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacLibraIcon = {
	  name: 'ZodiacLibraIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-libra",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "20",
	      "x2": "19",
	      "y2": "20"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 17h5v-.3a7 7 0 1 1 4 0v.3h5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacPiscesIcon = {
	  name: 'ZodiacPiscesIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-pisces",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 3a21 21 0 0 1 0 18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M19 3a21 21 0 0 0 0 18"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "5",
	      "y1": "12",
	      "x2": "19",
	      "y2": "12"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacSagittariusIcon = {
	  name: 'ZodiacSagittariusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-sagittarius",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "4",
	      "y1": "20",
	      "x2": "20",
	      "y2": "4"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M13 4h7v7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "6.5",
	      "y1": "12.5",
	      "x2": "11.5",
	      "y2": "17.5"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacScorpioIcon = {
	  name: 'ZodiacScorpioIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-scorpio",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 4a2 2 0 0 1 2 2v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 6a2 2 0 0 1 4 0v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 6a2 2 0 0 1 4 0v10a3 3 0 0 0 3 3h5l-3 -3m0 6l3 -3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacTaurusIcon = {
	  name: 'ZodiacTaurusIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-taurus",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M6 3a6 6 0 0 0 12 0"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "12",
	      "cy": "15",
	      "r": "6"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZodiacVirgoIcon = {
	  name: 'ZodiacVirgoIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zodiac-virgo",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M3 4a2 2 0 0 1 2 2v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M5 6a2 2 0 0 1 4 0v9"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M9 6a2 2 0 0 1 4 0v10a7 5 0 0 0 7 5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 21a7 5 0 0 0 7 -5v-2a3 3 0 0 0 -6 0"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZoomCancelIcon = {
	  name: 'ZoomCancelIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zoom-cancel",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "10",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "8",
	      "y1": "8",
	      "x2": "12",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "12",
	      "y1": "8",
	      "x2": "8",
	      "y2": "12"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "21",
	      "x2": "15",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZoomCheckIcon = {
	  name: 'ZoomCheckIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zoom-check",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "10",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 21l-6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M7 10l2 2l4 -4"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZoomCodeIcon = {
	  name: 'ZoomCodeIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zoom-code",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "10",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 21l-6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M8 8l-2 2l2 2"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 8l2 2l-2 2"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZoomExclamationIcon = {
	  name: 'ZoomExclamationIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zoom-exclamation",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "10",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 21l-6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13v.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 7v3"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZoomInIcon = {
	  name: 'ZoomInIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zoom-in",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "10",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "10",
	      "x2": "13",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "7",
	      "x2": "10",
	      "y2": "13"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "21",
	      "x2": "15",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZoomMoneyIcon = {
	  name: 'ZoomMoneyIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zoom-money",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "10",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 21l-6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M12 7h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 13v1m0 -8v1"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZoomOutIcon = {
	  name: 'ZoomOutIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zoom-out",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "10",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "7",
	      "y1": "10",
	      "x2": "13",
	      "y2": "10"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "21",
	      "y1": "21",
	      "x2": "15",
	      "y2": "15"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var ZoomQuestionIcon = {
	  name: 'ZoomQuestionIcon',
	  props: {
	    size: {
	      type: String,
	      default: '24'
	    }
	  },

	  render() {
	    const size = this.$props.size + 'px';
	    const attrs = this.$data.attrs || {};
	    const allAttrs = { ...this.$data,
	      width: attrs.width || size,
	      height: attrs.height || size
	    };
	    return vue.createVNode("svg", vue.mergeProps({
	      "xmlns": "http://www.w3.org/2000/svg",
	      "class": "icon icon-tabler icon-tabler-zoom-question",
	      "width": "24",
	      "height": "24",
	      "viewBox": "0 0 24 24",
	      "stroke-width": "2",
	      "stroke": "currentColor",
	      "fill": "none",
	      "stroke-linecap": "round",
	      "stroke-linejoin": "round"
	    }, allAttrs), [vue.createTextVNode("   "), vue.createVNode("path", {
	      "stroke": "none",
	      "d": "M0 0h24v24H0z",
	      "fill": "none"
	    }, null), vue.createTextVNode("   "), vue.createVNode("circle", {
	      "cx": "10",
	      "cy": "10",
	      "r": "7"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M21 21l-6 -6"
	    }, null), vue.createTextVNode("   "), vue.createVNode("line", {
	      "x1": "10",
	      "y1": "13",
	      "x2": "10",
	      "y2": "13.01"
	    }, null), vue.createTextVNode("   "), vue.createVNode("path", {
	      "d": "M10 10a1.5 1.5 0 1 0 -1.14 -2.474"
	    }, null), vue.createTextVNode(" ")]);
	  }

	};

	var components = /*#__PURE__*/Object.freeze({
	  __proto__: null,
	  TwoFactorAuthIcon: TwoFactorAuthIcon,
	  ThreedCubeSphereIcon: ThreedCubeSphereIcon,
	  ThreedRotateIcon: ThreedRotateIcon,
	  ABOffIcon: ABOffIcon,
	  ABIcon: ABIcon,
	  AbacusIcon: AbacusIcon,
	  AccessPointOffIcon: AccessPointOffIcon,
	  AccessPointIcon: AccessPointIcon,
	  AccessibleOffIcon: AccessibleOffIcon,
	  AccessibleIcon: AccessibleIcon,
	  ActivityHeartbeatIcon: ActivityHeartbeatIcon,
	  ActivityIcon: ActivityIcon,
	  Ad2Icon: Ad2Icon,
	  AdIcon: AdIcon,
	  AddressBookIcon: AddressBookIcon,
	  AdjustmentsAltIcon: AdjustmentsAltIcon,
	  AdjustmentsHorizontalIcon: AdjustmentsHorizontalIcon,
	  AdjustmentsOffIcon: AdjustmentsOffIcon,
	  AdjustmentsIcon: AdjustmentsIcon,
	  AerialLiftIcon: AerialLiftIcon,
	  AffiliateIcon: AffiliateIcon,
	  AlarmOffIcon: AlarmOffIcon,
	  AlarmIcon: AlarmIcon,
	  AlbumIcon: AlbumIcon,
	  AlertCircleIcon: AlertCircleIcon,
	  AlertOctagonIcon: AlertOctagonIcon,
	  AlertTriangleIcon: AlertTriangleIcon,
	  AlienIcon: AlienIcon,
	  AlignCenterIcon: AlignCenterIcon,
	  AlignJustifiedIcon: AlignJustifiedIcon,
	  AlignLeftIcon: AlignLeftIcon,
	  AlignRightIcon: AlignRightIcon,
	  AmbulanceIcon: AmbulanceIcon,
	  AnchorIcon: AnchorIcon,
	  AngleIcon: AngleIcon,
	  AntennaBars1Icon: AntennaBars1Icon,
	  AntennaBars2Icon: AntennaBars2Icon,
	  AntennaBars3Icon: AntennaBars3Icon,
	  AntennaBars4Icon: AntennaBars4Icon,
	  AntennaBars5Icon: AntennaBars5Icon,
	  AntennaBarsOffIcon: AntennaBarsOffIcon,
	  AntennaIcon: AntennaIcon,
	  ApertureIcon: ApertureIcon,
	  ApiAppOffIcon: ApiAppOffIcon,
	  ApiAppIcon: ApiAppIcon,
	  ApiIcon: ApiIcon,
	  AppWindowIcon: AppWindowIcon,
	  AppleIcon: AppleIcon,
	  AppsOffIcon: AppsOffIcon,
	  AppsIcon: AppsIcon,
	  ArchiveOffIcon: ArchiveOffIcon,
	  ArchiveIcon: ArchiveIcon,
	  Armchair2Icon: Armchair2Icon,
	  ArmchairIcon: ArmchairIcon,
	  ArrowAutofitContentIcon: ArrowAutofitContentIcon,
	  ArrowAutofitDownIcon: ArrowAutofitDownIcon,
	  ArrowAutofitHeightIcon: ArrowAutofitHeightIcon,
	  ArrowAutofitLeftIcon: ArrowAutofitLeftIcon,
	  ArrowAutofitRightIcon: ArrowAutofitRightIcon,
	  ArrowAutofitUpIcon: ArrowAutofitUpIcon,
	  ArrowAutofitWidthIcon: ArrowAutofitWidthIcon,
	  ArrowBackUpIcon: ArrowBackUpIcon,
	  ArrowBackIcon: ArrowBackIcon,
	  ArrowBarDownIcon: ArrowBarDownIcon,
	  ArrowBarLeftIcon: ArrowBarLeftIcon,
	  ArrowBarRightIcon: ArrowBarRightIcon,
	  ArrowBarToDownIcon: ArrowBarToDownIcon,
	  ArrowBarToLeftIcon: ArrowBarToLeftIcon,
	  ArrowBarToRightIcon: ArrowBarToRightIcon,
	  ArrowBarToUpIcon: ArrowBarToUpIcon,
	  ArrowBarUpIcon: ArrowBarUpIcon,
	  ArrowBearLeft2Icon: ArrowBearLeft2Icon,
	  ArrowBearLeftIcon: ArrowBearLeftIcon,
	  ArrowBearRight2Icon: ArrowBearRight2Icon,
	  ArrowBearRightIcon: ArrowBearRightIcon,
	  ArrowBigDownLineIcon: ArrowBigDownLineIcon,
	  ArrowBigDownLinesIcon: ArrowBigDownLinesIcon,
	  ArrowBigDownIcon: ArrowBigDownIcon,
	  ArrowBigLeftLineIcon: ArrowBigLeftLineIcon,
	  ArrowBigLeftLinesIcon: ArrowBigLeftLinesIcon,
	  ArrowBigLeftIcon: ArrowBigLeftIcon,
	  ArrowBigRightLineIcon: ArrowBigRightLineIcon,
	  ArrowBigRightLinesIcon: ArrowBigRightLinesIcon,
	  ArrowBigRightIcon: ArrowBigRightIcon,
	  ArrowBigTopIcon: ArrowBigTopIcon,
	  ArrowBigUpLineIcon: ArrowBigUpLineIcon,
	  ArrowBigUpLinesIcon: ArrowBigUpLinesIcon,
	  ArrowBottomBarIcon: ArrowBottomBarIcon,
	  ArrowBottomCircleIcon: ArrowBottomCircleIcon,
	  ArrowBottomSquareIcon: ArrowBottomSquareIcon,
	  ArrowBottomTailIcon: ArrowBottomTailIcon,
	  ArrowCurveLeftIcon: ArrowCurveLeftIcon,
	  ArrowCurveRightIcon: ArrowCurveRightIcon,
	  ArrowDownCircleIcon: ArrowDownCircleIcon,
	  ArrowDownLeftCircleIcon: ArrowDownLeftCircleIcon,
	  ArrowDownLeftIcon: ArrowDownLeftIcon,
	  ArrowDownRightCircleIcon: ArrowDownRightCircleIcon,
	  ArrowDownRightIcon: ArrowDownRightIcon,
	  ArrowDownIcon: ArrowDownIcon,
	  ArrowForkIcon: ArrowForkIcon,
	  ArrowForwardUpIcon: ArrowForwardUpIcon,
	  ArrowForwardIcon: ArrowForwardIcon,
	  ArrowLeftBarIcon: ArrowLeftBarIcon,
	  ArrowLeftCircleIcon: ArrowLeftCircleIcon,
	  ArrowLeftRightIcon: ArrowLeftRightIcon,
	  ArrowLeftSquareIcon: ArrowLeftSquareIcon,
	  ArrowLeftTailIcon: ArrowLeftTailIcon,
	  ArrowLeftIcon: ArrowLeftIcon,
	  ArrowLoopLeft2Icon: ArrowLoopLeft2Icon,
	  ArrowLoopLeftIcon: ArrowLoopLeftIcon,
	  ArrowLoopRight2Icon: ArrowLoopRight2Icon,
	  ArrowLoopRightIcon: ArrowLoopRightIcon,
	  ArrowMergeIcon: ArrowMergeIcon,
	  ArrowNarrowDownIcon: ArrowNarrowDownIcon,
	  ArrowNarrowLeftIcon: ArrowNarrowLeftIcon,
	  ArrowNarrowRightIcon: ArrowNarrowRightIcon,
	  ArrowNarrowUpIcon: ArrowNarrowUpIcon,
	  ArrowRampLeft2Icon: ArrowRampLeft2Icon,
	  ArrowRampLeft3Icon: ArrowRampLeft3Icon,
	  ArrowRampLeftIcon: ArrowRampLeftIcon,
	  ArrowRampRight2Icon: ArrowRampRight2Icon,
	  ArrowRampRight3Icon: ArrowRampRight3Icon,
	  ArrowRampRightIcon: ArrowRampRightIcon,
	  ArrowRightBarIcon: ArrowRightBarIcon,
	  ArrowRightCircleIcon: ArrowRightCircleIcon,
	  ArrowRightSquareIcon: ArrowRightSquareIcon,
	  ArrowRightTailIcon: ArrowRightTailIcon,
	  ArrowRightIcon: ArrowRightIcon,
	  ArrowRotaryFirstLeftIcon: ArrowRotaryFirstLeftIcon,
	  ArrowRotaryFirstRightIcon: ArrowRotaryFirstRightIcon,
	  ArrowRotaryLastLeftIcon: ArrowRotaryLastLeftIcon,
	  ArrowRotaryLastRightIcon: ArrowRotaryLastRightIcon,
	  ArrowRotaryLeftIcon: ArrowRotaryLeftIcon,
	  ArrowRotaryRightIcon: ArrowRotaryRightIcon,
	  ArrowRotaryStraightIcon: ArrowRotaryStraightIcon,
	  ArrowSharpTurnLeftIcon: ArrowSharpTurnLeftIcon,
	  ArrowSharpTurnRightIcon: ArrowSharpTurnRightIcon,
	  ArrowTopBarIcon: ArrowTopBarIcon,
	  ArrowTopCircleIcon: ArrowTopCircleIcon,
	  ArrowTopSquareIcon: ArrowTopSquareIcon,
	  ArrowTopTailIcon: ArrowTopTailIcon,
	  ArrowUpCircleIcon: ArrowUpCircleIcon,
	  ArrowUpLeftCircleIcon: ArrowUpLeftCircleIcon,
	  ArrowUpLeftIcon: ArrowUpLeftIcon,
	  ArrowUpRightCircleIcon: ArrowUpRightCircleIcon,
	  ArrowUpRightIcon: ArrowUpRightIcon,
	  ArrowUpIcon: ArrowUpIcon,
	  ArrowWaveLeftDownIcon: ArrowWaveLeftDownIcon,
	  ArrowWaveLeftUpIcon: ArrowWaveLeftUpIcon,
	  ArrowWaveRightDownIcon: ArrowWaveRightDownIcon,
	  ArrowWaveRightUpIcon: ArrowWaveRightUpIcon,
	  ArrowsCrossIcon: ArrowsCrossIcon,
	  ArrowsDiagonal2Icon: ArrowsDiagonal2Icon,
	  ArrowsDiagonalMinimize2Icon: ArrowsDiagonalMinimize2Icon,
	  ArrowsDiagonalMinimizeIcon: ArrowsDiagonalMinimizeIcon,
	  ArrowsDiagonalIcon: ArrowsDiagonalIcon,
	  ArrowsDoubleNeSwIcon: ArrowsDoubleNeSwIcon,
	  ArrowsDoubleNwSeIcon: ArrowsDoubleNwSeIcon,
	  ArrowsDoubleSeNwIcon: ArrowsDoubleSeNwIcon,
	  ArrowsDoubleSwNeIcon: ArrowsDoubleSwNeIcon,
	  ArrowsDownUpIcon: ArrowsDownUpIcon,
	  ArrowsDownIcon: ArrowsDownIcon,
	  ArrowsHorizontalIcon: ArrowsHorizontalIcon,
	  ArrowsJoin2Icon: ArrowsJoin2Icon,
	  ArrowsJoinIcon: ArrowsJoinIcon,
	  ArrowsLeftDownIcon: ArrowsLeftDownIcon,
	  ArrowsLeftRightIcon: ArrowsLeftRightIcon,
	  ArrowsLeftIcon: ArrowsLeftIcon,
	  ArrowsMaximizeIcon: ArrowsMaximizeIcon,
	  ArrowsMinimizeIcon: ArrowsMinimizeIcon,
	  ArrowsRandomIcon: ArrowsRandomIcon,
	  ArrowsRightDownIcon: ArrowsRightDownIcon,
	  ArrowsRightLeftIcon: ArrowsRightLeftIcon,
	  ArrowsRightIcon: ArrowsRightIcon,
	  ArrowsShuffle2Icon: ArrowsShuffle2Icon,
	  ArrowsShuffleIcon: ArrowsShuffleIcon,
	  ArrowsSortIcon: ArrowsSortIcon,
	  ArrowsSplit2Icon: ArrowsSplit2Icon,
	  ArrowsSplitIcon: ArrowsSplitIcon,
	  ArrowsUpDownIcon: ArrowsUpDownIcon,
	  ArrowsUpLeftIcon: ArrowsUpLeftIcon,
	  ArrowsUpRightIcon: ArrowsUpRightIcon,
	  ArrowsUpIcon: ArrowsUpIcon,
	  ArrowsVerticalIcon: ArrowsVerticalIcon,
	  ArtboardOffIcon: ArtboardOffIcon,
	  ArtboardIcon: ArtboardIcon,
	  AspectRatioOffIcon: AspectRatioOffIcon,
	  AspectRatioIcon: AspectRatioIcon,
	  AsteriskSimpleIcon: AsteriskSimpleIcon,
	  AsteriskIcon: AsteriskIcon,
	  AtOffIcon: AtOffIcon,
	  AtIcon: AtIcon,
	  Atom2Icon: Atom2Icon,
	  AtomIcon: AtomIcon,
	  AugmentedRealityIcon: AugmentedRealityIcon,
	  AwardIcon: AwardIcon,
	  AxeIcon: AxeIcon,
	  AxisXIcon: AxisXIcon,
	  AxisYIcon: AxisYIcon,
	  BabyCarriageIcon: BabyCarriageIcon,
	  BackhoeIcon: BackhoeIcon,
	  BackpackIcon: BackpackIcon,
	  BackspaceIcon: BackspaceIcon,
	  BadgeIcon: BadgeIcon,
	  BadgesIcon: BadgesIcon,
	  BallAmericanFootballIcon: BallAmericanFootballIcon,
	  BallBaseballIcon: BallBaseballIcon,
	  BallBasketballIcon: BallBasketballIcon,
	  BallBowlingIcon: BallBowlingIcon,
	  BallFootballOffIcon: BallFootballOffIcon,
	  BallFootballIcon: BallFootballIcon,
	  BallTennisIcon: BallTennisIcon,
	  BallVolleyballIcon: BallVolleyballIcon,
	  BallonIcon: BallonIcon,
	  BallpenOffIcon: BallpenOffIcon,
	  BallpenIcon: BallpenIcon,
	  BanIcon: BanIcon,
	  BandageIcon: BandageIcon,
	  BarbellOffIcon: BarbellOffIcon,
	  BarbellIcon: BarbellIcon,
	  BarcodeOffIcon: BarcodeOffIcon,
	  BarcodeIcon: BarcodeIcon,
	  BarrelIcon: BarrelIcon,
	  BarrierBlockOffIcon: BarrierBlockOffIcon,
	  BarrierBlockIcon: BarrierBlockIcon,
	  BaselineIcon: BaselineIcon,
	  BasketOffIcon: BasketOffIcon,
	  BasketIcon: BasketIcon,
	  BathIcon: BathIcon,
	  Battery1Icon: Battery1Icon,
	  Battery2Icon: Battery2Icon,
	  Battery3Icon: Battery3Icon,
	  Battery4Icon: Battery4Icon,
	  BatteryAutomotiveIcon: BatteryAutomotiveIcon,
	  BatteryCharging2Icon: BatteryCharging2Icon,
	  BatteryChargingIcon: BatteryChargingIcon,
	  BatteryEcoIcon: BatteryEcoIcon,
	  BatteryOffIcon: BatteryOffIcon,
	  BatteryIcon: BatteryIcon,
	  BeachOffIcon: BeachOffIcon,
	  BeachIcon: BeachIcon,
	  BedIcon: BedIcon,
	  BeerIcon: BeerIcon,
	  BellMinusIcon: BellMinusIcon,
	  BellOffIcon: BellOffIcon,
	  BellPlusIcon: BellPlusIcon,
	  BellRinging2Icon: BellRinging2Icon,
	  BellRingingIcon: BellRingingIcon,
	  BellSchoolIcon: BellSchoolIcon,
	  BellXIcon: BellXIcon,
	  BellZIcon: BellZIcon,
	  BellIcon: BellIcon,
	  BibleIcon: BibleIcon,
	  BikeOffIcon: BikeOffIcon,
	  BikeIcon: BikeIcon,
	  BinaryIcon: BinaryIcon,
	  BiohazardOffIcon: BiohazardOffIcon,
	  BiohazardIcon: BiohazardIcon,
	  BlockquoteIcon: BlockquoteIcon,
	  BluetoothConnectedIcon: BluetoothConnectedIcon,
	  BluetoothOffIcon: BluetoothOffIcon,
	  BluetoothXIcon: BluetoothXIcon,
	  BluetoothIcon: BluetoothIcon,
	  BlurIcon: BlurIcon,
	  BoldOffIcon: BoldOffIcon,
	  BoldIcon: BoldIcon,
	  BoltOffIcon: BoltOffIcon,
	  BoltIcon: BoltIcon,
	  BoneOffIcon: BoneOffIcon,
	  BoneIcon: BoneIcon,
	  Book2Icon: Book2Icon,
	  BookDownloadIcon: BookDownloadIcon,
	  BookOffIcon: BookOffIcon,
	  BookUploadIcon: BookUploadIcon,
	  BookIcon: BookIcon,
	  BookmarkOffIcon: BookmarkOffIcon,
	  BookmarkIcon: BookmarkIcon,
	  BookmarksOffIcon: BookmarksOffIcon,
	  BookmarksIcon: BookmarksIcon,
	  BooksOffIcon: BooksOffIcon,
	  BooksIcon: BooksIcon,
	  BorderAllIcon: BorderAllIcon,
	  BorderBottomIcon: BorderBottomIcon,
	  BorderHorizontalIcon: BorderHorizontalIcon,
	  BorderInnerIcon: BorderInnerIcon,
	  BorderLeftIcon: BorderLeftIcon,
	  BorderNoneIcon: BorderNoneIcon,
	  BorderOuterIcon: BorderOuterIcon,
	  BorderRadiusIcon: BorderRadiusIcon,
	  BorderRightIcon: BorderRightIcon,
	  BorderStyle2Icon: BorderStyle2Icon,
	  BorderStyleIcon: BorderStyleIcon,
	  BorderTopIcon: BorderTopIcon,
	  BorderVerticalIcon: BorderVerticalIcon,
	  BottleIcon: BottleIcon,
	  BowIcon: BowIcon,
	  BoxMarginIcon: BoxMarginIcon,
	  BoxModel2Icon: BoxModel2Icon,
	  BoxModelIcon: BoxModelIcon,
	  BoxMultiple0Icon: BoxMultiple0Icon,
	  BoxMultiple1Icon: BoxMultiple1Icon,
	  BoxMultiple2Icon: BoxMultiple2Icon,
	  BoxMultiple3Icon: BoxMultiple3Icon,
	  BoxMultiple4Icon: BoxMultiple4Icon,
	  BoxMultiple5Icon: BoxMultiple5Icon,
	  BoxMultiple6Icon: BoxMultiple6Icon,
	  BoxMultiple7Icon: BoxMultiple7Icon,
	  BoxMultiple8Icon: BoxMultiple8Icon,
	  BoxMultiple9Icon: BoxMultiple9Icon,
	  BoxMultipleIcon: BoxMultipleIcon,
	  BoxPaddingIcon: BoxPaddingIcon,
	  BoxIcon: BoxIcon,
	  BracesOffIcon: BracesOffIcon,
	  BracesIcon: BracesIcon,
	  BracketsOffIcon: BracketsOffIcon,
	  BracketsIcon: BracketsIcon,
	  BrandAdobeIcon: BrandAdobeIcon,
	  BrandAirbnbIcon: BrandAirbnbIcon,
	  BrandAirtableIcon: BrandAirtableIcon,
	  BrandAndroidIcon: BrandAndroidIcon,
	  BrandAngularIcon: BrandAngularIcon,
	  BrandAppleArcadeIcon: BrandAppleArcadeIcon,
	  BrandAppleIcon: BrandAppleIcon,
	  BrandAppstoreIcon: BrandAppstoreIcon,
	  BrandAsanaIcon: BrandAsanaIcon,
	  BrandBehanceIcon: BrandBehanceIcon,
	  BrandBingIcon: BrandBingIcon,
	  BrandBitbucketIcon: BrandBitbucketIcon,
	  BrandBookingIcon: BrandBookingIcon,
	  BrandBootstrapIcon: BrandBootstrapIcon,
	  BrandChromeIcon: BrandChromeIcon,
	  BrandCodepenIcon: BrandCodepenIcon,
	  BrandCodesandboxIcon: BrandCodesandboxIcon,
	  BrandCss3Icon: BrandCss3Icon,
	  BrandCucumberIcon: BrandCucumberIcon,
	  BrandDebianIcon: BrandDebianIcon,
	  BrandDeviantartIcon: BrandDeviantartIcon,
	  BrandDiscordIcon: BrandDiscordIcon,
	  BrandDisqusIcon: BrandDisqusIcon,
	  BrandDockerIcon: BrandDockerIcon,
	  BrandDoctrineIcon: BrandDoctrineIcon,
	  BrandDribbbleIcon: BrandDribbbleIcon,
	  BrandEdgeIcon: BrandEdgeIcon,
	  BrandFacebookIcon: BrandFacebookIcon,
	  BrandFigmaIcon: BrandFigmaIcon,
	  BrandFirebaseIcon: BrandFirebaseIcon,
	  BrandFirefoxIcon: BrandFirefoxIcon,
	  BrandFlickrIcon: BrandFlickrIcon,
	  BrandFoursquareIcon: BrandFoursquareIcon,
	  BrandFramerIcon: BrandFramerIcon,
	  BrandGitIcon: BrandGitIcon,
	  BrandGithubIcon: BrandGithubIcon,
	  BrandGitlabIcon: BrandGitlabIcon,
	  BrandGmailIcon: BrandGmailIcon,
	  BrandGoogleAnalyticsIcon: BrandGoogleAnalyticsIcon,
	  BrandGoogleDriveIcon: BrandGoogleDriveIcon,
	  BrandGooglePlayIcon: BrandGooglePlayIcon,
	  BrandGoogleIcon: BrandGoogleIcon,
	  BrandGravatarIcon: BrandGravatarIcon,
	  BrandHipchatIcon: BrandHipchatIcon,
	  BrandHtml5Icon: BrandHtml5Icon,
	  BrandInstagramIcon: BrandInstagramIcon,
	  BrandJavascriptIcon: BrandJavascriptIcon,
	  BrandKickstarterIcon: BrandKickstarterIcon,
	  BrandKotlinIcon: BrandKotlinIcon,
	  BrandLastfmIcon: BrandLastfmIcon,
	  BrandLinkedinIcon: BrandLinkedinIcon,
	  BrandLoomIcon: BrandLoomIcon,
	  BrandMastercardIcon: BrandMastercardIcon,
	  BrandMediumIcon: BrandMediumIcon,
	  BrandMercedesIcon: BrandMercedesIcon,
	  BrandMessengerIcon: BrandMessengerIcon,
	  BrandMetaIcon: BrandMetaIcon,
	  BrandNetbeansIcon: BrandNetbeansIcon,
	  BrandNetflixIcon: BrandNetflixIcon,
	  BrandNextjsIcon: BrandNextjsIcon,
	  BrandNotionIcon: BrandNotionIcon,
	  BrandNuxtIcon: BrandNuxtIcon,
	  BrandNytimesIcon: BrandNytimesIcon,
	  BrandOpenSourceIcon: BrandOpenSourceIcon,
	  BrandOperaIcon: BrandOperaIcon,
	  BrandPagekitIcon: BrandPagekitIcon,
	  BrandPatreonIcon: BrandPatreonIcon,
	  BrandPaypalIcon: BrandPaypalIcon,
	  BrandPhpIcon: BrandPhpIcon,
	  BrandPinterestIcon: BrandPinterestIcon,
	  BrandPocketIcon: BrandPocketIcon,
	  BrandProducthuntIcon: BrandProducthuntIcon,
	  BrandPythonIcon: BrandPythonIcon,
	  BrandReactNativeIcon: BrandReactNativeIcon,
	  BrandRedditIcon: BrandRedditIcon,
	  BrandSafariIcon: BrandSafariIcon,
	  BrandSassIcon: BrandSassIcon,
	  BrandSentryIcon: BrandSentryIcon,
	  BrandShazamIcon: BrandShazamIcon,
	  BrandSketchIcon: BrandSketchIcon,
	  BrandSkypeIcon: BrandSkypeIcon,
	  BrandSlackIcon: BrandSlackIcon,
	  BrandSnapchatIcon: BrandSnapchatIcon,
	  BrandSoundcloudIcon: BrandSoundcloudIcon,
	  BrandSpotifyIcon: BrandSpotifyIcon,
	  BrandStackoverflowIcon: BrandStackoverflowIcon,
	  BrandSteamIcon: BrandSteamIcon,
	  BrandStripeIcon: BrandStripeIcon,
	  BrandSublimeTextIcon: BrandSublimeTextIcon,
	  BrandSvelteIcon: BrandSvelteIcon,
	  BrandTablerIcon: BrandTablerIcon,
	  BrandTailwindIcon: BrandTailwindIcon,
	  BrandTelegramIcon: BrandTelegramIcon,
	  BrandTidalIcon: BrandTidalIcon,
	  BrandTiktokIcon: BrandTiktokIcon,
	  BrandTinderIcon: BrandTinderIcon,
	  BrandTripadvisorIcon: BrandTripadvisorIcon,
	  BrandTumblrIcon: BrandTumblrIcon,
	  BrandTwitchIcon: BrandTwitchIcon,
	  BrandTwitterIcon: BrandTwitterIcon,
	  BrandUberIcon: BrandUberIcon,
	  BrandUbuntuIcon: BrandUbuntuIcon,
	  BrandUnsplashIcon: BrandUnsplashIcon,
	  BrandVercelIcon: BrandVercelIcon,
	  BrandVimeoIcon: BrandVimeoIcon,
	  BrandVisualStudioIcon: BrandVisualStudioIcon,
	  BrandVkIcon: BrandVkIcon,
	  BrandVueIcon: BrandVueIcon,
	  BrandWhatsappIcon: BrandWhatsappIcon,
	  BrandWindowsIcon: BrandWindowsIcon,
	  BrandYahooIcon: BrandYahooIcon,
	  BrandYcombinatorIcon: BrandYcombinatorIcon,
	  BrandYoutubeIcon: BrandYoutubeIcon,
	  BreadIcon: BreadIcon,
	  BriefcaseIcon: BriefcaseIcon,
	  Brightness2Icon: Brightness2Icon,
	  BrightnessDownIcon: BrightnessDownIcon,
	  BrightnessHalfIcon: BrightnessHalfIcon,
	  BrightnessUpIcon: BrightnessUpIcon,
	  BrightnessIcon: BrightnessIcon,
	  BrowserCheckIcon: BrowserCheckIcon,
	  BrowserOffIcon: BrowserOffIcon,
	  BrowserPlusIcon: BrowserPlusIcon,
	  BrowserXIcon: BrowserXIcon,
	  BrowserIcon: BrowserIcon,
	  BrushOffIcon: BrushOffIcon,
	  BrushIcon: BrushIcon,
	  BucketIcon: BucketIcon,
	  BugOffIcon: BugOffIcon,
	  BugIcon: BugIcon,
	  BuildingArchIcon: BuildingArchIcon,
	  BuildingBankIcon: BuildingBankIcon,
	  BuildingBridge2Icon: BuildingBridge2Icon,
	  BuildingBridgeIcon: BuildingBridgeIcon,
	  BuildingCarouselIcon: BuildingCarouselIcon,
	  BuildingCastleIcon: BuildingCastleIcon,
	  BuildingChurchIcon: BuildingChurchIcon,
	  BuildingCommunityIcon: BuildingCommunityIcon,
	  BuildingCottageIcon: BuildingCottageIcon,
	  BuildingFactory2Icon: BuildingFactory2Icon,
	  BuildingFactoryIcon: BuildingFactoryIcon,
	  BuildingFortressIcon: BuildingFortressIcon,
	  BuildingHospitalIcon: BuildingHospitalIcon,
	  BuildingLighthouseIcon: BuildingLighthouseIcon,
	  BuildingMonumentIcon: BuildingMonumentIcon,
	  BuildingPavilonIcon: BuildingPavilonIcon,
	  BuildingSkyscraperIcon: BuildingSkyscraperIcon,
	  BuildingStoreIcon: BuildingStoreIcon,
	  BuildingWarehouseIcon: BuildingWarehouseIcon,
	  BuildingIcon: BuildingIcon,
	  BulbOffIcon: BulbOffIcon,
	  BulbIcon: BulbIcon,
	  BulldozerIcon: BulldozerIcon,
	  BusIcon: BusIcon,
	  BusinessplanIcon: BusinessplanIcon,
	  ButterflyIcon: ButterflyIcon,
	  CSharpIcon: CSharpIcon,
	  CakeIcon: CakeIcon,
	  CalculatorOffIcon: CalculatorOffIcon,
	  CalculatorIcon: CalculatorIcon,
	  CalendarEventIcon: CalendarEventIcon,
	  CalendarMinusIcon: CalendarMinusIcon,
	  CalendarOffIcon: CalendarOffIcon,
	  CalendarPlusIcon: CalendarPlusIcon,
	  CalendarStatsIcon: CalendarStatsIcon,
	  CalendarTimeIcon: CalendarTimeIcon,
	  CalendarIcon: CalendarIcon,
	  CameraMinusIcon: CameraMinusIcon,
	  CameraOffIcon: CameraOffIcon,
	  CameraPlusIcon: CameraPlusIcon,
	  CameraRotateIcon: CameraRotateIcon,
	  CameraSelfieIcon: CameraSelfieIcon,
	  CameraIcon: CameraIcon,
	  CandleIcon: CandleIcon,
	  CandyOffIcon: CandyOffIcon,
	  CandyIcon: CandyIcon,
	  CaptureOffIcon: CaptureOffIcon,
	  CaptureIcon: CaptureIcon,
	  CarCraneIcon: CarCraneIcon,
	  CarCrashIcon: CarCrashIcon,
	  CarOffIcon: CarOffIcon,
	  CarIcon: CarIcon,
	  CaravanIcon: CaravanIcon,
	  CardboardsOffIcon: CardboardsOffIcon,
	  CardboardsIcon: CardboardsIcon,
	  CaretDownIcon: CaretDownIcon,
	  CaretLeftIcon: CaretLeftIcon,
	  CaretRightIcon: CaretRightIcon,
	  CaretUpIcon: CaretUpIcon,
	  CashBanknoteOffIcon: CashBanknoteOffIcon,
	  CashBanknoteIcon: CashBanknoteIcon,
	  CashIcon: CashIcon,
	  CastOffIcon: CastOffIcon,
	  CastIcon: CastIcon,
	  CeOffIcon: CeOffIcon,
	  CeIcon: CeIcon,
	  CellSignal1Icon: CellSignal1Icon,
	  CellSignal2Icon: CellSignal2Icon,
	  CellSignal3Icon: CellSignal3Icon,
	  CellSignal4Icon: CellSignal4Icon,
	  CellSignal5Icon: CellSignal5Icon,
	  CellSignalOffIcon: CellSignalOffIcon,
	  CellIcon: CellIcon,
	  Certificate2OffIcon: Certificate2OffIcon,
	  Certificate2Icon: Certificate2Icon,
	  CertificateOffIcon: CertificateOffIcon,
	  CertificateIcon: CertificateIcon,
	  ChargingPileIcon: ChargingPileIcon,
	  ChartArcs3Icon: ChartArcs3Icon,
	  ChartArcsIcon: ChartArcsIcon,
	  ChartAreaLineIcon: ChartAreaLineIcon,
	  ChartAreaIcon: ChartAreaIcon,
	  ChartArrowsVerticalIcon: ChartArrowsVerticalIcon,
	  ChartArrowsIcon: ChartArrowsIcon,
	  ChartBarIcon: ChartBarIcon,
	  ChartBubbleIcon: ChartBubbleIcon,
	  ChartCandleIcon: ChartCandleIcon,
	  ChartCirclesIcon: ChartCirclesIcon,
	  ChartDonut2Icon: ChartDonut2Icon,
	  ChartDonut3Icon: ChartDonut3Icon,
	  ChartDonut4Icon: ChartDonut4Icon,
	  ChartDonutIcon: ChartDonutIcon,
	  ChartDots2Icon: ChartDots2Icon,
	  ChartDots3Icon: ChartDots3Icon,
	  ChartDotsIcon: ChartDotsIcon,
	  ChartInfographicIcon: ChartInfographicIcon,
	  ChartLineIcon: ChartLineIcon,
	  ChartPie2Icon: ChartPie2Icon,
	  ChartPie3Icon: ChartPie3Icon,
	  ChartPie4Icon: ChartPie4Icon,
	  ChartPieIcon: ChartPieIcon,
	  ChartRadarIcon: ChartRadarIcon,
	  CheckIcon: CheckIcon,
	  CheckboxIcon: CheckboxIcon,
	  ChecklistIcon: ChecklistIcon,
	  ChecksIcon: ChecksIcon,
	  CheckupListIcon: CheckupListIcon,
	  CheeseIcon: CheeseIcon,
	  ChevronDownLeftIcon: ChevronDownLeftIcon,
	  ChevronDownRightIcon: ChevronDownRightIcon,
	  ChevronDownIcon: ChevronDownIcon,
	  ChevronLeftIcon: ChevronLeftIcon,
	  ChevronRightIcon: ChevronRightIcon,
	  ChevronUpLeftIcon: ChevronUpLeftIcon,
	  ChevronUpRightIcon: ChevronUpRightIcon,
	  ChevronUpIcon: ChevronUpIcon,
	  ChevronsDownLeftIcon: ChevronsDownLeftIcon,
	  ChevronsDownRightIcon: ChevronsDownRightIcon,
	  ChevronsDownIcon: ChevronsDownIcon,
	  ChevronsLeftIcon: ChevronsLeftIcon,
	  ChevronsRightIcon: ChevronsRightIcon,
	  ChevronsUpLeftIcon: ChevronsUpLeftIcon,
	  ChevronsUpRightIcon: ChevronsUpRightIcon,
	  ChevronsUpIcon: ChevronsUpIcon,
	  ChristmasTreeIcon: ChristmasTreeIcon,
	  Circle0Icon: Circle0Icon,
	  Circle1Icon: Circle1Icon,
	  Circle2Icon: Circle2Icon,
	  Circle3Icon: Circle3Icon,
	  Circle4Icon: Circle4Icon,
	  Circle5Icon: Circle5Icon,
	  Circle6Icon: Circle6Icon,
	  Circle7Icon: Circle7Icon,
	  Circle8Icon: Circle8Icon,
	  Circle9Icon: Circle9Icon,
	  CircleCheckIcon: CircleCheckIcon,
	  CircleDashedIcon: CircleDashedIcon,
	  CircleDotIcon: CircleDotIcon,
	  CircleDottedIcon: CircleDottedIcon,
	  CircleHalf2Icon: CircleHalf2Icon,
	  CircleHalfVerticalIcon: CircleHalfVerticalIcon,
	  CircleHalfIcon: CircleHalfIcon,
	  CircleMinusIcon: CircleMinusIcon,
	  CircleOffIcon: CircleOffIcon,
	  CirclePlusIcon: CirclePlusIcon,
	  CircleRectangleOffIcon: CircleRectangleOffIcon,
	  CircleRectangleIcon: CircleRectangleIcon,
	  CircleSquareIcon: CircleSquareIcon,
	  CircleTriangleIcon: CircleTriangleIcon,
	  CircleXIcon: CircleXIcon,
	  CircleIcon: CircleIcon,
	  CirclesIcon: CirclesIcon,
	  ClearAllIcon: ClearAllIcon,
	  ClearFormattingIcon: ClearFormattingIcon,
	  ClickIcon: ClickIcon,
	  ClipboardCheckIcon: ClipboardCheckIcon,
	  ClipboardListIcon: ClipboardListIcon,
	  ClipboardOffIcon: ClipboardOffIcon,
	  ClipboardPlusIcon: ClipboardPlusIcon,
	  ClipboardTextIcon: ClipboardTextIcon,
	  ClipboardXIcon: ClipboardXIcon,
	  ClipboardIcon: ClipboardIcon,
	  Clock2Icon: Clock2Icon,
	  ClockOffIcon: ClockOffIcon,
	  ClockIcon: ClockIcon,
	  CloudDownloadIcon: CloudDownloadIcon,
	  CloudFogIcon: CloudFogIcon,
	  CloudLockOpenIcon: CloudLockOpenIcon,
	  CloudLockIcon: CloudLockIcon,
	  CloudOffIcon: CloudOffIcon,
	  CloudRainIcon: CloudRainIcon,
	  CloudSnowIcon: CloudSnowIcon,
	  CloudStormIcon: CloudStormIcon,
	  CloudUploadIcon: CloudUploadIcon,
	  CloudIcon: CloudIcon,
	  ClubsIcon: ClubsIcon,
	  CodeMinusIcon: CodeMinusIcon,
	  CodeOffIcon: CodeOffIcon,
	  CodePlusIcon: CodePlusIcon,
	  CodeIcon: CodeIcon,
	  CoffeeIcon: CoffeeIcon,
	  CoinOffIcon: CoinOffIcon,
	  CoinIcon: CoinIcon,
	  ColorPickerOffIcon: ColorPickerOffIcon,
	  ColorPickerIcon: ColorPickerIcon,
	  ColorSwatchOffIcon: ColorSwatchOffIcon,
	  ColorSwatchIcon: ColorSwatchIcon,
	  ColumnInsertLeftIcon: ColumnInsertLeftIcon,
	  ColumnInsertRightIcon: ColumnInsertRightIcon,
	  ColumnsOffIcon: ColumnsOffIcon,
	  ColumnsIcon: ColumnsIcon,
	  CometIcon: CometIcon,
	  CommandIcon: CommandIcon,
	  CompassOffIcon: CompassOffIcon,
	  CompassIcon: CompassIcon,
	  ComponentsOffIcon: ComponentsOffIcon,
	  ComponentsIcon: ComponentsIcon,
	  Cone2Icon: Cone2Icon,
	  ConeIcon: ConeIcon,
	  ConfettiIcon: ConfettiIcon,
	  ContainerIcon: ContainerIcon,
	  Contrast2Icon: Contrast2Icon,
	  ContrastIcon: ContrastIcon,
	  CookieOffIcon: CookieOffIcon,
	  CookieIcon: CookieIcon,
	  CopyOffIcon: CopyOffIcon,
	  CopyIcon: CopyIcon,
	  CopyleftOffIcon: CopyleftOffIcon,
	  CopyleftIcon: CopyleftIcon,
	  CopyrightOffIcon: CopyrightOffIcon,
	  CopyrightIcon: CopyrightIcon,
	  CornerDownLeftDoubleIcon: CornerDownLeftDoubleIcon,
	  CornerDownLeftIcon: CornerDownLeftIcon,
	  CornerDownRightDoubleIcon: CornerDownRightDoubleIcon,
	  CornerDownRightIcon: CornerDownRightIcon,
	  CornerLeftDownDoubleIcon: CornerLeftDownDoubleIcon,
	  CornerLeftDownIcon: CornerLeftDownIcon,
	  CornerLeftUpDoubleIcon: CornerLeftUpDoubleIcon,
	  CornerLeftUpIcon: CornerLeftUpIcon,
	  CornerRightDownDoubleIcon: CornerRightDownDoubleIcon,
	  CornerRightDownIcon: CornerRightDownIcon,
	  CornerRightUpDoubleIcon: CornerRightUpDoubleIcon,
	  CornerRightUpIcon: CornerRightUpIcon,
	  CornerUpLeftDoubleIcon: CornerUpLeftDoubleIcon,
	  CornerUpLeftIcon: CornerUpLeftIcon,
	  CornerUpRightDoubleIcon: CornerUpRightDoubleIcon,
	  CornerUpRightIcon: CornerUpRightIcon,
	  Cpu2Icon: Cpu2Icon,
	  CpuIcon: CpuIcon,
	  CraneIcon: CraneIcon,
	  CreativeCommonsIcon: CreativeCommonsIcon,
	  CreditCardOffIcon: CreditCardOffIcon,
	  CreditCardIcon: CreditCardIcon,
	  CricketIcon: CricketIcon,
	  CropIcon: CropIcon,
	  CrossIcon: CrossIcon,
	  CrosshairIcon: CrosshairIcon,
	  CrownOffIcon: CrownOffIcon,
	  CrownIcon: CrownIcon,
	  CrutchesIcon: CrutchesIcon,
	  CupIcon: CupIcon,
	  CurlingIcon: CurlingIcon,
	  CurlyLoopIcon: CurlyLoopIcon,
	  CurrencyBahrainiIcon: CurrencyBahrainiIcon,
	  CurrencyBahtIcon: CurrencyBahtIcon,
	  CurrencyBitcoinIcon: CurrencyBitcoinIcon,
	  CurrencyCentIcon: CurrencyCentIcon,
	  CurrencyDinarIcon: CurrencyDinarIcon,
	  CurrencyDirhamIcon: CurrencyDirhamIcon,
	  CurrencyDogecoinIcon: CurrencyDogecoinIcon,
	  CurrencyDollarAustralianIcon: CurrencyDollarAustralianIcon,
	  CurrencyDollarCanadianIcon: CurrencyDollarCanadianIcon,
	  CurrencyDollarSingaporeIcon: CurrencyDollarSingaporeIcon,
	  CurrencyDollarIcon: CurrencyDollarIcon,
	  CurrencyEthereumIcon: CurrencyEthereumIcon,
	  CurrencyEuroIcon: CurrencyEuroIcon,
	  CurrencyForintIcon: CurrencyForintIcon,
	  CurrencyFrankIcon: CurrencyFrankIcon,
	  CurrencyKroneCzechIcon: CurrencyKroneCzechIcon,
	  CurrencyKroneDanishIcon: CurrencyKroneDanishIcon,
	  CurrencyKroneSwedishIcon: CurrencyKroneSwedishIcon,
	  CurrencyLeuIcon: CurrencyLeuIcon,
	  CurrencyLiraIcon: CurrencyLiraIcon,
	  CurrencyLitecoinIcon: CurrencyLitecoinIcon,
	  CurrencyNairaIcon: CurrencyNairaIcon,
	  CurrencyPoundIcon: CurrencyPoundIcon,
	  CurrencyRealIcon: CurrencyRealIcon,
	  CurrencyRenminbiIcon: CurrencyRenminbiIcon,
	  CurrencyRippleIcon: CurrencyRippleIcon,
	  CurrencyRiyalIcon: CurrencyRiyalIcon,
	  CurrencyRubelIcon: CurrencyRubelIcon,
	  CurrencyRupeeIcon: CurrencyRupeeIcon,
	  CurrencyShekelIcon: CurrencyShekelIcon,
	  CurrencyTakaIcon: CurrencyTakaIcon,
	  CurrencyTugrikIcon: CurrencyTugrikIcon,
	  CurrencyWonIcon: CurrencyWonIcon,
	  CurrencyYenIcon: CurrencyYenIcon,
	  CurrencyZlotyIcon: CurrencyZlotyIcon,
	  CurrencyIcon: CurrencyIcon,
	  CurrentLocationIcon: CurrentLocationIcon,
	  CursorTextIcon: CursorTextIcon,
	  CutIcon: CutIcon,
	  DashboardIcon: DashboardIcon,
	  DatabaseExportIcon: DatabaseExportIcon,
	  DatabaseImportIcon: DatabaseImportIcon,
	  DatabaseOffIcon: DatabaseOffIcon,
	  DatabaseIcon: DatabaseIcon,
	  DentalIcon: DentalIcon,
	  DetailsIcon: DetailsIcon,
	  DeviceAnalyticsIcon: DeviceAnalyticsIcon,
	  DeviceAudioTapeIcon: DeviceAudioTapeIcon,
	  DeviceCctvIcon: DeviceCctvIcon,
	  DeviceComputerCameraOffIcon: DeviceComputerCameraOffIcon,
	  DeviceComputerCameraIcon: DeviceComputerCameraIcon,
	  DeviceDesktopAnalyticsIcon: DeviceDesktopAnalyticsIcon,
	  DeviceDesktopOffIcon: DeviceDesktopOffIcon,
	  DeviceDesktopIcon: DeviceDesktopIcon,
	  DeviceFloppyIcon: DeviceFloppyIcon,
	  DeviceGamepadIcon: DeviceGamepadIcon,
	  DeviceHeartMonitorIcon: DeviceHeartMonitorIcon,
	  DeviceLaptopOffIcon: DeviceLaptopOffIcon,
	  DeviceLaptopIcon: DeviceLaptopIcon,
	  DeviceMobileMessageIcon: DeviceMobileMessageIcon,
	  DeviceMobileOffIcon: DeviceMobileOffIcon,
	  DeviceMobileRotatedIcon: DeviceMobileRotatedIcon,
	  DeviceMobileVibrationIcon: DeviceMobileVibrationIcon,
	  DeviceMobileIcon: DeviceMobileIcon,
	  DeviceNintendoIcon: DeviceNintendoIcon,
	  DeviceSpeakerIcon: DeviceSpeakerIcon,
	  DeviceTabletOffIcon: DeviceTabletOffIcon,
	  DeviceTabletIcon: DeviceTabletIcon,
	  DeviceTvOffIcon: DeviceTvOffIcon,
	  DeviceTvIcon: DeviceTvIcon,
	  DeviceWatchOffIcon: DeviceWatchOffIcon,
	  DeviceWatchStats2Icon: DeviceWatchStats2Icon,
	  DeviceWatchStatsIcon: DeviceWatchStatsIcon,
	  DeviceWatchIcon: DeviceWatchIcon,
	  Devices2Icon: Devices2Icon,
	  DevicesOffIcon: DevicesOffIcon,
	  DevicesPcIcon: DevicesPcIcon,
	  DevicesIcon: DevicesIcon,
	  DialpadIcon: DialpadIcon,
	  DiamondIcon: DiamondIcon,
	  DiamondsIcon: DiamondsIcon,
	  Dice1Icon: Dice1Icon,
	  Dice2Icon: Dice2Icon,
	  Dice3Icon: Dice3Icon,
	  Dice4Icon: Dice4Icon,
	  Dice5Icon: Dice5Icon,
	  Dice6Icon: Dice6Icon,
	  DiceIcon: DiceIcon,
	  DimensionsIcon: DimensionsIcon,
	  DirectionHorizontalIcon: DirectionHorizontalIcon,
	  DirectionIcon: DirectionIcon,
	  DirectionsIcon: DirectionsIcon,
	  Disabled2Icon: Disabled2Icon,
	  DisabledIcon: DisabledIcon,
	  DiscIcon: DiscIcon,
	  Discount2Icon: Discount2Icon,
	  DiscountIcon: DiscountIcon,
	  DivideIcon: DivideIcon,
	  Dna2Icon: Dna2Icon,
	  DnaIcon: DnaIcon,
	  DogBowlIcon: DogBowlIcon,
	  DoorEnterIcon: DoorEnterIcon,
	  DoorExitIcon: DoorExitIcon,
	  DoorIcon: DoorIcon,
	  DotsCircleHorizontalIcon: DotsCircleHorizontalIcon,
	  DotsDiagonal2Icon: DotsDiagonal2Icon,
	  DotsDiagonalIcon: DotsDiagonalIcon,
	  DotsVerticalIcon: DotsVerticalIcon,
	  DotsIcon: DotsIcon,
	  DownloadIcon: DownloadIcon,
	  DragDrop2Icon: DragDrop2Icon,
	  DragDropIcon: DragDropIcon,
	  DroneOffIcon: DroneOffIcon,
	  DroneIcon: DroneIcon,
	  DropCircleIcon: DropCircleIcon,
	  DropletFilled2Icon: DropletFilled2Icon,
	  DropletFilledIcon: DropletFilledIcon,
	  DropletHalf2Icon: DropletHalf2Icon,
	  DropletHalfIcon: DropletHalfIcon,
	  DropletOffIcon: DropletOffIcon,
	  DropletIcon: DropletIcon,
	  EarOffIcon: EarOffIcon,
	  EarIcon: EarIcon,
	  EditCircleIcon: EditCircleIcon,
	  EditIcon: EditIcon,
	  EggIcon: EggIcon,
	  ElevatorIcon: ElevatorIcon,
	  EmergencyBedIcon: EmergencyBedIcon,
	  EmphasisIcon: EmphasisIcon,
	  EngineIcon: EngineIcon,
	  EqualNotIcon: EqualNotIcon,
	  EqualIcon: EqualIcon,
	  EraserIcon: EraserIcon,
	  Error404Icon: Error404Icon,
	  ExchangeIcon: ExchangeIcon,
	  ExclamationMarkIcon: ExclamationMarkIcon,
	  ExposureIcon: ExposureIcon,
	  ExternalLinkIcon: ExternalLinkIcon,
	  EyeCheckIcon: EyeCheckIcon,
	  EyeOffIcon: EyeOffIcon,
	  EyeTableIcon: EyeTableIcon,
	  EyeIcon: EyeIcon,
	  Eyeglass2Icon: Eyeglass2Icon,
	  EyeglassIcon: EyeglassIcon,
	  FaceIdErrorIcon: FaceIdErrorIcon,
	  FaceIdIcon: FaceIdIcon,
	  FaceMaskIcon: FaceMaskIcon,
	  FallIcon: FallIcon,
	  FeatherIcon: FeatherIcon,
	  FenceIcon: FenceIcon,
	  FidgetSpinnerIcon: FidgetSpinnerIcon,
	  File3dIcon: File3dIcon,
	  FileAlertIcon: FileAlertIcon,
	  FileAnalyticsIcon: FileAnalyticsIcon,
	  FileArrowLeftIcon: FileArrowLeftIcon,
	  FileArrowRightIcon: FileArrowRightIcon,
	  FileBarcodeIcon: FileBarcodeIcon,
	  FileCertificateIcon: FileCertificateIcon,
	  FileChartIcon: FileChartIcon,
	  FileCheckIcon: FileCheckIcon,
	  FileCode2Icon: FileCode2Icon,
	  FileCodeIcon: FileCodeIcon,
	  FileDatabaseIcon: FileDatabaseIcon,
	  FileDescriptionIcon: FileDescriptionIcon,
	  FileDiffIcon: FileDiffIcon,
	  FileDigitIcon: FileDigitIcon,
	  FileDislikeIcon: FileDislikeIcon,
	  FileDollarIcon: FileDollarIcon,
	  FileDotsIcon: FileDotsIcon,
	  FileDownloadIcon: FileDownloadIcon,
	  FileEuroIcon: FileEuroIcon,
	  FileExportIcon: FileExportIcon,
	  FileHorizontalIcon: FileHorizontalIcon,
	  FileImportIcon: FileImportIcon,
	  FileInfoIcon: FileInfoIcon,
	  FileInvoiceIcon: FileInvoiceIcon,
	  FileLikeIcon: FileLikeIcon,
	  FileMinusIcon: FileMinusIcon,
	  FileMusicIcon: FileMusicIcon,
	  FileOffIcon: FileOffIcon,
	  FilePencilIcon: FilePencilIcon,
	  FilePhoneIcon: FilePhoneIcon,
	  FilePlusIcon: FilePlusIcon,
	  FilePowerIcon: FilePowerIcon,
	  FileReportIcon: FileReportIcon,
	  FileRssIcon: FileRssIcon,
	  FileScissorsIcon: FileScissorsIcon,
	  FileSearchIcon: FileSearchIcon,
	  FileSettingsIcon: FileSettingsIcon,
	  FileShredderIcon: FileShredderIcon,
	  FileSignalIcon: FileSignalIcon,
	  FileSpreadsheetIcon: FileSpreadsheetIcon,
	  FileStarIcon: FileStarIcon,
	  FileSymlinkIcon: FileSymlinkIcon,
	  FileTextIcon: FileTextIcon,
	  FileTimeIcon: FileTimeIcon,
	  FileTypographyIcon: FileTypographyIcon,
	  FileUnknownIcon: FileUnknownIcon,
	  FileUploadIcon: FileUploadIcon,
	  FileVectorIcon: FileVectorIcon,
	  FileXIcon: FileXIcon,
	  FileZipIcon: FileZipIcon,
	  FileIcon: FileIcon,
	  FilesOffIcon: FilesOffIcon,
	  FilesIcon: FilesIcon,
	  FilterOffIcon: FilterOffIcon,
	  FilterIcon: FilterIcon,
	  FingerprintIcon: FingerprintIcon,
	  FiretruckIcon: FiretruckIcon,
	  FirstAidKitIcon: FirstAidKitIcon,
	  FishIcon: FishIcon,
	  Flag2Icon: Flag2Icon,
	  Flag3Icon: Flag3Icon,
	  FlagIcon: FlagIcon,
	  FlameIcon: FlameIcon,
	  FlareIcon: FlareIcon,
	  Flask2Icon: Flask2Icon,
	  FlaskIcon: FlaskIcon,
	  FlipHorizontalIcon: FlipHorizontalIcon,
	  FlipVerticalIcon: FlipVerticalIcon,
	  FloatCenterIcon: FloatCenterIcon,
	  FloatLeftIcon: FloatLeftIcon,
	  FloatNoneIcon: FloatNoneIcon,
	  FloatRightIcon: FloatRightIcon,
	  FlowerIcon: FlowerIcon,
	  Focus2Icon: Focus2Icon,
	  FocusCenteredIcon: FocusCenteredIcon,
	  FocusIcon: FocusIcon,
	  FoldDownIcon: FoldDownIcon,
	  FoldUpIcon: FoldUpIcon,
	  FoldIcon: FoldIcon,
	  FolderMinusIcon: FolderMinusIcon,
	  FolderOffIcon: FolderOffIcon,
	  FolderPlusIcon: FolderPlusIcon,
	  FolderXIcon: FolderXIcon,
	  FolderIcon: FolderIcon,
	  FoldersIcon: FoldersIcon,
	  Forbid2Icon: Forbid2Icon,
	  ForbidIcon: ForbidIcon,
	  ForkliftIcon: ForkliftIcon,
	  FormsIcon: FormsIcon,
	  FountainIcon: FountainIcon,
	  FrameIcon: FrameIcon,
	  FreeRightsIcon: FreeRightsIcon,
	  FriendsIcon: FriendsIcon,
	  GasStationIcon: GasStationIcon,
	  GaugeIcon: GaugeIcon,
	  GavelIcon: GavelIcon,
	  GenderAgenderIcon: GenderAgenderIcon,
	  GenderAndrogyneIcon: GenderAndrogyneIcon,
	  GenderBigenderIcon: GenderBigenderIcon,
	  GenderDemiboyIcon: GenderDemiboyIcon,
	  GenderDemigirlIcon: GenderDemigirlIcon,
	  GenderEpiceneIcon: GenderEpiceneIcon,
	  GenderFemaleIcon: GenderFemaleIcon,
	  GenderFemmeIcon: GenderFemmeIcon,
	  GenderGenderfluidIcon: GenderGenderfluidIcon,
	  GenderGenderlessIcon: GenderGenderlessIcon,
	  GenderGenderqueerIcon: GenderGenderqueerIcon,
	  GenderHermaphroditeIcon: GenderHermaphroditeIcon,
	  GenderIntergenderIcon: GenderIntergenderIcon,
	  GenderMaleIcon: GenderMaleIcon,
	  GenderNeutroisIcon: GenderNeutroisIcon,
	  GenderThirdIcon: GenderThirdIcon,
	  GenderTransgenderIcon: GenderTransgenderIcon,
	  GenderTrasvestiIcon: GenderTrasvestiIcon,
	  GeometryIcon: GeometryIcon,
	  GhostIcon: GhostIcon,
	  GiftIcon: GiftIcon,
	  GitBranchIcon: GitBranchIcon,
	  GitCommitIcon: GitCommitIcon,
	  GitCompareIcon: GitCompareIcon,
	  GitForkIcon: GitForkIcon,
	  GitMergeIcon: GitMergeIcon,
	  GitPullRequestClosedIcon: GitPullRequestClosedIcon,
	  GitPullRequestDraftIcon: GitPullRequestDraftIcon,
	  GitPullRequestIcon: GitPullRequestIcon,
	  GizmoIcon: GizmoIcon,
	  GlassFullIcon: GlassFullIcon,
	  GlassOffIcon: GlassOffIcon,
	  GlassIcon: GlassIcon,
	  GlobeIcon: GlobeIcon,
	  GolfIcon: GolfIcon,
	  GpsIcon: GpsIcon,
	  GrainIcon: GrainIcon,
	  GridDotsIcon: GridDotsIcon,
	  GridPatternIcon: GridPatternIcon,
	  GrillIcon: GrillIcon,
	  GripHorizontalIcon: GripHorizontalIcon,
	  GripVerticalIcon: GripVerticalIcon,
	  GrowthIcon: GrowthIcon,
	  H1Icon: H1Icon,
	  H2Icon: H2Icon,
	  H3Icon: H3Icon,
	  H4Icon: H4Icon,
	  H5Icon: H5Icon,
	  H6Icon: H6Icon,
	  HammerIcon: HammerIcon,
	  HandClickIcon: HandClickIcon,
	  HandFingerIcon: HandFingerIcon,
	  HandGrabIcon: HandGrabIcon,
	  HandLittleFingerIcon: HandLittleFingerIcon,
	  HandMiddleFingerIcon: HandMiddleFingerIcon,
	  HandMoveIcon: HandMoveIcon,
	  HandOffIcon: HandOffIcon,
	  HandRingFingerIcon: HandRingFingerIcon,
	  HandRockIcon: HandRockIcon,
	  HandStopIcon: HandStopIcon,
	  HandThreeFingersIcon: HandThreeFingersIcon,
	  HandTwoFingersIcon: HandTwoFingersIcon,
	  Hanger2Icon: Hanger2Icon,
	  HangerIcon: HangerIcon,
	  HashIcon: HashIcon,
	  HazeIcon: HazeIcon,
	  HeadingIcon: HeadingIcon,
	  HeadphonesOffIcon: HeadphonesOffIcon,
	  HeadphonesIcon: HeadphonesIcon,
	  HeadsetIcon: HeadsetIcon,
	  HeartBrokenIcon: HeartBrokenIcon,
	  HeartHandshakeIcon: HeartHandshakeIcon,
	  HeartRateMonitorIcon: HeartRateMonitorIcon,
	  HeartIcon: HeartIcon,
	  HeartbeatIcon: HeartbeatIcon,
	  HelicopterLandingIcon: HelicopterLandingIcon,
	  HelicopterIcon: HelicopterIcon,
	  HelmetIcon: HelmetIcon,
	  HelpIcon: HelpIcon,
	  HexagonOffIcon: HexagonOffIcon,
	  HexagonIcon: HexagonIcon,
	  HexagonsIcon: HexagonsIcon,
	  Hierarchy2Icon: Hierarchy2Icon,
	  HierarchyIcon: HierarchyIcon,
	  HighlightIcon: HighlightIcon,
	  HistoryIcon: HistoryIcon,
	  Home2Icon: Home2Icon,
	  HomeIcon: HomeIcon,
	  HotelServiceIcon: HotelServiceIcon,
	  HourglassHighIcon: HourglassHighIcon,
	  HourglassLowIcon: HourglassLowIcon,
	  HourglassIcon: HourglassIcon,
	  IceCream2Icon: IceCream2Icon,
	  IceCreamIcon: IceCreamIcon,
	  IceSkatingIcon: IceSkatingIcon,
	  IdBadge2Icon: IdBadge2Icon,
	  IdBadgeIcon: IdBadgeIcon,
	  IdIcon: IdIcon,
	  InboxIcon: InboxIcon,
	  IndentDecreaseIcon: IndentDecreaseIcon,
	  IndentIncreaseIcon: IndentIncreaseIcon,
	  InfinityIcon: InfinityIcon,
	  InfoCircleIcon: InfoCircleIcon,
	  InfoSquareIcon: InfoSquareIcon,
	  ItalicIcon: ItalicIcon,
	  JumpRopeIcon: JumpRopeIcon,
	  KarateIcon: KarateIcon,
	  KeringIcon: KeringIcon,
	  KeyIcon: KeyIcon,
	  KeyboardHideIcon: KeyboardHideIcon,
	  KeyboardOffIcon: KeyboardOffIcon,
	  KeyboardShowIcon: KeyboardShowIcon,
	  KeyboardIcon: KeyboardIcon,
	  LadderIcon: LadderIcon,
	  Lamp2Icon: Lamp2Icon,
	  LampIcon: LampIcon,
	  LanguageHiraganaIcon: LanguageHiraganaIcon,
	  LanguageKatakanaIcon: LanguageKatakanaIcon,
	  LanguageIcon: LanguageIcon,
	  LassoIcon: LassoIcon,
	  LayersDifferenceIcon: LayersDifferenceIcon,
	  LayersIntersect2Icon: LayersIntersect2Icon,
	  LayersIntersectIcon: LayersIntersectIcon,
	  LayersLinkedIcon: LayersLinkedIcon,
	  LayersSubtractIcon: LayersSubtractIcon,
	  LayersUnionIcon: LayersUnionIcon,
	  Layout2Icon: Layout2Icon,
	  LayoutAlignBottomIcon: LayoutAlignBottomIcon,
	  LayoutAlignCenterIcon: LayoutAlignCenterIcon,
	  LayoutAlignLeftIcon: LayoutAlignLeftIcon,
	  LayoutAlignMiddleIcon: LayoutAlignMiddleIcon,
	  LayoutAlignRightIcon: LayoutAlignRightIcon,
	  LayoutAlignTopIcon: LayoutAlignTopIcon,
	  LayoutBoardSplitIcon: LayoutBoardSplitIcon,
	  LayoutBoardIcon: LayoutBoardIcon,
	  LayoutBottombarIcon: LayoutBottombarIcon,
	  LayoutCardsIcon: LayoutCardsIcon,
	  LayoutColumnsIcon: LayoutColumnsIcon,
	  LayoutDashboardIcon: LayoutDashboardIcon,
	  LayoutDistributeHorizontalIcon: LayoutDistributeHorizontalIcon,
	  LayoutDistributeVerticalIcon: LayoutDistributeVerticalIcon,
	  LayoutGridAddIcon: LayoutGridAddIcon,
	  LayoutGridIcon: LayoutGridIcon,
	  LayoutKanbanIcon: LayoutKanbanIcon,
	  LayoutListIcon: LayoutListIcon,
	  LayoutNavbarIcon: LayoutNavbarIcon,
	  LayoutRowsIcon: LayoutRowsIcon,
	  LayoutSidebarLeftCollapseIcon: LayoutSidebarLeftCollapseIcon,
	  LayoutSidebarLeftExpandIcon: LayoutSidebarLeftExpandIcon,
	  LayoutSidebarRightCollapseIcon: LayoutSidebarRightCollapseIcon,
	  LayoutSidebarRightExpandIcon: LayoutSidebarRightExpandIcon,
	  LayoutSidebarRightIcon: LayoutSidebarRightIcon,
	  LayoutSidebarIcon: LayoutSidebarIcon,
	  LayoutIcon: LayoutIcon,
	  LeafIcon: LeafIcon,
	  LegoIcon: LegoIcon,
	  Lemon2Icon: Lemon2Icon,
	  LemonIcon: LemonIcon,
	  LetterAIcon: LetterAIcon,
	  LetterBIcon: LetterBIcon,
	  LetterCIcon: LetterCIcon,
	  LetterCaseLowerIcon: LetterCaseLowerIcon,
	  LetterCaseToggleIcon: LetterCaseToggleIcon,
	  LetterCaseUpperIcon: LetterCaseUpperIcon,
	  LetterCaseIcon: LetterCaseIcon,
	  LetterDIcon: LetterDIcon,
	  LetterEIcon: LetterEIcon,
	  LetterFIcon: LetterFIcon,
	  LetterGIcon: LetterGIcon,
	  LetterHIcon: LetterHIcon,
	  LetterIIcon: LetterIIcon,
	  LetterJIcon: LetterJIcon,
	  LetterKIcon: LetterKIcon,
	  LetterLIcon: LetterLIcon,
	  LetterMIcon: LetterMIcon,
	  LetterNIcon: LetterNIcon,
	  LetterOIcon: LetterOIcon,
	  LetterPIcon: LetterPIcon,
	  LetterQIcon: LetterQIcon,
	  LetterRIcon: LetterRIcon,
	  LetterSIcon: LetterSIcon,
	  LetterSpacingIcon: LetterSpacingIcon,
	  LetterTIcon: LetterTIcon,
	  LetterUIcon: LetterUIcon,
	  LetterVIcon: LetterVIcon,
	  LetterWIcon: LetterWIcon,
	  LetterXIcon: LetterXIcon,
	  LetterYIcon: LetterYIcon,
	  LetterZIcon: LetterZIcon,
	  LicenseIcon: LicenseIcon,
	  LifebuoyIcon: LifebuoyIcon,
	  LineDashedIcon: LineDashedIcon,
	  LineDottedIcon: LineDottedIcon,
	  LineHeightIcon: LineHeightIcon,
	  LineIcon: LineIcon,
	  LinkIcon: LinkIcon,
	  ListCheckIcon: ListCheckIcon,
	  ListDetailsIcon: ListDetailsIcon,
	  ListNumbersIcon: ListNumbersIcon,
	  ListSearchIcon: ListSearchIcon,
	  ListIcon: ListIcon,
	  LivePhotoIcon: LivePhotoIcon,
	  LiveViewIcon: LiveViewIcon,
	  LoaderQuarterIcon: LoaderQuarterIcon,
	  LoaderIcon: LoaderIcon,
	  LocationIcon: LocationIcon,
	  LockAccessIcon: LockAccessIcon,
	  LockOffIcon: LockOffIcon,
	  LockOpenIcon: LockOpenIcon,
	  LockSquareIcon: LockSquareIcon,
	  LockIcon: LockIcon,
	  LoginIcon: LoginIcon,
	  LogoutIcon: LogoutIcon,
	  LollipopIcon: LollipopIcon,
	  LuggageIcon: LuggageIcon,
	  LungsIcon: LungsIcon,
	  MacroIcon: MacroIcon,
	  MagnetIcon: MagnetIcon,
	  MailFastIcon: MailFastIcon,
	  MailForwardIcon: MailForwardIcon,
	  MailOpenedIcon: MailOpenedIcon,
	  MailIcon: MailIcon,
	  MailboxIcon: MailboxIcon,
	  ManIcon: ManIcon,
	  ManualGearboxIcon: ManualGearboxIcon,
	  Map2Icon: Map2Icon,
	  MapPinOffIcon: MapPinOffIcon,
	  MapPinIcon: MapPinIcon,
	  MapPinsIcon: MapPinsIcon,
	  MapSearchIcon: MapSearchIcon,
	  MapIcon: MapIcon,
	  MarkdownIcon: MarkdownIcon,
	  Marquee2Icon: Marquee2Icon,
	  MarqueeIcon: MarqueeIcon,
	  MarsIcon: MarsIcon,
	  MaskOffIcon: MaskOffIcon,
	  MaskIcon: MaskIcon,
	  MassageIcon: MassageIcon,
	  MathAvgIcon: MathAvgIcon,
	  MathFunctionIcon: MathFunctionIcon,
	  MathMaxIcon: MathMaxIcon,
	  MathMinIcon: MathMinIcon,
	  MathSymbolsIcon: MathSymbolsIcon,
	  MathIcon: MathIcon,
	  MaximizeIcon: MaximizeIcon,
	  MeatIcon: MeatIcon,
	  Medal2Icon: Medal2Icon,
	  MedalIcon: MedalIcon,
	  MedicalCrossIcon: MedicalCrossIcon,
	  MedicineSyrupIcon: MedicineSyrupIcon,
	  Menu2Icon: Menu2Icon,
	  MenuIcon: MenuIcon,
	  Message2CodeIcon: Message2CodeIcon,
	  Message2ShareIcon: Message2ShareIcon,
	  Message2Icon: Message2Icon,
	  MessageCircle2Icon: MessageCircle2Icon,
	  MessageCircleOffIcon: MessageCircleOffIcon,
	  MessageCircleIcon: MessageCircleIcon,
	  MessageCodeIcon: MessageCodeIcon,
	  MessageDotsIcon: MessageDotsIcon,
	  MessageLanguageIcon: MessageLanguageIcon,
	  MessageOffIcon: MessageOffIcon,
	  MessagePlusIcon: MessagePlusIcon,
	  MessageReportIcon: MessageReportIcon,
	  MessageShareIcon: MessageShareIcon,
	  MessageIcon: MessageIcon,
	  MessagesOffIcon: MessagesOffIcon,
	  MessagesIcon: MessagesIcon,
	  Microphone2Icon: Microphone2Icon,
	  MicrophoneOffIcon: MicrophoneOffIcon,
	  MicrophoneIcon: MicrophoneIcon,
	  MicroscopeIcon: MicroscopeIcon,
	  MilitaryAwardIcon: MilitaryAwardIcon,
	  MilitaryRankIcon: MilitaryRankIcon,
	  MilkIcon: MilkIcon,
	  MinimizeIcon: MinimizeIcon,
	  MinusVerticalIcon: MinusVerticalIcon,
	  MinusIcon: MinusIcon,
	  MistIcon: MistIcon,
	  MoodBoyIcon: MoodBoyIcon,
	  MoodConfuzedIcon: MoodConfuzedIcon,
	  MoodCrazyHappyIcon: MoodCrazyHappyIcon,
	  MoodCryIcon: MoodCryIcon,
	  MoodEmptyIcon: MoodEmptyIcon,
	  MoodHappyIcon: MoodHappyIcon,
	  MoodKidIcon: MoodKidIcon,
	  MoodNervousIcon: MoodNervousIcon,
	  MoodNeutralIcon: MoodNeutralIcon,
	  MoodSadIcon: MoodSadIcon,
	  MoodSmileIcon: MoodSmileIcon,
	  MoodSuprisedIcon: MoodSuprisedIcon,
	  MoodTongueIcon: MoodTongueIcon,
	  Moon2Icon: Moon2Icon,
	  MoonStarsIcon: MoonStarsIcon,
	  MoonIcon: MoonIcon,
	  MopedIcon: MopedIcon,
	  MotorbikeIcon: MotorbikeIcon,
	  MountainIcon: MountainIcon,
	  MouseIcon: MouseIcon,
	  MovieIcon: MovieIcon,
	  MugIcon: MugIcon,
	  Multiplier05xIcon: Multiplier05xIcon,
	  Multiplier15xIcon: Multiplier15xIcon,
	  Multiplier1xIcon: Multiplier1xIcon,
	  Multiplier2xIcon: Multiplier2xIcon,
	  MushroomIcon: MushroomIcon,
	  MusicIcon: MusicIcon,
	  NetworkIcon: NetworkIcon,
	  NewSectionIcon: NewSectionIcon,
	  NewsIcon: NewsIcon,
	  NfcIcon: NfcIcon,
	  NoCopyrightIcon: NoCopyrightIcon,
	  NoCreativeCommonsIcon: NoCreativeCommonsIcon,
	  NoDerivativesIcon: NoDerivativesIcon,
	  NorthStarIcon: NorthStarIcon,
	  NoteIcon: NoteIcon,
	  NotebookIcon: NotebookIcon,
	  NotesIcon: NotesIcon,
	  NotificationIcon: NotificationIcon,
	  Number0Icon: Number0Icon,
	  Number1Icon: Number1Icon,
	  Number2Icon: Number2Icon,
	  Number3Icon: Number3Icon,
	  Number4Icon: Number4Icon,
	  Number5Icon: Number5Icon,
	  Number6Icon: Number6Icon,
	  Number7Icon: Number7Icon,
	  Number8Icon: Number8Icon,
	  Number9Icon: Number9Icon,
	  NumbersIcon: NumbersIcon,
	  NurseIcon: NurseIcon,
	  OctagonOffIcon: OctagonOffIcon,
	  OctagonIcon: OctagonIcon,
	  OldIcon: OldIcon,
	  OlympicsIcon: OlympicsIcon,
	  OmegaIcon: OmegaIcon,
	  OutletIcon: OutletIcon,
	  OvalVerticalIcon: OvalVerticalIcon,
	  OvalIcon: OvalIcon,
	  OverlineIcon: OverlineIcon,
	  PackageIcon: PackageIcon,
	  PackgeExportIcon: PackgeExportIcon,
	  PackgeImportIcon: PackgeImportIcon,
	  PacmanIcon: PacmanIcon,
	  PageBreakIcon: PageBreakIcon,
	  PaintIcon: PaintIcon,
	  PaletteIcon: PaletteIcon,
	  PanoramaHorizontalIcon: PanoramaHorizontalIcon,
	  PanoramaVerticalIcon: PanoramaVerticalIcon,
	  PaperBagIcon: PaperBagIcon,
	  PaperclipIcon: PaperclipIcon,
	  ParachuteIcon: ParachuteIcon,
	  ParenthesesIcon: ParenthesesIcon,
	  ParkingIcon: ParkingIcon,
	  PawIcon: PawIcon,
	  PeaceIcon: PeaceIcon,
	  PencilIcon: PencilIcon,
	  Pennant2Icon: Pennant2Icon,
	  PennantIcon: PennantIcon,
	  PentagonIcon: PentagonIcon,
	  PepperIcon: PepperIcon,
	  PercentageIcon: PercentageIcon,
	  PerspectiveIcon: PerspectiveIcon,
	  PhoneCallIcon: PhoneCallIcon,
	  PhoneCallingIcon: PhoneCallingIcon,
	  PhoneCheckIcon: PhoneCheckIcon,
	  PhoneIncomingIcon: PhoneIncomingIcon,
	  PhoneOffIcon: PhoneOffIcon,
	  PhoneOutgoingIcon: PhoneOutgoingIcon,
	  PhonePauseIcon: PhonePauseIcon,
	  PhonePlusIcon: PhonePlusIcon,
	  PhoneXIcon: PhoneXIcon,
	  PhoneIcon: PhoneIcon,
	  PhotoOffIcon: PhotoOffIcon,
	  PhotoIcon: PhotoIcon,
	  PhysotherapistIcon: PhysotherapistIcon,
	  PictureInPictureOffIcon: PictureInPictureOffIcon,
	  PictureInPictureOnIcon: PictureInPictureOnIcon,
	  PictureInPictureTopIcon: PictureInPictureTopIcon,
	  PictureInPictureIcon: PictureInPictureIcon,
	  PigIcon: PigIcon,
	  PillIcon: PillIcon,
	  PillsIcon: PillsIcon,
	  PinIcon: PinIcon,
	  PinnedOffIcon: PinnedOffIcon,
	  PinnedIcon: PinnedIcon,
	  PizzaIcon: PizzaIcon,
	  PlaneArrivalIcon: PlaneArrivalIcon,
	  PlaneDepartureIcon: PlaneDepartureIcon,
	  PlaneInflightIcon: PlaneInflightIcon,
	  PlaneIcon: PlaneIcon,
	  PlanetIcon: PlanetIcon,
	  Plant2Icon: Plant2Icon,
	  PlantIcon: PlantIcon,
	  PlayCardIcon: PlayCardIcon,
	  PlayerEjectIcon: PlayerEjectIcon,
	  PlayerPauseIcon: PlayerPauseIcon,
	  PlayerPlayIcon: PlayerPlayIcon,
	  PlayerRecordIcon: PlayerRecordIcon,
	  PlayerSkipBackIcon: PlayerSkipBackIcon,
	  PlayerSkipForwardIcon: PlayerSkipForwardIcon,
	  PlayerStopIcon: PlayerStopIcon,
	  PlayerTrackNextIcon: PlayerTrackNextIcon,
	  PlayerTrackPrevIcon: PlayerTrackPrevIcon,
	  PlaylistAddIcon: PlaylistAddIcon,
	  PlaylistXIcon: PlaylistXIcon,
	  PlaylistIcon: PlaylistIcon,
	  PlugConnectedXIcon: PlugConnectedXIcon,
	  PlugConnectedIcon: PlugConnectedIcon,
	  PlugXIcon: PlugXIcon,
	  PlugIcon: PlugIcon,
	  PlusIcon: PlusIcon,
	  PointIcon: PointIcon,
	  PokeballIcon: PokeballIcon,
	  PolaroidIcon: PolaroidIcon,
	  PolygonIcon: PolygonIcon,
	  PoolIcon: PoolIcon,
	  PowerIcon: PowerIcon,
	  PrayIcon: PrayIcon,
	  PremiumRightsIcon: PremiumRightsIcon,
	  PrescriptionIcon: PrescriptionIcon,
	  PresentationAnalyticsIcon: PresentationAnalyticsIcon,
	  PresentationIcon: PresentationIcon,
	  PrinterIcon: PrinterIcon,
	  PrisonIcon: PrisonIcon,
	  PromptIcon: PromptIcon,
	  PropellerIcon: PropellerIcon,
	  Puzzle2Icon: Puzzle2Icon,
	  PuzzleIcon: PuzzleIcon,
	  PyramidIcon: PyramidIcon,
	  QrcodeIcon: QrcodeIcon,
	  QuestionMarkIcon: QuestionMarkIcon,
	  QuoteIcon: QuoteIcon,
	  Radar2Icon: Radar2Icon,
	  RadarIcon: RadarIcon,
	  RadioIcon: RadioIcon,
	  RadioactiveIcon: RadioactiveIcon,
	  RadiusBottomLeftIcon: RadiusBottomLeftIcon,
	  RadiusBottomRightIcon: RadiusBottomRightIcon,
	  RadiusTopLeftIcon: RadiusTopLeftIcon,
	  RadiusTopRightIcon: RadiusTopRightIcon,
	  RainbowIcon: RainbowIcon,
	  Receipt2Icon: Receipt2Icon,
	  ReceiptOffIcon: ReceiptOffIcon,
	  ReceiptRefundIcon: ReceiptRefundIcon,
	  ReceiptTaxIcon: ReceiptTaxIcon,
	  ReceiptIcon: ReceiptIcon,
	  RechargingIcon: RechargingIcon,
	  RecordMailIcon: RecordMailIcon,
	  RectangleVerticalIcon: RectangleVerticalIcon,
	  RectangleIcon: RectangleIcon,
	  RecycleIcon: RecycleIcon,
	  RefreshAlertIcon: RefreshAlertIcon,
	  RefreshDotIcon: RefreshDotIcon,
	  RefreshIcon: RefreshIcon,
	  RegisteredIcon: RegisteredIcon,
	  RelationManyToManyIcon: RelationManyToManyIcon,
	  RelationOneToManyIcon: RelationOneToManyIcon,
	  RelationOneToOneIcon: RelationOneToOneIcon,
	  RepeatOnceIcon: RepeatOnceIcon,
	  RepeatIcon: RepeatIcon,
	  ReplaceIcon: ReplaceIcon,
	  ReportAnalyticsIcon: ReportAnalyticsIcon,
	  ReportMedicalIcon: ReportMedicalIcon,
	  ReportMoneyIcon: ReportMoneyIcon,
	  ReportSearchIcon: ReportSearchIcon,
	  ReportIcon: ReportIcon,
	  ResizeIcon: ResizeIcon,
	  RippleIcon: RippleIcon,
	  RoadSignIcon: RoadSignIcon,
	  RoadIcon: RoadIcon,
	  RobotIcon: RobotIcon,
	  RocketIcon: RocketIcon,
	  RollerSkatingIcon: RollerSkatingIcon,
	  RollercoasterIcon: RollercoasterIcon,
	  Rotate2Icon: Rotate2Icon,
	  Rotate360Icon: Rotate360Icon,
	  RotateClockwise2Icon: RotateClockwise2Icon,
	  RotateClockwiseIcon: RotateClockwiseIcon,
	  RotateDotIcon: RotateDotIcon,
	  RotateRectangleIcon: RotateRectangleIcon,
	  RotateIcon: RotateIcon,
	  RouteIcon: RouteIcon,
	  RouterIcon: RouterIcon,
	  RowInsertBottomIcon: RowInsertBottomIcon,
	  RowInsertTopIcon: RowInsertTopIcon,
	  RssIcon: RssIcon,
	  Ruler2Icon: Ruler2Icon,
	  RulerIcon: RulerIcon,
	  RunIcon: RunIcon,
	  SailboatIcon: SailboatIcon,
	  SaltIcon: SaltIcon,
	  SatelliteIcon: SatelliteIcon,
	  SausageIcon: SausageIcon,
	  ScaleOutlineIcon: ScaleOutlineIcon,
	  ScaleIcon: ScaleIcon,
	  ScanIcon: ScanIcon,
	  SchoolIcon: SchoolIcon,
	  ScissorsIcon: ScissorsIcon,
	  ScooterElectricIcon: ScooterElectricIcon,
	  ScooterIcon: ScooterIcon,
	  ScreenShareOffIcon: ScreenShareOffIcon,
	  ScreenShareIcon: ScreenShareIcon,
	  ScribbleIcon: ScribbleIcon,
	  ScubaMaskIcon: ScubaMaskIcon,
	  SearchIcon: SearchIcon,
	  SectionSignIcon: SectionSignIcon,
	  SectionIcon: SectionIcon,
	  SeedingIcon: SeedingIcon,
	  SelectIcon: SelectIcon,
	  SelectorIcon: SelectorIcon,
	  SendIcon: SendIcon,
	  SeparatorHorizontalIcon: SeparatorHorizontalIcon,
	  SeparatorVerticalIcon: SeparatorVerticalIcon,
	  SeparatorIcon: SeparatorIcon,
	  Server2Icon: Server2Icon,
	  ServerIcon: ServerIcon,
	  ServicemarkIcon: ServicemarkIcon,
	  SettingsAutomationIcon: SettingsAutomationIcon,
	  SettingsIcon: SettingsIcon,
	  ShadowOffIcon: ShadowOffIcon,
	  ShadowIcon: ShadowIcon,
	  Shape2Icon: Shape2Icon,
	  Shape3Icon: Shape3Icon,
	  ShapeIcon: ShapeIcon,
	  ShareIcon: ShareIcon,
	  ShieldCheckIcon: ShieldCheckIcon,
	  ShieldCheckeredIcon: ShieldCheckeredIcon,
	  ShieldChevronIcon: ShieldChevronIcon,
	  ShieldLockIcon: ShieldLockIcon,
	  ShieldOffIcon: ShieldOffIcon,
	  ShieldXIcon: ShieldXIcon,
	  ShieldIcon: ShieldIcon,
	  ShipIcon: ShipIcon,
	  ShirtIcon: ShirtIcon,
	  ShoeIcon: ShoeIcon,
	  ShoppingCartDiscountIcon: ShoppingCartDiscountIcon,
	  ShoppingCartOffIcon: ShoppingCartOffIcon,
	  ShoppingCartPlusIcon: ShoppingCartPlusIcon,
	  ShoppingCartXIcon: ShoppingCartXIcon,
	  ShoppingCartIcon: ShoppingCartIcon,
	  ShredderIcon: ShredderIcon,
	  SignLeftIcon: SignLeftIcon,
	  SignRightIcon: SignRightIcon,
	  SignatureIcon: SignatureIcon,
	  SitemapIcon: SitemapIcon,
	  SkateboardIcon: SkateboardIcon,
	  SleighIcon: SleighIcon,
	  SliceIcon: SliceIcon,
	  SlideshowIcon: SlideshowIcon,
	  SmartHomeIcon: SmartHomeIcon,
	  SmokingNoIcon: SmokingNoIcon,
	  SmokingIcon: SmokingIcon,
	  SnowflakeIcon: SnowflakeIcon,
	  SoccerFieldIcon: SoccerFieldIcon,
	  SocialIcon: SocialIcon,
	  SockIcon: SockIcon,
	  SofaIcon: SofaIcon,
	  SortAscending2Icon: SortAscending2Icon,
	  SortAscendingLettersIcon: SortAscendingLettersIcon,
	  SortAscendingNumbersIcon: SortAscendingNumbersIcon,
	  SortAscendingIcon: SortAscendingIcon,
	  SortDescending2Icon: SortDescending2Icon,
	  SortDescendingLettersIcon: SortDescendingLettersIcon,
	  SortDescendingNumbersIcon: SortDescendingNumbersIcon,
	  SortDescendingIcon: SortDescendingIcon,
	  SoupIcon: SoupIcon,
	  SpaceIcon: SpaceIcon,
	  SpacingHorizontalIcon: SpacingHorizontalIcon,
	  SpacingVerticalIcon: SpacingVerticalIcon,
	  SpadeIcon: SpadeIcon,
	  SpeakerphoneIcon: SpeakerphoneIcon,
	  SpeedboatIcon: SpeedboatIcon,
	  SportBillardIcon: SportBillardIcon,
	  Square0Icon: Square0Icon,
	  Square1Icon: Square1Icon,
	  Square2Icon: Square2Icon,
	  Square3Icon: Square3Icon,
	  Square4Icon: Square4Icon,
	  Square5Icon: Square5Icon,
	  Square6Icon: Square6Icon,
	  Square7Icon: Square7Icon,
	  Square8Icon: Square8Icon,
	  Square9Icon: Square9Icon,
	  SquareAsteriskIcon: SquareAsteriskIcon,
	  SquareCheckIcon: SquareCheckIcon,
	  SquareDotIcon: SquareDotIcon,
	  SquareForbid2Icon: SquareForbid2Icon,
	  SquareForbidIcon: SquareForbidIcon,
	  SquareHalfIcon: SquareHalfIcon,
	  SquareMinusIcon: SquareMinusIcon,
	  SquareOffIcon: SquareOffIcon,
	  SquarePlusIcon: SquarePlusIcon,
	  SquareRoot2Icon: SquareRoot2Icon,
	  SquareRootIcon: SquareRootIcon,
	  SquareRotatedForbid2Icon: SquareRotatedForbid2Icon,
	  SquareRotatedForbidIcon: SquareRotatedForbidIcon,
	  SquareRotatedOffIcon: SquareRotatedOffIcon,
	  SquareRotatedIcon: SquareRotatedIcon,
	  SquareToggleHorizontalIcon: SquareToggleHorizontalIcon,
	  SquareToggleIcon: SquareToggleIcon,
	  SquareXIcon: SquareXIcon,
	  SquareIcon: SquareIcon,
	  SquaresDiagonalIcon: SquaresDiagonalIcon,
	  SquaresFilledIcon: SquaresFilledIcon,
	  Stack2Icon: Stack2Icon,
	  Stack3Icon: Stack3Icon,
	  StackIcon: StackIcon,
	  StairsDownIcon: StairsDownIcon,
	  StairsUpIcon: StairsUpIcon,
	  StairsIcon: StairsIcon,
	  StarHalfIcon: StarHalfIcon,
	  StarOffIcon: StarOffIcon,
	  StarIcon: StarIcon,
	  StarsIcon: StarsIcon,
	  SteeringWheelIcon: SteeringWheelIcon,
	  StepIntoIcon: StepIntoIcon,
	  StepOutIcon: StepOutIcon,
	  StethoscopeIcon: StethoscopeIcon,
	  StickerIcon: StickerIcon,
	  StrikethroughIcon: StrikethroughIcon,
	  SubmarineIcon: SubmarineIcon,
	  SubscriptIcon: SubscriptIcon,
	  SubtaskIcon: SubtaskIcon,
	  SumIcon: SumIcon,
	  SunOffIcon: SunOffIcon,
	  SunIcon: SunIcon,
	  SunriseIcon: SunriseIcon,
	  SunsetIcon: SunsetIcon,
	  SuperscriptIcon: SuperscriptIcon,
	  SwimmingIcon: SwimmingIcon,
	  Switch2Icon: Switch2Icon,
	  Switch3Icon: Switch3Icon,
	  SwitchHorizontalIcon: SwitchHorizontalIcon,
	  SwitchVerticalIcon: SwitchVerticalIcon,
	  SwitchIcon: SwitchIcon,
	  SwordIcon: SwordIcon,
	  TableExportIcon: TableExportIcon,
	  TableImportIcon: TableImportIcon,
	  TableOffIcon: TableOffIcon,
	  TableIcon: TableIcon,
	  TagOffIcon: TagOffIcon,
	  TagIcon: TagIcon,
	  TagsOffIcon: TagsOffIcon,
	  TagsIcon: TagsIcon,
	  Tallymark1Icon: Tallymark1Icon,
	  Tallymark2Icon: Tallymark2Icon,
	  Tallymark3Icon: Tallymark3Icon,
	  Tallymark4Icon: Tallymark4Icon,
	  TallymarksIcon: TallymarksIcon,
	  TankIcon: TankIcon,
	  TargetIcon: TargetIcon,
	  TelescopeIcon: TelescopeIcon,
	  TemperatureCelsiusIcon: TemperatureCelsiusIcon,
	  TemperatureFahrenheitIcon: TemperatureFahrenheitIcon,
	  TemperatureMinusIcon: TemperatureMinusIcon,
	  TemperaturePlusIcon: TemperaturePlusIcon,
	  TemperatureIcon: TemperatureIcon,
	  TemplateIcon: TemplateIcon,
	  TentIcon: TentIcon,
	  Terminal2Icon: Terminal2Icon,
	  TerminalIcon: TerminalIcon,
	  TestPipe2Icon: TestPipe2Icon,
	  TestPipeIcon: TestPipeIcon,
	  TextDirectionLtrIcon: TextDirectionLtrIcon,
	  TextDirectionRtlIcon: TextDirectionRtlIcon,
	  TextResizeIcon: TextResizeIcon,
	  TextWrapDisabledIcon: TextWrapDisabledIcon,
	  TextWrapIcon: TextWrapIcon,
	  ThermometerIcon: ThermometerIcon,
	  ThumbDownIcon: ThumbDownIcon,
	  ThumbUpIcon: ThumbUpIcon,
	  TicketIcon: TicketIcon,
	  TieIcon: TieIcon,
	  TiltShiftIcon: TiltShiftIcon,
	  TimelineIcon: TimelineIcon,
	  TirIcon: TirIcon,
	  ToggleLeftIcon: ToggleLeftIcon,
	  ToggleRightIcon: ToggleRightIcon,
	  ToiletPaperIcon: ToiletPaperIcon,
	  ToolIcon: ToolIcon,
	  ToolsKitchen2Icon: ToolsKitchen2Icon,
	  ToolsKitchenIcon: ToolsKitchenIcon,
	  ToolsIcon: ToolsIcon,
	  TornadoIcon: TornadoIcon,
	  TournamentIcon: TournamentIcon,
	  TrackIcon: TrackIcon,
	  TractorIcon: TractorIcon,
	  TrademarkIcon: TrademarkIcon,
	  TrafficConeIcon: TrafficConeIcon,
	  TrafficLightsIcon: TrafficLightsIcon,
	  TrainIcon: TrainIcon,
	  TransferInIcon: TransferInIcon,
	  TransferOutIcon: TransferOutIcon,
	  TrashOffIcon: TrashOffIcon,
	  TrashXIcon: TrashXIcon,
	  TrashIcon: TrashIcon,
	  TreeIcon: TreeIcon,
	  TreesIcon: TreesIcon,
	  TrendingDown2Icon: TrendingDown2Icon,
	  TrendingDown3Icon: TrendingDown3Icon,
	  TrendingDownIcon: TrendingDownIcon,
	  TrendingUp2Icon: TrendingUp2Icon,
	  TrendingUp3Icon: TrendingUp3Icon,
	  TrendingUpIcon: TrendingUpIcon,
	  TriangleInvertedIcon: TriangleInvertedIcon,
	  TriangleOffIcon: TriangleOffIcon,
	  TriangleSquareCircleIcon: TriangleSquareCircleIcon,
	  TriangleIcon: TriangleIcon,
	  TrianglesIcon: TrianglesIcon,
	  TridentIcon: TridentIcon,
	  TrophyIcon: TrophyIcon,
	  TruckDeliveryIcon: TruckDeliveryIcon,
	  TruckOffIcon: TruckOffIcon,
	  TruckReturnIcon: TruckReturnIcon,
	  TruckIcon: TruckIcon,
	  TypographyIcon: TypographyIcon,
	  UmbrellaIcon: UmbrellaIcon,
	  UnderlineIcon: UnderlineIcon,
	  UnlinkIcon: UnlinkIcon,
	  UploadIcon: UploadIcon,
	  UrgentIcon: UrgentIcon,
	  UsbIcon: UsbIcon,
	  UserCheckIcon: UserCheckIcon,
	  UserCircleIcon: UserCircleIcon,
	  UserExclamationIcon: UserExclamationIcon,
	  UserMinusIcon: UserMinusIcon,
	  UserOffIcon: UserOffIcon,
	  UserPlusIcon: UserPlusIcon,
	  UserSearchIcon: UserSearchIcon,
	  UserXIcon: UserXIcon,
	  UserIcon: UserIcon,
	  UsersIcon: UsersIcon,
	  VaccineBottleIcon: VaccineBottleIcon,
	  VaccineIcon: VaccineIcon,
	  VariableIcon: VariableIcon,
	  VectorBeizer2Icon: VectorBeizer2Icon,
	  VectorBezierIcon: VectorBezierIcon,
	  VectorTriangleIcon: VectorTriangleIcon,
	  VectorIcon: VectorIcon,
	  VenusIcon: VenusIcon,
	  VersionsIcon: VersionsIcon,
	  VideoMinusIcon: VideoMinusIcon,
	  VideoOffIcon: VideoOffIcon,
	  VideoPlusIcon: VideoPlusIcon,
	  VideoIcon: VideoIcon,
	  View360Icon: View360Icon,
	  ViewfinderIcon: ViewfinderIcon,
	  ViewportNarrowIcon: ViewportNarrowIcon,
	  ViewportWideIcon: ViewportWideIcon,
	  VinylIcon: VinylIcon,
	  VirusOffIcon: VirusOffIcon,
	  VirusSearchIcon: VirusSearchIcon,
	  VirusIcon: VirusIcon,
	  VocabularyIcon: VocabularyIcon,
	  Volume2Icon: Volume2Icon,
	  Volume3Icon: Volume3Icon,
	  VolumeIcon: VolumeIcon,
	  WalkIcon: WalkIcon,
	  WallIcon: WallIcon,
	  WalletIcon: WalletIcon,
	  WallpaperIcon: WallpaperIcon,
	  WandIcon: WandIcon,
	  WaveSawToolIcon: WaveSawToolIcon,
	  WaveSineIcon: WaveSineIcon,
	  WaveSquareIcon: WaveSquareIcon,
	  WebhookIcon: WebhookIcon,
	  Wifi0Icon: Wifi0Icon,
	  Wifi1Icon: Wifi1Icon,
	  Wifi2Icon: Wifi2Icon,
	  WifiOffIcon: WifiOffIcon,
	  WifiIcon: WifiIcon,
	  WindIcon: WindIcon,
	  WindmillIcon: WindmillIcon,
	  WindowIcon: WindowIcon,
	  WindsockIcon: WindsockIcon,
	  WiperWashIcon: WiperWashIcon,
	  WiperIcon: WiperIcon,
	  WomanIcon: WomanIcon,
	  WorldDownloadIcon: WorldDownloadIcon,
	  WorldLatitudeIcon: WorldLatitudeIcon,
	  WorldLongitudeIcon: WorldLongitudeIcon,
	  WorldUploadIcon: WorldUploadIcon,
	  WorldIcon: WorldIcon,
	  WreckingBallIcon: WreckingBallIcon,
	  WritingSignIcon: WritingSignIcon,
	  WritingIcon: WritingIcon,
	  XIcon: XIcon,
	  YinYangIcon: YinYangIcon,
	  YogaIcon: YogaIcon,
	  ZodiacAquariusIcon: ZodiacAquariusIcon,
	  ZodiacAriesIcon: ZodiacAriesIcon,
	  ZodiacCancerIcon: ZodiacCancerIcon,
	  ZodiacCapricornIcon: ZodiacCapricornIcon,
	  ZodiacGeminiIcon: ZodiacGeminiIcon,
	  ZodiacLeoIcon: ZodiacLeoIcon,
	  ZodiacLibraIcon: ZodiacLibraIcon,
	  ZodiacPiscesIcon: ZodiacPiscesIcon,
	  ZodiacSagittariusIcon: ZodiacSagittariusIcon,
	  ZodiacScorpioIcon: ZodiacScorpioIcon,
	  ZodiacTaurusIcon: ZodiacTaurusIcon,
	  ZodiacVirgoIcon: ZodiacVirgoIcon,
	  ZoomCancelIcon: ZoomCancelIcon,
	  ZoomCheckIcon: ZoomCheckIcon,
	  ZoomCodeIcon: ZoomCodeIcon,
	  ZoomExclamationIcon: ZoomExclamationIcon,
	  ZoomInIcon: ZoomInIcon,
	  ZoomMoneyIcon: ZoomMoneyIcon,
	  ZoomOutIcon: ZoomOutIcon,
	  ZoomQuestionIcon: ZoomQuestionIcon
	});

	var index = {
	  install(Vue) {
	    Object.entries(components).forEach(([name, component]) => Vue.component(name, component));
	  }

	};

	exports.ABIcon = ABIcon;
	exports.ABOffIcon = ABOffIcon;
	exports.AbacusIcon = AbacusIcon;
	exports.AccessPointIcon = AccessPointIcon;
	exports.AccessPointOffIcon = AccessPointOffIcon;
	exports.AccessibleIcon = AccessibleIcon;
	exports.AccessibleOffIcon = AccessibleOffIcon;
	exports.ActivityHeartbeatIcon = ActivityHeartbeatIcon;
	exports.ActivityIcon = ActivityIcon;
	exports.Ad2Icon = Ad2Icon;
	exports.AdIcon = AdIcon;
	exports.AddressBookIcon = AddressBookIcon;
	exports.AdjustmentsAltIcon = AdjustmentsAltIcon;
	exports.AdjustmentsHorizontalIcon = AdjustmentsHorizontalIcon;
	exports.AdjustmentsIcon = AdjustmentsIcon;
	exports.AdjustmentsOffIcon = AdjustmentsOffIcon;
	exports.AerialLiftIcon = AerialLiftIcon;
	exports.AffiliateIcon = AffiliateIcon;
	exports.AlarmIcon = AlarmIcon;
	exports.AlarmOffIcon = AlarmOffIcon;
	exports.AlbumIcon = AlbumIcon;
	exports.AlertCircleIcon = AlertCircleIcon;
	exports.AlertOctagonIcon = AlertOctagonIcon;
	exports.AlertTriangleIcon = AlertTriangleIcon;
	exports.AlienIcon = AlienIcon;
	exports.AlignCenterIcon = AlignCenterIcon;
	exports.AlignJustifiedIcon = AlignJustifiedIcon;
	exports.AlignLeftIcon = AlignLeftIcon;
	exports.AlignRightIcon = AlignRightIcon;
	exports.AmbulanceIcon = AmbulanceIcon;
	exports.AnchorIcon = AnchorIcon;
	exports.AngleIcon = AngleIcon;
	exports.AntennaBars1Icon = AntennaBars1Icon;
	exports.AntennaBars2Icon = AntennaBars2Icon;
	exports.AntennaBars3Icon = AntennaBars3Icon;
	exports.AntennaBars4Icon = AntennaBars4Icon;
	exports.AntennaBars5Icon = AntennaBars5Icon;
	exports.AntennaBarsOffIcon = AntennaBarsOffIcon;
	exports.AntennaIcon = AntennaIcon;
	exports.ApertureIcon = ApertureIcon;
	exports.ApiAppIcon = ApiAppIcon;
	exports.ApiAppOffIcon = ApiAppOffIcon;
	exports.ApiIcon = ApiIcon;
	exports.AppWindowIcon = AppWindowIcon;
	exports.AppleIcon = AppleIcon;
	exports.AppsIcon = AppsIcon;
	exports.AppsOffIcon = AppsOffIcon;
	exports.ArchiveIcon = ArchiveIcon;
	exports.ArchiveOffIcon = ArchiveOffIcon;
	exports.Armchair2Icon = Armchair2Icon;
	exports.ArmchairIcon = ArmchairIcon;
	exports.ArrowAutofitContentIcon = ArrowAutofitContentIcon;
	exports.ArrowAutofitDownIcon = ArrowAutofitDownIcon;
	exports.ArrowAutofitHeightIcon = ArrowAutofitHeightIcon;
	exports.ArrowAutofitLeftIcon = ArrowAutofitLeftIcon;
	exports.ArrowAutofitRightIcon = ArrowAutofitRightIcon;
	exports.ArrowAutofitUpIcon = ArrowAutofitUpIcon;
	exports.ArrowAutofitWidthIcon = ArrowAutofitWidthIcon;
	exports.ArrowBackIcon = ArrowBackIcon;
	exports.ArrowBackUpIcon = ArrowBackUpIcon;
	exports.ArrowBarDownIcon = ArrowBarDownIcon;
	exports.ArrowBarLeftIcon = ArrowBarLeftIcon;
	exports.ArrowBarRightIcon = ArrowBarRightIcon;
	exports.ArrowBarToDownIcon = ArrowBarToDownIcon;
	exports.ArrowBarToLeftIcon = ArrowBarToLeftIcon;
	exports.ArrowBarToRightIcon = ArrowBarToRightIcon;
	exports.ArrowBarToUpIcon = ArrowBarToUpIcon;
	exports.ArrowBarUpIcon = ArrowBarUpIcon;
	exports.ArrowBearLeft2Icon = ArrowBearLeft2Icon;
	exports.ArrowBearLeftIcon = ArrowBearLeftIcon;
	exports.ArrowBearRight2Icon = ArrowBearRight2Icon;
	exports.ArrowBearRightIcon = ArrowBearRightIcon;
	exports.ArrowBigDownIcon = ArrowBigDownIcon;
	exports.ArrowBigDownLineIcon = ArrowBigDownLineIcon;
	exports.ArrowBigDownLinesIcon = ArrowBigDownLinesIcon;
	exports.ArrowBigLeftIcon = ArrowBigLeftIcon;
	exports.ArrowBigLeftLineIcon = ArrowBigLeftLineIcon;
	exports.ArrowBigLeftLinesIcon = ArrowBigLeftLinesIcon;
	exports.ArrowBigRightIcon = ArrowBigRightIcon;
	exports.ArrowBigRightLineIcon = ArrowBigRightLineIcon;
	exports.ArrowBigRightLinesIcon = ArrowBigRightLinesIcon;
	exports.ArrowBigTopIcon = ArrowBigTopIcon;
	exports.ArrowBigUpLineIcon = ArrowBigUpLineIcon;
	exports.ArrowBigUpLinesIcon = ArrowBigUpLinesIcon;
	exports.ArrowBottomBarIcon = ArrowBottomBarIcon;
	exports.ArrowBottomCircleIcon = ArrowBottomCircleIcon;
	exports.ArrowBottomSquareIcon = ArrowBottomSquareIcon;
	exports.ArrowBottomTailIcon = ArrowBottomTailIcon;
	exports.ArrowCurveLeftIcon = ArrowCurveLeftIcon;
	exports.ArrowCurveRightIcon = ArrowCurveRightIcon;
	exports.ArrowDownCircleIcon = ArrowDownCircleIcon;
	exports.ArrowDownIcon = ArrowDownIcon;
	exports.ArrowDownLeftCircleIcon = ArrowDownLeftCircleIcon;
	exports.ArrowDownLeftIcon = ArrowDownLeftIcon;
	exports.ArrowDownRightCircleIcon = ArrowDownRightCircleIcon;
	exports.ArrowDownRightIcon = ArrowDownRightIcon;
	exports.ArrowForkIcon = ArrowForkIcon;
	exports.ArrowForwardIcon = ArrowForwardIcon;
	exports.ArrowForwardUpIcon = ArrowForwardUpIcon;
	exports.ArrowLeftBarIcon = ArrowLeftBarIcon;
	exports.ArrowLeftCircleIcon = ArrowLeftCircleIcon;
	exports.ArrowLeftIcon = ArrowLeftIcon;
	exports.ArrowLeftRightIcon = ArrowLeftRightIcon;
	exports.ArrowLeftSquareIcon = ArrowLeftSquareIcon;
	exports.ArrowLeftTailIcon = ArrowLeftTailIcon;
	exports.ArrowLoopLeft2Icon = ArrowLoopLeft2Icon;
	exports.ArrowLoopLeftIcon = ArrowLoopLeftIcon;
	exports.ArrowLoopRight2Icon = ArrowLoopRight2Icon;
	exports.ArrowLoopRightIcon = ArrowLoopRightIcon;
	exports.ArrowMergeIcon = ArrowMergeIcon;
	exports.ArrowNarrowDownIcon = ArrowNarrowDownIcon;
	exports.ArrowNarrowLeftIcon = ArrowNarrowLeftIcon;
	exports.ArrowNarrowRightIcon = ArrowNarrowRightIcon;
	exports.ArrowNarrowUpIcon = ArrowNarrowUpIcon;
	exports.ArrowRampLeft2Icon = ArrowRampLeft2Icon;
	exports.ArrowRampLeft3Icon = ArrowRampLeft3Icon;
	exports.ArrowRampLeftIcon = ArrowRampLeftIcon;
	exports.ArrowRampRight2Icon = ArrowRampRight2Icon;
	exports.ArrowRampRight3Icon = ArrowRampRight3Icon;
	exports.ArrowRampRightIcon = ArrowRampRightIcon;
	exports.ArrowRightBarIcon = ArrowRightBarIcon;
	exports.ArrowRightCircleIcon = ArrowRightCircleIcon;
	exports.ArrowRightIcon = ArrowRightIcon;
	exports.ArrowRightSquareIcon = ArrowRightSquareIcon;
	exports.ArrowRightTailIcon = ArrowRightTailIcon;
	exports.ArrowRotaryFirstLeftIcon = ArrowRotaryFirstLeftIcon;
	exports.ArrowRotaryFirstRightIcon = ArrowRotaryFirstRightIcon;
	exports.ArrowRotaryLastLeftIcon = ArrowRotaryLastLeftIcon;
	exports.ArrowRotaryLastRightIcon = ArrowRotaryLastRightIcon;
	exports.ArrowRotaryLeftIcon = ArrowRotaryLeftIcon;
	exports.ArrowRotaryRightIcon = ArrowRotaryRightIcon;
	exports.ArrowRotaryStraightIcon = ArrowRotaryStraightIcon;
	exports.ArrowSharpTurnLeftIcon = ArrowSharpTurnLeftIcon;
	exports.ArrowSharpTurnRightIcon = ArrowSharpTurnRightIcon;
	exports.ArrowTopBarIcon = ArrowTopBarIcon;
	exports.ArrowTopCircleIcon = ArrowTopCircleIcon;
	exports.ArrowTopSquareIcon = ArrowTopSquareIcon;
	exports.ArrowTopTailIcon = ArrowTopTailIcon;
	exports.ArrowUpCircleIcon = ArrowUpCircleIcon;
	exports.ArrowUpIcon = ArrowUpIcon;
	exports.ArrowUpLeftCircleIcon = ArrowUpLeftCircleIcon;
	exports.ArrowUpLeftIcon = ArrowUpLeftIcon;
	exports.ArrowUpRightCircleIcon = ArrowUpRightCircleIcon;
	exports.ArrowUpRightIcon = ArrowUpRightIcon;
	exports.ArrowWaveLeftDownIcon = ArrowWaveLeftDownIcon;
	exports.ArrowWaveLeftUpIcon = ArrowWaveLeftUpIcon;
	exports.ArrowWaveRightDownIcon = ArrowWaveRightDownIcon;
	exports.ArrowWaveRightUpIcon = ArrowWaveRightUpIcon;
	exports.ArrowsCrossIcon = ArrowsCrossIcon;
	exports.ArrowsDiagonal2Icon = ArrowsDiagonal2Icon;
	exports.ArrowsDiagonalIcon = ArrowsDiagonalIcon;
	exports.ArrowsDiagonalMinimize2Icon = ArrowsDiagonalMinimize2Icon;
	exports.ArrowsDiagonalMinimizeIcon = ArrowsDiagonalMinimizeIcon;
	exports.ArrowsDoubleNeSwIcon = ArrowsDoubleNeSwIcon;
	exports.ArrowsDoubleNwSeIcon = ArrowsDoubleNwSeIcon;
	exports.ArrowsDoubleSeNwIcon = ArrowsDoubleSeNwIcon;
	exports.ArrowsDoubleSwNeIcon = ArrowsDoubleSwNeIcon;
	exports.ArrowsDownIcon = ArrowsDownIcon;
	exports.ArrowsDownUpIcon = ArrowsDownUpIcon;
	exports.ArrowsHorizontalIcon = ArrowsHorizontalIcon;
	exports.ArrowsJoin2Icon = ArrowsJoin2Icon;
	exports.ArrowsJoinIcon = ArrowsJoinIcon;
	exports.ArrowsLeftDownIcon = ArrowsLeftDownIcon;
	exports.ArrowsLeftIcon = ArrowsLeftIcon;
	exports.ArrowsLeftRightIcon = ArrowsLeftRightIcon;
	exports.ArrowsMaximizeIcon = ArrowsMaximizeIcon;
	exports.ArrowsMinimizeIcon = ArrowsMinimizeIcon;
	exports.ArrowsRandomIcon = ArrowsRandomIcon;
	exports.ArrowsRightDownIcon = ArrowsRightDownIcon;
	exports.ArrowsRightIcon = ArrowsRightIcon;
	exports.ArrowsRightLeftIcon = ArrowsRightLeftIcon;
	exports.ArrowsShuffle2Icon = ArrowsShuffle2Icon;
	exports.ArrowsShuffleIcon = ArrowsShuffleIcon;
	exports.ArrowsSortIcon = ArrowsSortIcon;
	exports.ArrowsSplit2Icon = ArrowsSplit2Icon;
	exports.ArrowsSplitIcon = ArrowsSplitIcon;
	exports.ArrowsUpDownIcon = ArrowsUpDownIcon;
	exports.ArrowsUpIcon = ArrowsUpIcon;
	exports.ArrowsUpLeftIcon = ArrowsUpLeftIcon;
	exports.ArrowsUpRightIcon = ArrowsUpRightIcon;
	exports.ArrowsVerticalIcon = ArrowsVerticalIcon;
	exports.ArtboardIcon = ArtboardIcon;
	exports.ArtboardOffIcon = ArtboardOffIcon;
	exports.AspectRatioIcon = AspectRatioIcon;
	exports.AspectRatioOffIcon = AspectRatioOffIcon;
	exports.AsteriskIcon = AsteriskIcon;
	exports.AsteriskSimpleIcon = AsteriskSimpleIcon;
	exports.AtIcon = AtIcon;
	exports.AtOffIcon = AtOffIcon;
	exports.Atom2Icon = Atom2Icon;
	exports.AtomIcon = AtomIcon;
	exports.AugmentedRealityIcon = AugmentedRealityIcon;
	exports.AwardIcon = AwardIcon;
	exports.AxeIcon = AxeIcon;
	exports.AxisXIcon = AxisXIcon;
	exports.AxisYIcon = AxisYIcon;
	exports.BabyCarriageIcon = BabyCarriageIcon;
	exports.BackhoeIcon = BackhoeIcon;
	exports.BackpackIcon = BackpackIcon;
	exports.BackspaceIcon = BackspaceIcon;
	exports.BadgeIcon = BadgeIcon;
	exports.BadgesIcon = BadgesIcon;
	exports.BallAmericanFootballIcon = BallAmericanFootballIcon;
	exports.BallBaseballIcon = BallBaseballIcon;
	exports.BallBasketballIcon = BallBasketballIcon;
	exports.BallBowlingIcon = BallBowlingIcon;
	exports.BallFootballIcon = BallFootballIcon;
	exports.BallFootballOffIcon = BallFootballOffIcon;
	exports.BallTennisIcon = BallTennisIcon;
	exports.BallVolleyballIcon = BallVolleyballIcon;
	exports.BallonIcon = BallonIcon;
	exports.BallpenIcon = BallpenIcon;
	exports.BallpenOffIcon = BallpenOffIcon;
	exports.BanIcon = BanIcon;
	exports.BandageIcon = BandageIcon;
	exports.BarbellIcon = BarbellIcon;
	exports.BarbellOffIcon = BarbellOffIcon;
	exports.BarcodeIcon = BarcodeIcon;
	exports.BarcodeOffIcon = BarcodeOffIcon;
	exports.BarrelIcon = BarrelIcon;
	exports.BarrierBlockIcon = BarrierBlockIcon;
	exports.BarrierBlockOffIcon = BarrierBlockOffIcon;
	exports.BaselineIcon = BaselineIcon;
	exports.BasketIcon = BasketIcon;
	exports.BasketOffIcon = BasketOffIcon;
	exports.BathIcon = BathIcon;
	exports.Battery1Icon = Battery1Icon;
	exports.Battery2Icon = Battery2Icon;
	exports.Battery3Icon = Battery3Icon;
	exports.Battery4Icon = Battery4Icon;
	exports.BatteryAutomotiveIcon = BatteryAutomotiveIcon;
	exports.BatteryCharging2Icon = BatteryCharging2Icon;
	exports.BatteryChargingIcon = BatteryChargingIcon;
	exports.BatteryEcoIcon = BatteryEcoIcon;
	exports.BatteryIcon = BatteryIcon;
	exports.BatteryOffIcon = BatteryOffIcon;
	exports.BeachIcon = BeachIcon;
	exports.BeachOffIcon = BeachOffIcon;
	exports.BedIcon = BedIcon;
	exports.BeerIcon = BeerIcon;
	exports.BellIcon = BellIcon;
	exports.BellMinusIcon = BellMinusIcon;
	exports.BellOffIcon = BellOffIcon;
	exports.BellPlusIcon = BellPlusIcon;
	exports.BellRinging2Icon = BellRinging2Icon;
	exports.BellRingingIcon = BellRingingIcon;
	exports.BellSchoolIcon = BellSchoolIcon;
	exports.BellXIcon = BellXIcon;
	exports.BellZIcon = BellZIcon;
	exports.BibleIcon = BibleIcon;
	exports.BikeIcon = BikeIcon;
	exports.BikeOffIcon = BikeOffIcon;
	exports.BinaryIcon = BinaryIcon;
	exports.BiohazardIcon = BiohazardIcon;
	exports.BiohazardOffIcon = BiohazardOffIcon;
	exports.BlockquoteIcon = BlockquoteIcon;
	exports.BluetoothConnectedIcon = BluetoothConnectedIcon;
	exports.BluetoothIcon = BluetoothIcon;
	exports.BluetoothOffIcon = BluetoothOffIcon;
	exports.BluetoothXIcon = BluetoothXIcon;
	exports.BlurIcon = BlurIcon;
	exports.BoldIcon = BoldIcon;
	exports.BoldOffIcon = BoldOffIcon;
	exports.BoltIcon = BoltIcon;
	exports.BoltOffIcon = BoltOffIcon;
	exports.BoneIcon = BoneIcon;
	exports.BoneOffIcon = BoneOffIcon;
	exports.Book2Icon = Book2Icon;
	exports.BookDownloadIcon = BookDownloadIcon;
	exports.BookIcon = BookIcon;
	exports.BookOffIcon = BookOffIcon;
	exports.BookUploadIcon = BookUploadIcon;
	exports.BookmarkIcon = BookmarkIcon;
	exports.BookmarkOffIcon = BookmarkOffIcon;
	exports.BookmarksIcon = BookmarksIcon;
	exports.BookmarksOffIcon = BookmarksOffIcon;
	exports.BooksIcon = BooksIcon;
	exports.BooksOffIcon = BooksOffIcon;
	exports.BorderAllIcon = BorderAllIcon;
	exports.BorderBottomIcon = BorderBottomIcon;
	exports.BorderHorizontalIcon = BorderHorizontalIcon;
	exports.BorderInnerIcon = BorderInnerIcon;
	exports.BorderLeftIcon = BorderLeftIcon;
	exports.BorderNoneIcon = BorderNoneIcon;
	exports.BorderOuterIcon = BorderOuterIcon;
	exports.BorderRadiusIcon = BorderRadiusIcon;
	exports.BorderRightIcon = BorderRightIcon;
	exports.BorderStyle2Icon = BorderStyle2Icon;
	exports.BorderStyleIcon = BorderStyleIcon;
	exports.BorderTopIcon = BorderTopIcon;
	exports.BorderVerticalIcon = BorderVerticalIcon;
	exports.BottleIcon = BottleIcon;
	exports.BowIcon = BowIcon;
	exports.BoxIcon = BoxIcon;
	exports.BoxMarginIcon = BoxMarginIcon;
	exports.BoxModel2Icon = BoxModel2Icon;
	exports.BoxModelIcon = BoxModelIcon;
	exports.BoxMultiple0Icon = BoxMultiple0Icon;
	exports.BoxMultiple1Icon = BoxMultiple1Icon;
	exports.BoxMultiple2Icon = BoxMultiple2Icon;
	exports.BoxMultiple3Icon = BoxMultiple3Icon;
	exports.BoxMultiple4Icon = BoxMultiple4Icon;
	exports.BoxMultiple5Icon = BoxMultiple5Icon;
	exports.BoxMultiple6Icon = BoxMultiple6Icon;
	exports.BoxMultiple7Icon = BoxMultiple7Icon;
	exports.BoxMultiple8Icon = BoxMultiple8Icon;
	exports.BoxMultiple9Icon = BoxMultiple9Icon;
	exports.BoxMultipleIcon = BoxMultipleIcon;
	exports.BoxPaddingIcon = BoxPaddingIcon;
	exports.BracesIcon = BracesIcon;
	exports.BracesOffIcon = BracesOffIcon;
	exports.BracketsIcon = BracketsIcon;
	exports.BracketsOffIcon = BracketsOffIcon;
	exports.BrandAdobeIcon = BrandAdobeIcon;
	exports.BrandAirbnbIcon = BrandAirbnbIcon;
	exports.BrandAirtableIcon = BrandAirtableIcon;
	exports.BrandAndroidIcon = BrandAndroidIcon;
	exports.BrandAngularIcon = BrandAngularIcon;
	exports.BrandAppleArcadeIcon = BrandAppleArcadeIcon;
	exports.BrandAppleIcon = BrandAppleIcon;
	exports.BrandAppstoreIcon = BrandAppstoreIcon;
	exports.BrandAsanaIcon = BrandAsanaIcon;
	exports.BrandBehanceIcon = BrandBehanceIcon;
	exports.BrandBingIcon = BrandBingIcon;
	exports.BrandBitbucketIcon = BrandBitbucketIcon;
	exports.BrandBookingIcon = BrandBookingIcon;
	exports.BrandBootstrapIcon = BrandBootstrapIcon;
	exports.BrandChromeIcon = BrandChromeIcon;
	exports.BrandCodepenIcon = BrandCodepenIcon;
	exports.BrandCodesandboxIcon = BrandCodesandboxIcon;
	exports.BrandCss3Icon = BrandCss3Icon;
	exports.BrandCucumberIcon = BrandCucumberIcon;
	exports.BrandDebianIcon = BrandDebianIcon;
	exports.BrandDeviantartIcon = BrandDeviantartIcon;
	exports.BrandDiscordIcon = BrandDiscordIcon;
	exports.BrandDisqusIcon = BrandDisqusIcon;
	exports.BrandDockerIcon = BrandDockerIcon;
	exports.BrandDoctrineIcon = BrandDoctrineIcon;
	exports.BrandDribbbleIcon = BrandDribbbleIcon;
	exports.BrandEdgeIcon = BrandEdgeIcon;
	exports.BrandFacebookIcon = BrandFacebookIcon;
	exports.BrandFigmaIcon = BrandFigmaIcon;
	exports.BrandFirebaseIcon = BrandFirebaseIcon;
	exports.BrandFirefoxIcon = BrandFirefoxIcon;
	exports.BrandFlickrIcon = BrandFlickrIcon;
	exports.BrandFoursquareIcon = BrandFoursquareIcon;
	exports.BrandFramerIcon = BrandFramerIcon;
	exports.BrandGitIcon = BrandGitIcon;
	exports.BrandGithubIcon = BrandGithubIcon;
	exports.BrandGitlabIcon = BrandGitlabIcon;
	exports.BrandGmailIcon = BrandGmailIcon;
	exports.BrandGoogleAnalyticsIcon = BrandGoogleAnalyticsIcon;
	exports.BrandGoogleDriveIcon = BrandGoogleDriveIcon;
	exports.BrandGoogleIcon = BrandGoogleIcon;
	exports.BrandGooglePlayIcon = BrandGooglePlayIcon;
	exports.BrandGravatarIcon = BrandGravatarIcon;
	exports.BrandHipchatIcon = BrandHipchatIcon;
	exports.BrandHtml5Icon = BrandHtml5Icon;
	exports.BrandInstagramIcon = BrandInstagramIcon;
	exports.BrandJavascriptIcon = BrandJavascriptIcon;
	exports.BrandKickstarterIcon = BrandKickstarterIcon;
	exports.BrandKotlinIcon = BrandKotlinIcon;
	exports.BrandLastfmIcon = BrandLastfmIcon;
	exports.BrandLinkedinIcon = BrandLinkedinIcon;
	exports.BrandLoomIcon = BrandLoomIcon;
	exports.BrandMastercardIcon = BrandMastercardIcon;
	exports.BrandMediumIcon = BrandMediumIcon;
	exports.BrandMercedesIcon = BrandMercedesIcon;
	exports.BrandMessengerIcon = BrandMessengerIcon;
	exports.BrandMetaIcon = BrandMetaIcon;
	exports.BrandNetbeansIcon = BrandNetbeansIcon;
	exports.BrandNetflixIcon = BrandNetflixIcon;
	exports.BrandNextjsIcon = BrandNextjsIcon;
	exports.BrandNotionIcon = BrandNotionIcon;
	exports.BrandNuxtIcon = BrandNuxtIcon;
	exports.BrandNytimesIcon = BrandNytimesIcon;
	exports.BrandOpenSourceIcon = BrandOpenSourceIcon;
	exports.BrandOperaIcon = BrandOperaIcon;
	exports.BrandPagekitIcon = BrandPagekitIcon;
	exports.BrandPatreonIcon = BrandPatreonIcon;
	exports.BrandPaypalIcon = BrandPaypalIcon;
	exports.BrandPhpIcon = BrandPhpIcon;
	exports.BrandPinterestIcon = BrandPinterestIcon;
	exports.BrandPocketIcon = BrandPocketIcon;
	exports.BrandProducthuntIcon = BrandProducthuntIcon;
	exports.BrandPythonIcon = BrandPythonIcon;
	exports.BrandReactNativeIcon = BrandReactNativeIcon;
	exports.BrandRedditIcon = BrandRedditIcon;
	exports.BrandSafariIcon = BrandSafariIcon;
	exports.BrandSassIcon = BrandSassIcon;
	exports.BrandSentryIcon = BrandSentryIcon;
	exports.BrandShazamIcon = BrandShazamIcon;
	exports.BrandSketchIcon = BrandSketchIcon;
	exports.BrandSkypeIcon = BrandSkypeIcon;
	exports.BrandSlackIcon = BrandSlackIcon;
	exports.BrandSnapchatIcon = BrandSnapchatIcon;
	exports.BrandSoundcloudIcon = BrandSoundcloudIcon;
	exports.BrandSpotifyIcon = BrandSpotifyIcon;
	exports.BrandStackoverflowIcon = BrandStackoverflowIcon;
	exports.BrandSteamIcon = BrandSteamIcon;
	exports.BrandStripeIcon = BrandStripeIcon;
	exports.BrandSublimeTextIcon = BrandSublimeTextIcon;
	exports.BrandSvelteIcon = BrandSvelteIcon;
	exports.BrandTablerIcon = BrandTablerIcon;
	exports.BrandTailwindIcon = BrandTailwindIcon;
	exports.BrandTelegramIcon = BrandTelegramIcon;
	exports.BrandTidalIcon = BrandTidalIcon;
	exports.BrandTiktokIcon = BrandTiktokIcon;
	exports.BrandTinderIcon = BrandTinderIcon;
	exports.BrandTripadvisorIcon = BrandTripadvisorIcon;
	exports.BrandTumblrIcon = BrandTumblrIcon;
	exports.BrandTwitchIcon = BrandTwitchIcon;
	exports.BrandTwitterIcon = BrandTwitterIcon;
	exports.BrandUberIcon = BrandUberIcon;
	exports.BrandUbuntuIcon = BrandUbuntuIcon;
	exports.BrandUnsplashIcon = BrandUnsplashIcon;
	exports.BrandVercelIcon = BrandVercelIcon;
	exports.BrandVimeoIcon = BrandVimeoIcon;
	exports.BrandVisualStudioIcon = BrandVisualStudioIcon;
	exports.BrandVkIcon = BrandVkIcon;
	exports.BrandVueIcon = BrandVueIcon;
	exports.BrandWhatsappIcon = BrandWhatsappIcon;
	exports.BrandWindowsIcon = BrandWindowsIcon;
	exports.BrandYahooIcon = BrandYahooIcon;
	exports.BrandYcombinatorIcon = BrandYcombinatorIcon;
	exports.BrandYoutubeIcon = BrandYoutubeIcon;
	exports.BreadIcon = BreadIcon;
	exports.BriefcaseIcon = BriefcaseIcon;
	exports.Brightness2Icon = Brightness2Icon;
	exports.BrightnessDownIcon = BrightnessDownIcon;
	exports.BrightnessHalfIcon = BrightnessHalfIcon;
	exports.BrightnessIcon = BrightnessIcon;
	exports.BrightnessUpIcon = BrightnessUpIcon;
	exports.BrowserCheckIcon = BrowserCheckIcon;
	exports.BrowserIcon = BrowserIcon;
	exports.BrowserOffIcon = BrowserOffIcon;
	exports.BrowserPlusIcon = BrowserPlusIcon;
	exports.BrowserXIcon = BrowserXIcon;
	exports.BrushIcon = BrushIcon;
	exports.BrushOffIcon = BrushOffIcon;
	exports.BucketIcon = BucketIcon;
	exports.BugIcon = BugIcon;
	exports.BugOffIcon = BugOffIcon;
	exports.BuildingArchIcon = BuildingArchIcon;
	exports.BuildingBankIcon = BuildingBankIcon;
	exports.BuildingBridge2Icon = BuildingBridge2Icon;
	exports.BuildingBridgeIcon = BuildingBridgeIcon;
	exports.BuildingCarouselIcon = BuildingCarouselIcon;
	exports.BuildingCastleIcon = BuildingCastleIcon;
	exports.BuildingChurchIcon = BuildingChurchIcon;
	exports.BuildingCommunityIcon = BuildingCommunityIcon;
	exports.BuildingCottageIcon = BuildingCottageIcon;
	exports.BuildingFactory2Icon = BuildingFactory2Icon;
	exports.BuildingFactoryIcon = BuildingFactoryIcon;
	exports.BuildingFortressIcon = BuildingFortressIcon;
	exports.BuildingHospitalIcon = BuildingHospitalIcon;
	exports.BuildingIcon = BuildingIcon;
	exports.BuildingLighthouseIcon = BuildingLighthouseIcon;
	exports.BuildingMonumentIcon = BuildingMonumentIcon;
	exports.BuildingPavilonIcon = BuildingPavilonIcon;
	exports.BuildingSkyscraperIcon = BuildingSkyscraperIcon;
	exports.BuildingStoreIcon = BuildingStoreIcon;
	exports.BuildingWarehouseIcon = BuildingWarehouseIcon;
	exports.BulbIcon = BulbIcon;
	exports.BulbOffIcon = BulbOffIcon;
	exports.BulldozerIcon = BulldozerIcon;
	exports.BusIcon = BusIcon;
	exports.BusinessplanIcon = BusinessplanIcon;
	exports.ButterflyIcon = ButterflyIcon;
	exports.CSharpIcon = CSharpIcon;
	exports.CakeIcon = CakeIcon;
	exports.CalculatorIcon = CalculatorIcon;
	exports.CalculatorOffIcon = CalculatorOffIcon;
	exports.CalendarEventIcon = CalendarEventIcon;
	exports.CalendarIcon = CalendarIcon;
	exports.CalendarMinusIcon = CalendarMinusIcon;
	exports.CalendarOffIcon = CalendarOffIcon;
	exports.CalendarPlusIcon = CalendarPlusIcon;
	exports.CalendarStatsIcon = CalendarStatsIcon;
	exports.CalendarTimeIcon = CalendarTimeIcon;
	exports.CameraIcon = CameraIcon;
	exports.CameraMinusIcon = CameraMinusIcon;
	exports.CameraOffIcon = CameraOffIcon;
	exports.CameraPlusIcon = CameraPlusIcon;
	exports.CameraRotateIcon = CameraRotateIcon;
	exports.CameraSelfieIcon = CameraSelfieIcon;
	exports.CandleIcon = CandleIcon;
	exports.CandyIcon = CandyIcon;
	exports.CandyOffIcon = CandyOffIcon;
	exports.CaptureIcon = CaptureIcon;
	exports.CaptureOffIcon = CaptureOffIcon;
	exports.CarCraneIcon = CarCraneIcon;
	exports.CarCrashIcon = CarCrashIcon;
	exports.CarIcon = CarIcon;
	exports.CarOffIcon = CarOffIcon;
	exports.CaravanIcon = CaravanIcon;
	exports.CardboardsIcon = CardboardsIcon;
	exports.CardboardsOffIcon = CardboardsOffIcon;
	exports.CaretDownIcon = CaretDownIcon;
	exports.CaretLeftIcon = CaretLeftIcon;
	exports.CaretRightIcon = CaretRightIcon;
	exports.CaretUpIcon = CaretUpIcon;
	exports.CashBanknoteIcon = CashBanknoteIcon;
	exports.CashBanknoteOffIcon = CashBanknoteOffIcon;
	exports.CashIcon = CashIcon;
	exports.CastIcon = CastIcon;
	exports.CastOffIcon = CastOffIcon;
	exports.CeIcon = CeIcon;
	exports.CeOffIcon = CeOffIcon;
	exports.CellIcon = CellIcon;
	exports.CellSignal1Icon = CellSignal1Icon;
	exports.CellSignal2Icon = CellSignal2Icon;
	exports.CellSignal3Icon = CellSignal3Icon;
	exports.CellSignal4Icon = CellSignal4Icon;
	exports.CellSignal5Icon = CellSignal5Icon;
	exports.CellSignalOffIcon = CellSignalOffIcon;
	exports.Certificate2Icon = Certificate2Icon;
	exports.Certificate2OffIcon = Certificate2OffIcon;
	exports.CertificateIcon = CertificateIcon;
	exports.CertificateOffIcon = CertificateOffIcon;
	exports.ChargingPileIcon = ChargingPileIcon;
	exports.ChartArcs3Icon = ChartArcs3Icon;
	exports.ChartArcsIcon = ChartArcsIcon;
	exports.ChartAreaIcon = ChartAreaIcon;
	exports.ChartAreaLineIcon = ChartAreaLineIcon;
	exports.ChartArrowsIcon = ChartArrowsIcon;
	exports.ChartArrowsVerticalIcon = ChartArrowsVerticalIcon;
	exports.ChartBarIcon = ChartBarIcon;
	exports.ChartBubbleIcon = ChartBubbleIcon;
	exports.ChartCandleIcon = ChartCandleIcon;
	exports.ChartCirclesIcon = ChartCirclesIcon;
	exports.ChartDonut2Icon = ChartDonut2Icon;
	exports.ChartDonut3Icon = ChartDonut3Icon;
	exports.ChartDonut4Icon = ChartDonut4Icon;
	exports.ChartDonutIcon = ChartDonutIcon;
	exports.ChartDots2Icon = ChartDots2Icon;
	exports.ChartDots3Icon = ChartDots3Icon;
	exports.ChartDotsIcon = ChartDotsIcon;
	exports.ChartInfographicIcon = ChartInfographicIcon;
	exports.ChartLineIcon = ChartLineIcon;
	exports.ChartPie2Icon = ChartPie2Icon;
	exports.ChartPie3Icon = ChartPie3Icon;
	exports.ChartPie4Icon = ChartPie4Icon;
	exports.ChartPieIcon = ChartPieIcon;
	exports.ChartRadarIcon = ChartRadarIcon;
	exports.CheckIcon = CheckIcon;
	exports.CheckboxIcon = CheckboxIcon;
	exports.ChecklistIcon = ChecklistIcon;
	exports.ChecksIcon = ChecksIcon;
	exports.CheckupListIcon = CheckupListIcon;
	exports.CheeseIcon = CheeseIcon;
	exports.ChevronDownIcon = ChevronDownIcon;
	exports.ChevronDownLeftIcon = ChevronDownLeftIcon;
	exports.ChevronDownRightIcon = ChevronDownRightIcon;
	exports.ChevronLeftIcon = ChevronLeftIcon;
	exports.ChevronRightIcon = ChevronRightIcon;
	exports.ChevronUpIcon = ChevronUpIcon;
	exports.ChevronUpLeftIcon = ChevronUpLeftIcon;
	exports.ChevronUpRightIcon = ChevronUpRightIcon;
	exports.ChevronsDownIcon = ChevronsDownIcon;
	exports.ChevronsDownLeftIcon = ChevronsDownLeftIcon;
	exports.ChevronsDownRightIcon = ChevronsDownRightIcon;
	exports.ChevronsLeftIcon = ChevronsLeftIcon;
	exports.ChevronsRightIcon = ChevronsRightIcon;
	exports.ChevronsUpIcon = ChevronsUpIcon;
	exports.ChevronsUpLeftIcon = ChevronsUpLeftIcon;
	exports.ChevronsUpRightIcon = ChevronsUpRightIcon;
	exports.ChristmasTreeIcon = ChristmasTreeIcon;
	exports.Circle0Icon = Circle0Icon;
	exports.Circle1Icon = Circle1Icon;
	exports.Circle2Icon = Circle2Icon;
	exports.Circle3Icon = Circle3Icon;
	exports.Circle4Icon = Circle4Icon;
	exports.Circle5Icon = Circle5Icon;
	exports.Circle6Icon = Circle6Icon;
	exports.Circle7Icon = Circle7Icon;
	exports.Circle8Icon = Circle8Icon;
	exports.Circle9Icon = Circle9Icon;
	exports.CircleCheckIcon = CircleCheckIcon;
	exports.CircleDashedIcon = CircleDashedIcon;
	exports.CircleDotIcon = CircleDotIcon;
	exports.CircleDottedIcon = CircleDottedIcon;
	exports.CircleHalf2Icon = CircleHalf2Icon;
	exports.CircleHalfIcon = CircleHalfIcon;
	exports.CircleHalfVerticalIcon = CircleHalfVerticalIcon;
	exports.CircleIcon = CircleIcon;
	exports.CircleMinusIcon = CircleMinusIcon;
	exports.CircleOffIcon = CircleOffIcon;
	exports.CirclePlusIcon = CirclePlusIcon;
	exports.CircleRectangleIcon = CircleRectangleIcon;
	exports.CircleRectangleOffIcon = CircleRectangleOffIcon;
	exports.CircleSquareIcon = CircleSquareIcon;
	exports.CircleTriangleIcon = CircleTriangleIcon;
	exports.CircleXIcon = CircleXIcon;
	exports.CirclesIcon = CirclesIcon;
	exports.ClearAllIcon = ClearAllIcon;
	exports.ClearFormattingIcon = ClearFormattingIcon;
	exports.ClickIcon = ClickIcon;
	exports.ClipboardCheckIcon = ClipboardCheckIcon;
	exports.ClipboardIcon = ClipboardIcon;
	exports.ClipboardListIcon = ClipboardListIcon;
	exports.ClipboardOffIcon = ClipboardOffIcon;
	exports.ClipboardPlusIcon = ClipboardPlusIcon;
	exports.ClipboardTextIcon = ClipboardTextIcon;
	exports.ClipboardXIcon = ClipboardXIcon;
	exports.Clock2Icon = Clock2Icon;
	exports.ClockIcon = ClockIcon;
	exports.ClockOffIcon = ClockOffIcon;
	exports.CloudDownloadIcon = CloudDownloadIcon;
	exports.CloudFogIcon = CloudFogIcon;
	exports.CloudIcon = CloudIcon;
	exports.CloudLockIcon = CloudLockIcon;
	exports.CloudLockOpenIcon = CloudLockOpenIcon;
	exports.CloudOffIcon = CloudOffIcon;
	exports.CloudRainIcon = CloudRainIcon;
	exports.CloudSnowIcon = CloudSnowIcon;
	exports.CloudStormIcon = CloudStormIcon;
	exports.CloudUploadIcon = CloudUploadIcon;
	exports.ClubsIcon = ClubsIcon;
	exports.CodeIcon = CodeIcon;
	exports.CodeMinusIcon = CodeMinusIcon;
	exports.CodeOffIcon = CodeOffIcon;
	exports.CodePlusIcon = CodePlusIcon;
	exports.CoffeeIcon = CoffeeIcon;
	exports.CoinIcon = CoinIcon;
	exports.CoinOffIcon = CoinOffIcon;
	exports.ColorPickerIcon = ColorPickerIcon;
	exports.ColorPickerOffIcon = ColorPickerOffIcon;
	exports.ColorSwatchIcon = ColorSwatchIcon;
	exports.ColorSwatchOffIcon = ColorSwatchOffIcon;
	exports.ColumnInsertLeftIcon = ColumnInsertLeftIcon;
	exports.ColumnInsertRightIcon = ColumnInsertRightIcon;
	exports.ColumnsIcon = ColumnsIcon;
	exports.ColumnsOffIcon = ColumnsOffIcon;
	exports.CometIcon = CometIcon;
	exports.CommandIcon = CommandIcon;
	exports.CompassIcon = CompassIcon;
	exports.CompassOffIcon = CompassOffIcon;
	exports.ComponentsIcon = ComponentsIcon;
	exports.ComponentsOffIcon = ComponentsOffIcon;
	exports.Cone2Icon = Cone2Icon;
	exports.ConeIcon = ConeIcon;
	exports.ConfettiIcon = ConfettiIcon;
	exports.ContainerIcon = ContainerIcon;
	exports.Contrast2Icon = Contrast2Icon;
	exports.ContrastIcon = ContrastIcon;
	exports.CookieIcon = CookieIcon;
	exports.CookieOffIcon = CookieOffIcon;
	exports.CopyIcon = CopyIcon;
	exports.CopyOffIcon = CopyOffIcon;
	exports.CopyleftIcon = CopyleftIcon;
	exports.CopyleftOffIcon = CopyleftOffIcon;
	exports.CopyrightIcon = CopyrightIcon;
	exports.CopyrightOffIcon = CopyrightOffIcon;
	exports.CornerDownLeftDoubleIcon = CornerDownLeftDoubleIcon;
	exports.CornerDownLeftIcon = CornerDownLeftIcon;
	exports.CornerDownRightDoubleIcon = CornerDownRightDoubleIcon;
	exports.CornerDownRightIcon = CornerDownRightIcon;
	exports.CornerLeftDownDoubleIcon = CornerLeftDownDoubleIcon;
	exports.CornerLeftDownIcon = CornerLeftDownIcon;
	exports.CornerLeftUpDoubleIcon = CornerLeftUpDoubleIcon;
	exports.CornerLeftUpIcon = CornerLeftUpIcon;
	exports.CornerRightDownDoubleIcon = CornerRightDownDoubleIcon;
	exports.CornerRightDownIcon = CornerRightDownIcon;
	exports.CornerRightUpDoubleIcon = CornerRightUpDoubleIcon;
	exports.CornerRightUpIcon = CornerRightUpIcon;
	exports.CornerUpLeftDoubleIcon = CornerUpLeftDoubleIcon;
	exports.CornerUpLeftIcon = CornerUpLeftIcon;
	exports.CornerUpRightDoubleIcon = CornerUpRightDoubleIcon;
	exports.CornerUpRightIcon = CornerUpRightIcon;
	exports.Cpu2Icon = Cpu2Icon;
	exports.CpuIcon = CpuIcon;
	exports.CraneIcon = CraneIcon;
	exports.CreativeCommonsIcon = CreativeCommonsIcon;
	exports.CreditCardIcon = CreditCardIcon;
	exports.CreditCardOffIcon = CreditCardOffIcon;
	exports.CricketIcon = CricketIcon;
	exports.CropIcon = CropIcon;
	exports.CrossIcon = CrossIcon;
	exports.CrosshairIcon = CrosshairIcon;
	exports.CrownIcon = CrownIcon;
	exports.CrownOffIcon = CrownOffIcon;
	exports.CrutchesIcon = CrutchesIcon;
	exports.CupIcon = CupIcon;
	exports.CurlingIcon = CurlingIcon;
	exports.CurlyLoopIcon = CurlyLoopIcon;
	exports.CurrencyBahrainiIcon = CurrencyBahrainiIcon;
	exports.CurrencyBahtIcon = CurrencyBahtIcon;
	exports.CurrencyBitcoinIcon = CurrencyBitcoinIcon;
	exports.CurrencyCentIcon = CurrencyCentIcon;
	exports.CurrencyDinarIcon = CurrencyDinarIcon;
	exports.CurrencyDirhamIcon = CurrencyDirhamIcon;
	exports.CurrencyDogecoinIcon = CurrencyDogecoinIcon;
	exports.CurrencyDollarAustralianIcon = CurrencyDollarAustralianIcon;
	exports.CurrencyDollarCanadianIcon = CurrencyDollarCanadianIcon;
	exports.CurrencyDollarIcon = CurrencyDollarIcon;
	exports.CurrencyDollarSingaporeIcon = CurrencyDollarSingaporeIcon;
	exports.CurrencyEthereumIcon = CurrencyEthereumIcon;
	exports.CurrencyEuroIcon = CurrencyEuroIcon;
	exports.CurrencyForintIcon = CurrencyForintIcon;
	exports.CurrencyFrankIcon = CurrencyFrankIcon;
	exports.CurrencyIcon = CurrencyIcon;
	exports.CurrencyKroneCzechIcon = CurrencyKroneCzechIcon;
	exports.CurrencyKroneDanishIcon = CurrencyKroneDanishIcon;
	exports.CurrencyKroneSwedishIcon = CurrencyKroneSwedishIcon;
	exports.CurrencyLeuIcon = CurrencyLeuIcon;
	exports.CurrencyLiraIcon = CurrencyLiraIcon;
	exports.CurrencyLitecoinIcon = CurrencyLitecoinIcon;
	exports.CurrencyNairaIcon = CurrencyNairaIcon;
	exports.CurrencyPoundIcon = CurrencyPoundIcon;
	exports.CurrencyRealIcon = CurrencyRealIcon;
	exports.CurrencyRenminbiIcon = CurrencyRenminbiIcon;
	exports.CurrencyRippleIcon = CurrencyRippleIcon;
	exports.CurrencyRiyalIcon = CurrencyRiyalIcon;
	exports.CurrencyRubelIcon = CurrencyRubelIcon;
	exports.CurrencyRupeeIcon = CurrencyRupeeIcon;
	exports.CurrencyShekelIcon = CurrencyShekelIcon;
	exports.CurrencyTakaIcon = CurrencyTakaIcon;
	exports.CurrencyTugrikIcon = CurrencyTugrikIcon;
	exports.CurrencyWonIcon = CurrencyWonIcon;
	exports.CurrencyYenIcon = CurrencyYenIcon;
	exports.CurrencyZlotyIcon = CurrencyZlotyIcon;
	exports.CurrentLocationIcon = CurrentLocationIcon;
	exports.CursorTextIcon = CursorTextIcon;
	exports.CutIcon = CutIcon;
	exports.DashboardIcon = DashboardIcon;
	exports.DatabaseExportIcon = DatabaseExportIcon;
	exports.DatabaseIcon = DatabaseIcon;
	exports.DatabaseImportIcon = DatabaseImportIcon;
	exports.DatabaseOffIcon = DatabaseOffIcon;
	exports.DentalIcon = DentalIcon;
	exports.DetailsIcon = DetailsIcon;
	exports.DeviceAnalyticsIcon = DeviceAnalyticsIcon;
	exports.DeviceAudioTapeIcon = DeviceAudioTapeIcon;
	exports.DeviceCctvIcon = DeviceCctvIcon;
	exports.DeviceComputerCameraIcon = DeviceComputerCameraIcon;
	exports.DeviceComputerCameraOffIcon = DeviceComputerCameraOffIcon;
	exports.DeviceDesktopAnalyticsIcon = DeviceDesktopAnalyticsIcon;
	exports.DeviceDesktopIcon = DeviceDesktopIcon;
	exports.DeviceDesktopOffIcon = DeviceDesktopOffIcon;
	exports.DeviceFloppyIcon = DeviceFloppyIcon;
	exports.DeviceGamepadIcon = DeviceGamepadIcon;
	exports.DeviceHeartMonitorIcon = DeviceHeartMonitorIcon;
	exports.DeviceLaptopIcon = DeviceLaptopIcon;
	exports.DeviceLaptopOffIcon = DeviceLaptopOffIcon;
	exports.DeviceMobileIcon = DeviceMobileIcon;
	exports.DeviceMobileMessageIcon = DeviceMobileMessageIcon;
	exports.DeviceMobileOffIcon = DeviceMobileOffIcon;
	exports.DeviceMobileRotatedIcon = DeviceMobileRotatedIcon;
	exports.DeviceMobileVibrationIcon = DeviceMobileVibrationIcon;
	exports.DeviceNintendoIcon = DeviceNintendoIcon;
	exports.DeviceSpeakerIcon = DeviceSpeakerIcon;
	exports.DeviceTabletIcon = DeviceTabletIcon;
	exports.DeviceTabletOffIcon = DeviceTabletOffIcon;
	exports.DeviceTvIcon = DeviceTvIcon;
	exports.DeviceTvOffIcon = DeviceTvOffIcon;
	exports.DeviceWatchIcon = DeviceWatchIcon;
	exports.DeviceWatchOffIcon = DeviceWatchOffIcon;
	exports.DeviceWatchStats2Icon = DeviceWatchStats2Icon;
	exports.DeviceWatchStatsIcon = DeviceWatchStatsIcon;
	exports.Devices2Icon = Devices2Icon;
	exports.DevicesIcon = DevicesIcon;
	exports.DevicesOffIcon = DevicesOffIcon;
	exports.DevicesPcIcon = DevicesPcIcon;
	exports.DialpadIcon = DialpadIcon;
	exports.DiamondIcon = DiamondIcon;
	exports.DiamondsIcon = DiamondsIcon;
	exports.Dice1Icon = Dice1Icon;
	exports.Dice2Icon = Dice2Icon;
	exports.Dice3Icon = Dice3Icon;
	exports.Dice4Icon = Dice4Icon;
	exports.Dice5Icon = Dice5Icon;
	exports.Dice6Icon = Dice6Icon;
	exports.DiceIcon = DiceIcon;
	exports.DimensionsIcon = DimensionsIcon;
	exports.DirectionHorizontalIcon = DirectionHorizontalIcon;
	exports.DirectionIcon = DirectionIcon;
	exports.DirectionsIcon = DirectionsIcon;
	exports.Disabled2Icon = Disabled2Icon;
	exports.DisabledIcon = DisabledIcon;
	exports.DiscIcon = DiscIcon;
	exports.Discount2Icon = Discount2Icon;
	exports.DiscountIcon = DiscountIcon;
	exports.DivideIcon = DivideIcon;
	exports.Dna2Icon = Dna2Icon;
	exports.DnaIcon = DnaIcon;
	exports.DogBowlIcon = DogBowlIcon;
	exports.DoorEnterIcon = DoorEnterIcon;
	exports.DoorExitIcon = DoorExitIcon;
	exports.DoorIcon = DoorIcon;
	exports.DotsCircleHorizontalIcon = DotsCircleHorizontalIcon;
	exports.DotsDiagonal2Icon = DotsDiagonal2Icon;
	exports.DotsDiagonalIcon = DotsDiagonalIcon;
	exports.DotsIcon = DotsIcon;
	exports.DotsVerticalIcon = DotsVerticalIcon;
	exports.DownloadIcon = DownloadIcon;
	exports.DragDrop2Icon = DragDrop2Icon;
	exports.DragDropIcon = DragDropIcon;
	exports.DroneIcon = DroneIcon;
	exports.DroneOffIcon = DroneOffIcon;
	exports.DropCircleIcon = DropCircleIcon;
	exports.DropletFilled2Icon = DropletFilled2Icon;
	exports.DropletFilledIcon = DropletFilledIcon;
	exports.DropletHalf2Icon = DropletHalf2Icon;
	exports.DropletHalfIcon = DropletHalfIcon;
	exports.DropletIcon = DropletIcon;
	exports.DropletOffIcon = DropletOffIcon;
	exports.EarIcon = EarIcon;
	exports.EarOffIcon = EarOffIcon;
	exports.EditCircleIcon = EditCircleIcon;
	exports.EditIcon = EditIcon;
	exports.EggIcon = EggIcon;
	exports.ElevatorIcon = ElevatorIcon;
	exports.EmergencyBedIcon = EmergencyBedIcon;
	exports.EmphasisIcon = EmphasisIcon;
	exports.EngineIcon = EngineIcon;
	exports.EqualIcon = EqualIcon;
	exports.EqualNotIcon = EqualNotIcon;
	exports.EraserIcon = EraserIcon;
	exports.Error404Icon = Error404Icon;
	exports.ExchangeIcon = ExchangeIcon;
	exports.ExclamationMarkIcon = ExclamationMarkIcon;
	exports.ExposureIcon = ExposureIcon;
	exports.ExternalLinkIcon = ExternalLinkIcon;
	exports.EyeCheckIcon = EyeCheckIcon;
	exports.EyeIcon = EyeIcon;
	exports.EyeOffIcon = EyeOffIcon;
	exports.EyeTableIcon = EyeTableIcon;
	exports.Eyeglass2Icon = Eyeglass2Icon;
	exports.EyeglassIcon = EyeglassIcon;
	exports.FaceIdErrorIcon = FaceIdErrorIcon;
	exports.FaceIdIcon = FaceIdIcon;
	exports.FaceMaskIcon = FaceMaskIcon;
	exports.FallIcon = FallIcon;
	exports.FeatherIcon = FeatherIcon;
	exports.FenceIcon = FenceIcon;
	exports.FidgetSpinnerIcon = FidgetSpinnerIcon;
	exports.File3dIcon = File3dIcon;
	exports.FileAlertIcon = FileAlertIcon;
	exports.FileAnalyticsIcon = FileAnalyticsIcon;
	exports.FileArrowLeftIcon = FileArrowLeftIcon;
	exports.FileArrowRightIcon = FileArrowRightIcon;
	exports.FileBarcodeIcon = FileBarcodeIcon;
	exports.FileCertificateIcon = FileCertificateIcon;
	exports.FileChartIcon = FileChartIcon;
	exports.FileCheckIcon = FileCheckIcon;
	exports.FileCode2Icon = FileCode2Icon;
	exports.FileCodeIcon = FileCodeIcon;
	exports.FileDatabaseIcon = FileDatabaseIcon;
	exports.FileDescriptionIcon = FileDescriptionIcon;
	exports.FileDiffIcon = FileDiffIcon;
	exports.FileDigitIcon = FileDigitIcon;
	exports.FileDislikeIcon = FileDislikeIcon;
	exports.FileDollarIcon = FileDollarIcon;
	exports.FileDotsIcon = FileDotsIcon;
	exports.FileDownloadIcon = FileDownloadIcon;
	exports.FileEuroIcon = FileEuroIcon;
	exports.FileExportIcon = FileExportIcon;
	exports.FileHorizontalIcon = FileHorizontalIcon;
	exports.FileIcon = FileIcon;
	exports.FileImportIcon = FileImportIcon;
	exports.FileInfoIcon = FileInfoIcon;
	exports.FileInvoiceIcon = FileInvoiceIcon;
	exports.FileLikeIcon = FileLikeIcon;
	exports.FileMinusIcon = FileMinusIcon;
	exports.FileMusicIcon = FileMusicIcon;
	exports.FileOffIcon = FileOffIcon;
	exports.FilePencilIcon = FilePencilIcon;
	exports.FilePhoneIcon = FilePhoneIcon;
	exports.FilePlusIcon = FilePlusIcon;
	exports.FilePowerIcon = FilePowerIcon;
	exports.FileReportIcon = FileReportIcon;
	exports.FileRssIcon = FileRssIcon;
	exports.FileScissorsIcon = FileScissorsIcon;
	exports.FileSearchIcon = FileSearchIcon;
	exports.FileSettingsIcon = FileSettingsIcon;
	exports.FileShredderIcon = FileShredderIcon;
	exports.FileSignalIcon = FileSignalIcon;
	exports.FileSpreadsheetIcon = FileSpreadsheetIcon;
	exports.FileStarIcon = FileStarIcon;
	exports.FileSymlinkIcon = FileSymlinkIcon;
	exports.FileTextIcon = FileTextIcon;
	exports.FileTimeIcon = FileTimeIcon;
	exports.FileTypographyIcon = FileTypographyIcon;
	exports.FileUnknownIcon = FileUnknownIcon;
	exports.FileUploadIcon = FileUploadIcon;
	exports.FileVectorIcon = FileVectorIcon;
	exports.FileXIcon = FileXIcon;
	exports.FileZipIcon = FileZipIcon;
	exports.FilesIcon = FilesIcon;
	exports.FilesOffIcon = FilesOffIcon;
	exports.FilterIcon = FilterIcon;
	exports.FilterOffIcon = FilterOffIcon;
	exports.FingerprintIcon = FingerprintIcon;
	exports.FiretruckIcon = FiretruckIcon;
	exports.FirstAidKitIcon = FirstAidKitIcon;
	exports.FishIcon = FishIcon;
	exports.Flag2Icon = Flag2Icon;
	exports.Flag3Icon = Flag3Icon;
	exports.FlagIcon = FlagIcon;
	exports.FlameIcon = FlameIcon;
	exports.FlareIcon = FlareIcon;
	exports.Flask2Icon = Flask2Icon;
	exports.FlaskIcon = FlaskIcon;
	exports.FlipHorizontalIcon = FlipHorizontalIcon;
	exports.FlipVerticalIcon = FlipVerticalIcon;
	exports.FloatCenterIcon = FloatCenterIcon;
	exports.FloatLeftIcon = FloatLeftIcon;
	exports.FloatNoneIcon = FloatNoneIcon;
	exports.FloatRightIcon = FloatRightIcon;
	exports.FlowerIcon = FlowerIcon;
	exports.Focus2Icon = Focus2Icon;
	exports.FocusCenteredIcon = FocusCenteredIcon;
	exports.FocusIcon = FocusIcon;
	exports.FoldDownIcon = FoldDownIcon;
	exports.FoldIcon = FoldIcon;
	exports.FoldUpIcon = FoldUpIcon;
	exports.FolderIcon = FolderIcon;
	exports.FolderMinusIcon = FolderMinusIcon;
	exports.FolderOffIcon = FolderOffIcon;
	exports.FolderPlusIcon = FolderPlusIcon;
	exports.FolderXIcon = FolderXIcon;
	exports.FoldersIcon = FoldersIcon;
	exports.Forbid2Icon = Forbid2Icon;
	exports.ForbidIcon = ForbidIcon;
	exports.ForkliftIcon = ForkliftIcon;
	exports.FormsIcon = FormsIcon;
	exports.FountainIcon = FountainIcon;
	exports.FrameIcon = FrameIcon;
	exports.FreeRightsIcon = FreeRightsIcon;
	exports.FriendsIcon = FriendsIcon;
	exports.GasStationIcon = GasStationIcon;
	exports.GaugeIcon = GaugeIcon;
	exports.GavelIcon = GavelIcon;
	exports.GenderAgenderIcon = GenderAgenderIcon;
	exports.GenderAndrogyneIcon = GenderAndrogyneIcon;
	exports.GenderBigenderIcon = GenderBigenderIcon;
	exports.GenderDemiboyIcon = GenderDemiboyIcon;
	exports.GenderDemigirlIcon = GenderDemigirlIcon;
	exports.GenderEpiceneIcon = GenderEpiceneIcon;
	exports.GenderFemaleIcon = GenderFemaleIcon;
	exports.GenderFemmeIcon = GenderFemmeIcon;
	exports.GenderGenderfluidIcon = GenderGenderfluidIcon;
	exports.GenderGenderlessIcon = GenderGenderlessIcon;
	exports.GenderGenderqueerIcon = GenderGenderqueerIcon;
	exports.GenderHermaphroditeIcon = GenderHermaphroditeIcon;
	exports.GenderIntergenderIcon = GenderIntergenderIcon;
	exports.GenderMaleIcon = GenderMaleIcon;
	exports.GenderNeutroisIcon = GenderNeutroisIcon;
	exports.GenderThirdIcon = GenderThirdIcon;
	exports.GenderTransgenderIcon = GenderTransgenderIcon;
	exports.GenderTrasvestiIcon = GenderTrasvestiIcon;
	exports.GeometryIcon = GeometryIcon;
	exports.GhostIcon = GhostIcon;
	exports.GiftIcon = GiftIcon;
	exports.GitBranchIcon = GitBranchIcon;
	exports.GitCommitIcon = GitCommitIcon;
	exports.GitCompareIcon = GitCompareIcon;
	exports.GitForkIcon = GitForkIcon;
	exports.GitMergeIcon = GitMergeIcon;
	exports.GitPullRequestClosedIcon = GitPullRequestClosedIcon;
	exports.GitPullRequestDraftIcon = GitPullRequestDraftIcon;
	exports.GitPullRequestIcon = GitPullRequestIcon;
	exports.GizmoIcon = GizmoIcon;
	exports.GlassFullIcon = GlassFullIcon;
	exports.GlassIcon = GlassIcon;
	exports.GlassOffIcon = GlassOffIcon;
	exports.GlobeIcon = GlobeIcon;
	exports.GolfIcon = GolfIcon;
	exports.GpsIcon = GpsIcon;
	exports.GrainIcon = GrainIcon;
	exports.GridDotsIcon = GridDotsIcon;
	exports.GridPatternIcon = GridPatternIcon;
	exports.GrillIcon = GrillIcon;
	exports.GripHorizontalIcon = GripHorizontalIcon;
	exports.GripVerticalIcon = GripVerticalIcon;
	exports.GrowthIcon = GrowthIcon;
	exports.H1Icon = H1Icon;
	exports.H2Icon = H2Icon;
	exports.H3Icon = H3Icon;
	exports.H4Icon = H4Icon;
	exports.H5Icon = H5Icon;
	exports.H6Icon = H6Icon;
	exports.HammerIcon = HammerIcon;
	exports.HandClickIcon = HandClickIcon;
	exports.HandFingerIcon = HandFingerIcon;
	exports.HandGrabIcon = HandGrabIcon;
	exports.HandLittleFingerIcon = HandLittleFingerIcon;
	exports.HandMiddleFingerIcon = HandMiddleFingerIcon;
	exports.HandMoveIcon = HandMoveIcon;
	exports.HandOffIcon = HandOffIcon;
	exports.HandRingFingerIcon = HandRingFingerIcon;
	exports.HandRockIcon = HandRockIcon;
	exports.HandStopIcon = HandStopIcon;
	exports.HandThreeFingersIcon = HandThreeFingersIcon;
	exports.HandTwoFingersIcon = HandTwoFingersIcon;
	exports.Hanger2Icon = Hanger2Icon;
	exports.HangerIcon = HangerIcon;
	exports.HashIcon = HashIcon;
	exports.HazeIcon = HazeIcon;
	exports.HeadingIcon = HeadingIcon;
	exports.HeadphonesIcon = HeadphonesIcon;
	exports.HeadphonesOffIcon = HeadphonesOffIcon;
	exports.HeadsetIcon = HeadsetIcon;
	exports.HeartBrokenIcon = HeartBrokenIcon;
	exports.HeartHandshakeIcon = HeartHandshakeIcon;
	exports.HeartIcon = HeartIcon;
	exports.HeartRateMonitorIcon = HeartRateMonitorIcon;
	exports.HeartbeatIcon = HeartbeatIcon;
	exports.HelicopterIcon = HelicopterIcon;
	exports.HelicopterLandingIcon = HelicopterLandingIcon;
	exports.HelmetIcon = HelmetIcon;
	exports.HelpIcon = HelpIcon;
	exports.HexagonIcon = HexagonIcon;
	exports.HexagonOffIcon = HexagonOffIcon;
	exports.HexagonsIcon = HexagonsIcon;
	exports.Hierarchy2Icon = Hierarchy2Icon;
	exports.HierarchyIcon = HierarchyIcon;
	exports.HighlightIcon = HighlightIcon;
	exports.HistoryIcon = HistoryIcon;
	exports.Home2Icon = Home2Icon;
	exports.HomeIcon = HomeIcon;
	exports.HotelServiceIcon = HotelServiceIcon;
	exports.HourglassHighIcon = HourglassHighIcon;
	exports.HourglassIcon = HourglassIcon;
	exports.HourglassLowIcon = HourglassLowIcon;
	exports.IceCream2Icon = IceCream2Icon;
	exports.IceCreamIcon = IceCreamIcon;
	exports.IceSkatingIcon = IceSkatingIcon;
	exports.IdBadge2Icon = IdBadge2Icon;
	exports.IdBadgeIcon = IdBadgeIcon;
	exports.IdIcon = IdIcon;
	exports.InboxIcon = InboxIcon;
	exports.IndentDecreaseIcon = IndentDecreaseIcon;
	exports.IndentIncreaseIcon = IndentIncreaseIcon;
	exports.InfinityIcon = InfinityIcon;
	exports.InfoCircleIcon = InfoCircleIcon;
	exports.InfoSquareIcon = InfoSquareIcon;
	exports.ItalicIcon = ItalicIcon;
	exports.JumpRopeIcon = JumpRopeIcon;
	exports.KarateIcon = KarateIcon;
	exports.KeringIcon = KeringIcon;
	exports.KeyIcon = KeyIcon;
	exports.KeyboardHideIcon = KeyboardHideIcon;
	exports.KeyboardIcon = KeyboardIcon;
	exports.KeyboardOffIcon = KeyboardOffIcon;
	exports.KeyboardShowIcon = KeyboardShowIcon;
	exports.LadderIcon = LadderIcon;
	exports.Lamp2Icon = Lamp2Icon;
	exports.LampIcon = LampIcon;
	exports.LanguageHiraganaIcon = LanguageHiraganaIcon;
	exports.LanguageIcon = LanguageIcon;
	exports.LanguageKatakanaIcon = LanguageKatakanaIcon;
	exports.LassoIcon = LassoIcon;
	exports.LayersDifferenceIcon = LayersDifferenceIcon;
	exports.LayersIntersect2Icon = LayersIntersect2Icon;
	exports.LayersIntersectIcon = LayersIntersectIcon;
	exports.LayersLinkedIcon = LayersLinkedIcon;
	exports.LayersSubtractIcon = LayersSubtractIcon;
	exports.LayersUnionIcon = LayersUnionIcon;
	exports.Layout2Icon = Layout2Icon;
	exports.LayoutAlignBottomIcon = LayoutAlignBottomIcon;
	exports.LayoutAlignCenterIcon = LayoutAlignCenterIcon;
	exports.LayoutAlignLeftIcon = LayoutAlignLeftIcon;
	exports.LayoutAlignMiddleIcon = LayoutAlignMiddleIcon;
	exports.LayoutAlignRightIcon = LayoutAlignRightIcon;
	exports.LayoutAlignTopIcon = LayoutAlignTopIcon;
	exports.LayoutBoardIcon = LayoutBoardIcon;
	exports.LayoutBoardSplitIcon = LayoutBoardSplitIcon;
	exports.LayoutBottombarIcon = LayoutBottombarIcon;
	exports.LayoutCardsIcon = LayoutCardsIcon;
	exports.LayoutColumnsIcon = LayoutColumnsIcon;
	exports.LayoutDashboardIcon = LayoutDashboardIcon;
	exports.LayoutDistributeHorizontalIcon = LayoutDistributeHorizontalIcon;
	exports.LayoutDistributeVerticalIcon = LayoutDistributeVerticalIcon;
	exports.LayoutGridAddIcon = LayoutGridAddIcon;
	exports.LayoutGridIcon = LayoutGridIcon;
	exports.LayoutIcon = LayoutIcon;
	exports.LayoutKanbanIcon = LayoutKanbanIcon;
	exports.LayoutListIcon = LayoutListIcon;
	exports.LayoutNavbarIcon = LayoutNavbarIcon;
	exports.LayoutRowsIcon = LayoutRowsIcon;
	exports.LayoutSidebarIcon = LayoutSidebarIcon;
	exports.LayoutSidebarLeftCollapseIcon = LayoutSidebarLeftCollapseIcon;
	exports.LayoutSidebarLeftExpandIcon = LayoutSidebarLeftExpandIcon;
	exports.LayoutSidebarRightCollapseIcon = LayoutSidebarRightCollapseIcon;
	exports.LayoutSidebarRightExpandIcon = LayoutSidebarRightExpandIcon;
	exports.LayoutSidebarRightIcon = LayoutSidebarRightIcon;
	exports.LeafIcon = LeafIcon;
	exports.LegoIcon = LegoIcon;
	exports.Lemon2Icon = Lemon2Icon;
	exports.LemonIcon = LemonIcon;
	exports.LetterAIcon = LetterAIcon;
	exports.LetterBIcon = LetterBIcon;
	exports.LetterCIcon = LetterCIcon;
	exports.LetterCaseIcon = LetterCaseIcon;
	exports.LetterCaseLowerIcon = LetterCaseLowerIcon;
	exports.LetterCaseToggleIcon = LetterCaseToggleIcon;
	exports.LetterCaseUpperIcon = LetterCaseUpperIcon;
	exports.LetterDIcon = LetterDIcon;
	exports.LetterEIcon = LetterEIcon;
	exports.LetterFIcon = LetterFIcon;
	exports.LetterGIcon = LetterGIcon;
	exports.LetterHIcon = LetterHIcon;
	exports.LetterIIcon = LetterIIcon;
	exports.LetterJIcon = LetterJIcon;
	exports.LetterKIcon = LetterKIcon;
	exports.LetterLIcon = LetterLIcon;
	exports.LetterMIcon = LetterMIcon;
	exports.LetterNIcon = LetterNIcon;
	exports.LetterOIcon = LetterOIcon;
	exports.LetterPIcon = LetterPIcon;
	exports.LetterQIcon = LetterQIcon;
	exports.LetterRIcon = LetterRIcon;
	exports.LetterSIcon = LetterSIcon;
	exports.LetterSpacingIcon = LetterSpacingIcon;
	exports.LetterTIcon = LetterTIcon;
	exports.LetterUIcon = LetterUIcon;
	exports.LetterVIcon = LetterVIcon;
	exports.LetterWIcon = LetterWIcon;
	exports.LetterXIcon = LetterXIcon;
	exports.LetterYIcon = LetterYIcon;
	exports.LetterZIcon = LetterZIcon;
	exports.LicenseIcon = LicenseIcon;
	exports.LifebuoyIcon = LifebuoyIcon;
	exports.LineDashedIcon = LineDashedIcon;
	exports.LineDottedIcon = LineDottedIcon;
	exports.LineHeightIcon = LineHeightIcon;
	exports.LineIcon = LineIcon;
	exports.LinkIcon = LinkIcon;
	exports.ListCheckIcon = ListCheckIcon;
	exports.ListDetailsIcon = ListDetailsIcon;
	exports.ListIcon = ListIcon;
	exports.ListNumbersIcon = ListNumbersIcon;
	exports.ListSearchIcon = ListSearchIcon;
	exports.LivePhotoIcon = LivePhotoIcon;
	exports.LiveViewIcon = LiveViewIcon;
	exports.LoaderIcon = LoaderIcon;
	exports.LoaderQuarterIcon = LoaderQuarterIcon;
	exports.LocationIcon = LocationIcon;
	exports.LockAccessIcon = LockAccessIcon;
	exports.LockIcon = LockIcon;
	exports.LockOffIcon = LockOffIcon;
	exports.LockOpenIcon = LockOpenIcon;
	exports.LockSquareIcon = LockSquareIcon;
	exports.LoginIcon = LoginIcon;
	exports.LogoutIcon = LogoutIcon;
	exports.LollipopIcon = LollipopIcon;
	exports.LuggageIcon = LuggageIcon;
	exports.LungsIcon = LungsIcon;
	exports.MacroIcon = MacroIcon;
	exports.MagnetIcon = MagnetIcon;
	exports.MailFastIcon = MailFastIcon;
	exports.MailForwardIcon = MailForwardIcon;
	exports.MailIcon = MailIcon;
	exports.MailOpenedIcon = MailOpenedIcon;
	exports.MailboxIcon = MailboxIcon;
	exports.ManIcon = ManIcon;
	exports.ManualGearboxIcon = ManualGearboxIcon;
	exports.Map2Icon = Map2Icon;
	exports.MapIcon = MapIcon;
	exports.MapPinIcon = MapPinIcon;
	exports.MapPinOffIcon = MapPinOffIcon;
	exports.MapPinsIcon = MapPinsIcon;
	exports.MapSearchIcon = MapSearchIcon;
	exports.MarkdownIcon = MarkdownIcon;
	exports.Marquee2Icon = Marquee2Icon;
	exports.MarqueeIcon = MarqueeIcon;
	exports.MarsIcon = MarsIcon;
	exports.MaskIcon = MaskIcon;
	exports.MaskOffIcon = MaskOffIcon;
	exports.MassageIcon = MassageIcon;
	exports.MathAvgIcon = MathAvgIcon;
	exports.MathFunctionIcon = MathFunctionIcon;
	exports.MathIcon = MathIcon;
	exports.MathMaxIcon = MathMaxIcon;
	exports.MathMinIcon = MathMinIcon;
	exports.MathSymbolsIcon = MathSymbolsIcon;
	exports.MaximizeIcon = MaximizeIcon;
	exports.MeatIcon = MeatIcon;
	exports.Medal2Icon = Medal2Icon;
	exports.MedalIcon = MedalIcon;
	exports.MedicalCrossIcon = MedicalCrossIcon;
	exports.MedicineSyrupIcon = MedicineSyrupIcon;
	exports.Menu2Icon = Menu2Icon;
	exports.MenuIcon = MenuIcon;
	exports.Message2CodeIcon = Message2CodeIcon;
	exports.Message2Icon = Message2Icon;
	exports.Message2ShareIcon = Message2ShareIcon;
	exports.MessageCircle2Icon = MessageCircle2Icon;
	exports.MessageCircleIcon = MessageCircleIcon;
	exports.MessageCircleOffIcon = MessageCircleOffIcon;
	exports.MessageCodeIcon = MessageCodeIcon;
	exports.MessageDotsIcon = MessageDotsIcon;
	exports.MessageIcon = MessageIcon;
	exports.MessageLanguageIcon = MessageLanguageIcon;
	exports.MessageOffIcon = MessageOffIcon;
	exports.MessagePlusIcon = MessagePlusIcon;
	exports.MessageReportIcon = MessageReportIcon;
	exports.MessageShareIcon = MessageShareIcon;
	exports.MessagesIcon = MessagesIcon;
	exports.MessagesOffIcon = MessagesOffIcon;
	exports.Microphone2Icon = Microphone2Icon;
	exports.MicrophoneIcon = MicrophoneIcon;
	exports.MicrophoneOffIcon = MicrophoneOffIcon;
	exports.MicroscopeIcon = MicroscopeIcon;
	exports.MilitaryAwardIcon = MilitaryAwardIcon;
	exports.MilitaryRankIcon = MilitaryRankIcon;
	exports.MilkIcon = MilkIcon;
	exports.MinimizeIcon = MinimizeIcon;
	exports.MinusIcon = MinusIcon;
	exports.MinusVerticalIcon = MinusVerticalIcon;
	exports.MistIcon = MistIcon;
	exports.MoodBoyIcon = MoodBoyIcon;
	exports.MoodConfuzedIcon = MoodConfuzedIcon;
	exports.MoodCrazyHappyIcon = MoodCrazyHappyIcon;
	exports.MoodCryIcon = MoodCryIcon;
	exports.MoodEmptyIcon = MoodEmptyIcon;
	exports.MoodHappyIcon = MoodHappyIcon;
	exports.MoodKidIcon = MoodKidIcon;
	exports.MoodNervousIcon = MoodNervousIcon;
	exports.MoodNeutralIcon = MoodNeutralIcon;
	exports.MoodSadIcon = MoodSadIcon;
	exports.MoodSmileIcon = MoodSmileIcon;
	exports.MoodSuprisedIcon = MoodSuprisedIcon;
	exports.MoodTongueIcon = MoodTongueIcon;
	exports.Moon2Icon = Moon2Icon;
	exports.MoonIcon = MoonIcon;
	exports.MoonStarsIcon = MoonStarsIcon;
	exports.MopedIcon = MopedIcon;
	exports.MotorbikeIcon = MotorbikeIcon;
	exports.MountainIcon = MountainIcon;
	exports.MouseIcon = MouseIcon;
	exports.MovieIcon = MovieIcon;
	exports.MugIcon = MugIcon;
	exports.Multiplier05xIcon = Multiplier05xIcon;
	exports.Multiplier15xIcon = Multiplier15xIcon;
	exports.Multiplier1xIcon = Multiplier1xIcon;
	exports.Multiplier2xIcon = Multiplier2xIcon;
	exports.MushroomIcon = MushroomIcon;
	exports.MusicIcon = MusicIcon;
	exports.NetworkIcon = NetworkIcon;
	exports.NewSectionIcon = NewSectionIcon;
	exports.NewsIcon = NewsIcon;
	exports.NfcIcon = NfcIcon;
	exports.NoCopyrightIcon = NoCopyrightIcon;
	exports.NoCreativeCommonsIcon = NoCreativeCommonsIcon;
	exports.NoDerivativesIcon = NoDerivativesIcon;
	exports.NorthStarIcon = NorthStarIcon;
	exports.NoteIcon = NoteIcon;
	exports.NotebookIcon = NotebookIcon;
	exports.NotesIcon = NotesIcon;
	exports.NotificationIcon = NotificationIcon;
	exports.Number0Icon = Number0Icon;
	exports.Number1Icon = Number1Icon;
	exports.Number2Icon = Number2Icon;
	exports.Number3Icon = Number3Icon;
	exports.Number4Icon = Number4Icon;
	exports.Number5Icon = Number5Icon;
	exports.Number6Icon = Number6Icon;
	exports.Number7Icon = Number7Icon;
	exports.Number8Icon = Number8Icon;
	exports.Number9Icon = Number9Icon;
	exports.NumbersIcon = NumbersIcon;
	exports.NurseIcon = NurseIcon;
	exports.OctagonIcon = OctagonIcon;
	exports.OctagonOffIcon = OctagonOffIcon;
	exports.OldIcon = OldIcon;
	exports.OlympicsIcon = OlympicsIcon;
	exports.OmegaIcon = OmegaIcon;
	exports.OutletIcon = OutletIcon;
	exports.OvalIcon = OvalIcon;
	exports.OvalVerticalIcon = OvalVerticalIcon;
	exports.OverlineIcon = OverlineIcon;
	exports.PackageIcon = PackageIcon;
	exports.PackgeExportIcon = PackgeExportIcon;
	exports.PackgeImportIcon = PackgeImportIcon;
	exports.PacmanIcon = PacmanIcon;
	exports.PageBreakIcon = PageBreakIcon;
	exports.PaintIcon = PaintIcon;
	exports.PaletteIcon = PaletteIcon;
	exports.PanoramaHorizontalIcon = PanoramaHorizontalIcon;
	exports.PanoramaVerticalIcon = PanoramaVerticalIcon;
	exports.PaperBagIcon = PaperBagIcon;
	exports.PaperclipIcon = PaperclipIcon;
	exports.ParachuteIcon = ParachuteIcon;
	exports.ParenthesesIcon = ParenthesesIcon;
	exports.ParkingIcon = ParkingIcon;
	exports.PawIcon = PawIcon;
	exports.PeaceIcon = PeaceIcon;
	exports.PencilIcon = PencilIcon;
	exports.Pennant2Icon = Pennant2Icon;
	exports.PennantIcon = PennantIcon;
	exports.PentagonIcon = PentagonIcon;
	exports.PepperIcon = PepperIcon;
	exports.PercentageIcon = PercentageIcon;
	exports.PerspectiveIcon = PerspectiveIcon;
	exports.PhoneCallIcon = PhoneCallIcon;
	exports.PhoneCallingIcon = PhoneCallingIcon;
	exports.PhoneCheckIcon = PhoneCheckIcon;
	exports.PhoneIcon = PhoneIcon;
	exports.PhoneIncomingIcon = PhoneIncomingIcon;
	exports.PhoneOffIcon = PhoneOffIcon;
	exports.PhoneOutgoingIcon = PhoneOutgoingIcon;
	exports.PhonePauseIcon = PhonePauseIcon;
	exports.PhonePlusIcon = PhonePlusIcon;
	exports.PhoneXIcon = PhoneXIcon;
	exports.PhotoIcon = PhotoIcon;
	exports.PhotoOffIcon = PhotoOffIcon;
	exports.PhysotherapistIcon = PhysotherapistIcon;
	exports.PictureInPictureIcon = PictureInPictureIcon;
	exports.PictureInPictureOffIcon = PictureInPictureOffIcon;
	exports.PictureInPictureOnIcon = PictureInPictureOnIcon;
	exports.PictureInPictureTopIcon = PictureInPictureTopIcon;
	exports.PigIcon = PigIcon;
	exports.PillIcon = PillIcon;
	exports.PillsIcon = PillsIcon;
	exports.PinIcon = PinIcon;
	exports.PinnedIcon = PinnedIcon;
	exports.PinnedOffIcon = PinnedOffIcon;
	exports.PizzaIcon = PizzaIcon;
	exports.PlaneArrivalIcon = PlaneArrivalIcon;
	exports.PlaneDepartureIcon = PlaneDepartureIcon;
	exports.PlaneIcon = PlaneIcon;
	exports.PlaneInflightIcon = PlaneInflightIcon;
	exports.PlanetIcon = PlanetIcon;
	exports.Plant2Icon = Plant2Icon;
	exports.PlantIcon = PlantIcon;
	exports.PlayCardIcon = PlayCardIcon;
	exports.PlayerEjectIcon = PlayerEjectIcon;
	exports.PlayerPauseIcon = PlayerPauseIcon;
	exports.PlayerPlayIcon = PlayerPlayIcon;
	exports.PlayerRecordIcon = PlayerRecordIcon;
	exports.PlayerSkipBackIcon = PlayerSkipBackIcon;
	exports.PlayerSkipForwardIcon = PlayerSkipForwardIcon;
	exports.PlayerStopIcon = PlayerStopIcon;
	exports.PlayerTrackNextIcon = PlayerTrackNextIcon;
	exports.PlayerTrackPrevIcon = PlayerTrackPrevIcon;
	exports.PlaylistAddIcon = PlaylistAddIcon;
	exports.PlaylistIcon = PlaylistIcon;
	exports.PlaylistXIcon = PlaylistXIcon;
	exports.PlugConnectedIcon = PlugConnectedIcon;
	exports.PlugConnectedXIcon = PlugConnectedXIcon;
	exports.PlugIcon = PlugIcon;
	exports.PlugXIcon = PlugXIcon;
	exports.PlusIcon = PlusIcon;
	exports.PointIcon = PointIcon;
	exports.PokeballIcon = PokeballIcon;
	exports.PolaroidIcon = PolaroidIcon;
	exports.PolygonIcon = PolygonIcon;
	exports.PoolIcon = PoolIcon;
	exports.PowerIcon = PowerIcon;
	exports.PrayIcon = PrayIcon;
	exports.PremiumRightsIcon = PremiumRightsIcon;
	exports.PrescriptionIcon = PrescriptionIcon;
	exports.PresentationAnalyticsIcon = PresentationAnalyticsIcon;
	exports.PresentationIcon = PresentationIcon;
	exports.PrinterIcon = PrinterIcon;
	exports.PrisonIcon = PrisonIcon;
	exports.PromptIcon = PromptIcon;
	exports.PropellerIcon = PropellerIcon;
	exports.Puzzle2Icon = Puzzle2Icon;
	exports.PuzzleIcon = PuzzleIcon;
	exports.PyramidIcon = PyramidIcon;
	exports.QrcodeIcon = QrcodeIcon;
	exports.QuestionMarkIcon = QuestionMarkIcon;
	exports.QuoteIcon = QuoteIcon;
	exports.Radar2Icon = Radar2Icon;
	exports.RadarIcon = RadarIcon;
	exports.RadioIcon = RadioIcon;
	exports.RadioactiveIcon = RadioactiveIcon;
	exports.RadiusBottomLeftIcon = RadiusBottomLeftIcon;
	exports.RadiusBottomRightIcon = RadiusBottomRightIcon;
	exports.RadiusTopLeftIcon = RadiusTopLeftIcon;
	exports.RadiusTopRightIcon = RadiusTopRightIcon;
	exports.RainbowIcon = RainbowIcon;
	exports.Receipt2Icon = Receipt2Icon;
	exports.ReceiptIcon = ReceiptIcon;
	exports.ReceiptOffIcon = ReceiptOffIcon;
	exports.ReceiptRefundIcon = ReceiptRefundIcon;
	exports.ReceiptTaxIcon = ReceiptTaxIcon;
	exports.RechargingIcon = RechargingIcon;
	exports.RecordMailIcon = RecordMailIcon;
	exports.RectangleIcon = RectangleIcon;
	exports.RectangleVerticalIcon = RectangleVerticalIcon;
	exports.RecycleIcon = RecycleIcon;
	exports.RefreshAlertIcon = RefreshAlertIcon;
	exports.RefreshDotIcon = RefreshDotIcon;
	exports.RefreshIcon = RefreshIcon;
	exports.RegisteredIcon = RegisteredIcon;
	exports.RelationManyToManyIcon = RelationManyToManyIcon;
	exports.RelationOneToManyIcon = RelationOneToManyIcon;
	exports.RelationOneToOneIcon = RelationOneToOneIcon;
	exports.RepeatIcon = RepeatIcon;
	exports.RepeatOnceIcon = RepeatOnceIcon;
	exports.ReplaceIcon = ReplaceIcon;
	exports.ReportAnalyticsIcon = ReportAnalyticsIcon;
	exports.ReportIcon = ReportIcon;
	exports.ReportMedicalIcon = ReportMedicalIcon;
	exports.ReportMoneyIcon = ReportMoneyIcon;
	exports.ReportSearchIcon = ReportSearchIcon;
	exports.ResizeIcon = ResizeIcon;
	exports.RippleIcon = RippleIcon;
	exports.RoadIcon = RoadIcon;
	exports.RoadSignIcon = RoadSignIcon;
	exports.RobotIcon = RobotIcon;
	exports.RocketIcon = RocketIcon;
	exports.RollerSkatingIcon = RollerSkatingIcon;
	exports.RollercoasterIcon = RollercoasterIcon;
	exports.Rotate2Icon = Rotate2Icon;
	exports.Rotate360Icon = Rotate360Icon;
	exports.RotateClockwise2Icon = RotateClockwise2Icon;
	exports.RotateClockwiseIcon = RotateClockwiseIcon;
	exports.RotateDotIcon = RotateDotIcon;
	exports.RotateIcon = RotateIcon;
	exports.RotateRectangleIcon = RotateRectangleIcon;
	exports.RouteIcon = RouteIcon;
	exports.RouterIcon = RouterIcon;
	exports.RowInsertBottomIcon = RowInsertBottomIcon;
	exports.RowInsertTopIcon = RowInsertTopIcon;
	exports.RssIcon = RssIcon;
	exports.Ruler2Icon = Ruler2Icon;
	exports.RulerIcon = RulerIcon;
	exports.RunIcon = RunIcon;
	exports.SailboatIcon = SailboatIcon;
	exports.SaltIcon = SaltIcon;
	exports.SatelliteIcon = SatelliteIcon;
	exports.SausageIcon = SausageIcon;
	exports.ScaleIcon = ScaleIcon;
	exports.ScaleOutlineIcon = ScaleOutlineIcon;
	exports.ScanIcon = ScanIcon;
	exports.SchoolIcon = SchoolIcon;
	exports.ScissorsIcon = ScissorsIcon;
	exports.ScooterElectricIcon = ScooterElectricIcon;
	exports.ScooterIcon = ScooterIcon;
	exports.ScreenShareIcon = ScreenShareIcon;
	exports.ScreenShareOffIcon = ScreenShareOffIcon;
	exports.ScribbleIcon = ScribbleIcon;
	exports.ScubaMaskIcon = ScubaMaskIcon;
	exports.SearchIcon = SearchIcon;
	exports.SectionIcon = SectionIcon;
	exports.SectionSignIcon = SectionSignIcon;
	exports.SeedingIcon = SeedingIcon;
	exports.SelectIcon = SelectIcon;
	exports.SelectorIcon = SelectorIcon;
	exports.SendIcon = SendIcon;
	exports.SeparatorHorizontalIcon = SeparatorHorizontalIcon;
	exports.SeparatorIcon = SeparatorIcon;
	exports.SeparatorVerticalIcon = SeparatorVerticalIcon;
	exports.Server2Icon = Server2Icon;
	exports.ServerIcon = ServerIcon;
	exports.ServicemarkIcon = ServicemarkIcon;
	exports.SettingsAutomationIcon = SettingsAutomationIcon;
	exports.SettingsIcon = SettingsIcon;
	exports.ShadowIcon = ShadowIcon;
	exports.ShadowOffIcon = ShadowOffIcon;
	exports.Shape2Icon = Shape2Icon;
	exports.Shape3Icon = Shape3Icon;
	exports.ShapeIcon = ShapeIcon;
	exports.ShareIcon = ShareIcon;
	exports.ShieldCheckIcon = ShieldCheckIcon;
	exports.ShieldCheckeredIcon = ShieldCheckeredIcon;
	exports.ShieldChevronIcon = ShieldChevronIcon;
	exports.ShieldIcon = ShieldIcon;
	exports.ShieldLockIcon = ShieldLockIcon;
	exports.ShieldOffIcon = ShieldOffIcon;
	exports.ShieldXIcon = ShieldXIcon;
	exports.ShipIcon = ShipIcon;
	exports.ShirtIcon = ShirtIcon;
	exports.ShoeIcon = ShoeIcon;
	exports.ShoppingCartDiscountIcon = ShoppingCartDiscountIcon;
	exports.ShoppingCartIcon = ShoppingCartIcon;
	exports.ShoppingCartOffIcon = ShoppingCartOffIcon;
	exports.ShoppingCartPlusIcon = ShoppingCartPlusIcon;
	exports.ShoppingCartXIcon = ShoppingCartXIcon;
	exports.ShredderIcon = ShredderIcon;
	exports.SignLeftIcon = SignLeftIcon;
	exports.SignRightIcon = SignRightIcon;
	exports.SignatureIcon = SignatureIcon;
	exports.SitemapIcon = SitemapIcon;
	exports.SkateboardIcon = SkateboardIcon;
	exports.SleighIcon = SleighIcon;
	exports.SliceIcon = SliceIcon;
	exports.SlideshowIcon = SlideshowIcon;
	exports.SmartHomeIcon = SmartHomeIcon;
	exports.SmokingIcon = SmokingIcon;
	exports.SmokingNoIcon = SmokingNoIcon;
	exports.SnowflakeIcon = SnowflakeIcon;
	exports.SoccerFieldIcon = SoccerFieldIcon;
	exports.SocialIcon = SocialIcon;
	exports.SockIcon = SockIcon;
	exports.SofaIcon = SofaIcon;
	exports.SortAscending2Icon = SortAscending2Icon;
	exports.SortAscendingIcon = SortAscendingIcon;
	exports.SortAscendingLettersIcon = SortAscendingLettersIcon;
	exports.SortAscendingNumbersIcon = SortAscendingNumbersIcon;
	exports.SortDescending2Icon = SortDescending2Icon;
	exports.SortDescendingIcon = SortDescendingIcon;
	exports.SortDescendingLettersIcon = SortDescendingLettersIcon;
	exports.SortDescendingNumbersIcon = SortDescendingNumbersIcon;
	exports.SoupIcon = SoupIcon;
	exports.SpaceIcon = SpaceIcon;
	exports.SpacingHorizontalIcon = SpacingHorizontalIcon;
	exports.SpacingVerticalIcon = SpacingVerticalIcon;
	exports.SpadeIcon = SpadeIcon;
	exports.SpeakerphoneIcon = SpeakerphoneIcon;
	exports.SpeedboatIcon = SpeedboatIcon;
	exports.SportBillardIcon = SportBillardIcon;
	exports.Square0Icon = Square0Icon;
	exports.Square1Icon = Square1Icon;
	exports.Square2Icon = Square2Icon;
	exports.Square3Icon = Square3Icon;
	exports.Square4Icon = Square4Icon;
	exports.Square5Icon = Square5Icon;
	exports.Square6Icon = Square6Icon;
	exports.Square7Icon = Square7Icon;
	exports.Square8Icon = Square8Icon;
	exports.Square9Icon = Square9Icon;
	exports.SquareAsteriskIcon = SquareAsteriskIcon;
	exports.SquareCheckIcon = SquareCheckIcon;
	exports.SquareDotIcon = SquareDotIcon;
	exports.SquareForbid2Icon = SquareForbid2Icon;
	exports.SquareForbidIcon = SquareForbidIcon;
	exports.SquareHalfIcon = SquareHalfIcon;
	exports.SquareIcon = SquareIcon;
	exports.SquareMinusIcon = SquareMinusIcon;
	exports.SquareOffIcon = SquareOffIcon;
	exports.SquarePlusIcon = SquarePlusIcon;
	exports.SquareRoot2Icon = SquareRoot2Icon;
	exports.SquareRootIcon = SquareRootIcon;
	exports.SquareRotatedForbid2Icon = SquareRotatedForbid2Icon;
	exports.SquareRotatedForbidIcon = SquareRotatedForbidIcon;
	exports.SquareRotatedIcon = SquareRotatedIcon;
	exports.SquareRotatedOffIcon = SquareRotatedOffIcon;
	exports.SquareToggleHorizontalIcon = SquareToggleHorizontalIcon;
	exports.SquareToggleIcon = SquareToggleIcon;
	exports.SquareXIcon = SquareXIcon;
	exports.SquaresDiagonalIcon = SquaresDiagonalIcon;
	exports.SquaresFilledIcon = SquaresFilledIcon;
	exports.Stack2Icon = Stack2Icon;
	exports.Stack3Icon = Stack3Icon;
	exports.StackIcon = StackIcon;
	exports.StairsDownIcon = StairsDownIcon;
	exports.StairsIcon = StairsIcon;
	exports.StairsUpIcon = StairsUpIcon;
	exports.StarHalfIcon = StarHalfIcon;
	exports.StarIcon = StarIcon;
	exports.StarOffIcon = StarOffIcon;
	exports.StarsIcon = StarsIcon;
	exports.SteeringWheelIcon = SteeringWheelIcon;
	exports.StepIntoIcon = StepIntoIcon;
	exports.StepOutIcon = StepOutIcon;
	exports.StethoscopeIcon = StethoscopeIcon;
	exports.StickerIcon = StickerIcon;
	exports.StrikethroughIcon = StrikethroughIcon;
	exports.SubmarineIcon = SubmarineIcon;
	exports.SubscriptIcon = SubscriptIcon;
	exports.SubtaskIcon = SubtaskIcon;
	exports.SumIcon = SumIcon;
	exports.SunIcon = SunIcon;
	exports.SunOffIcon = SunOffIcon;
	exports.SunriseIcon = SunriseIcon;
	exports.SunsetIcon = SunsetIcon;
	exports.SuperscriptIcon = SuperscriptIcon;
	exports.SwimmingIcon = SwimmingIcon;
	exports.Switch2Icon = Switch2Icon;
	exports.Switch3Icon = Switch3Icon;
	exports.SwitchHorizontalIcon = SwitchHorizontalIcon;
	exports.SwitchIcon = SwitchIcon;
	exports.SwitchVerticalIcon = SwitchVerticalIcon;
	exports.SwordIcon = SwordIcon;
	exports.TableExportIcon = TableExportIcon;
	exports.TableIcon = TableIcon;
	exports.TableImportIcon = TableImportIcon;
	exports.TableOffIcon = TableOffIcon;
	exports.TagIcon = TagIcon;
	exports.TagOffIcon = TagOffIcon;
	exports.TagsIcon = TagsIcon;
	exports.TagsOffIcon = TagsOffIcon;
	exports.Tallymark1Icon = Tallymark1Icon;
	exports.Tallymark2Icon = Tallymark2Icon;
	exports.Tallymark3Icon = Tallymark3Icon;
	exports.Tallymark4Icon = Tallymark4Icon;
	exports.TallymarksIcon = TallymarksIcon;
	exports.TankIcon = TankIcon;
	exports.TargetIcon = TargetIcon;
	exports.TelescopeIcon = TelescopeIcon;
	exports.TemperatureCelsiusIcon = TemperatureCelsiusIcon;
	exports.TemperatureFahrenheitIcon = TemperatureFahrenheitIcon;
	exports.TemperatureIcon = TemperatureIcon;
	exports.TemperatureMinusIcon = TemperatureMinusIcon;
	exports.TemperaturePlusIcon = TemperaturePlusIcon;
	exports.TemplateIcon = TemplateIcon;
	exports.TentIcon = TentIcon;
	exports.Terminal2Icon = Terminal2Icon;
	exports.TerminalIcon = TerminalIcon;
	exports.TestPipe2Icon = TestPipe2Icon;
	exports.TestPipeIcon = TestPipeIcon;
	exports.TextDirectionLtrIcon = TextDirectionLtrIcon;
	exports.TextDirectionRtlIcon = TextDirectionRtlIcon;
	exports.TextResizeIcon = TextResizeIcon;
	exports.TextWrapDisabledIcon = TextWrapDisabledIcon;
	exports.TextWrapIcon = TextWrapIcon;
	exports.ThermometerIcon = ThermometerIcon;
	exports.ThreedCubeSphereIcon = ThreedCubeSphereIcon;
	exports.ThreedRotateIcon = ThreedRotateIcon;
	exports.ThumbDownIcon = ThumbDownIcon;
	exports.ThumbUpIcon = ThumbUpIcon;
	exports.TicketIcon = TicketIcon;
	exports.TieIcon = TieIcon;
	exports.TiltShiftIcon = TiltShiftIcon;
	exports.TimelineIcon = TimelineIcon;
	exports.TirIcon = TirIcon;
	exports.ToggleLeftIcon = ToggleLeftIcon;
	exports.ToggleRightIcon = ToggleRightIcon;
	exports.ToiletPaperIcon = ToiletPaperIcon;
	exports.ToolIcon = ToolIcon;
	exports.ToolsIcon = ToolsIcon;
	exports.ToolsKitchen2Icon = ToolsKitchen2Icon;
	exports.ToolsKitchenIcon = ToolsKitchenIcon;
	exports.TornadoIcon = TornadoIcon;
	exports.TournamentIcon = TournamentIcon;
	exports.TrackIcon = TrackIcon;
	exports.TractorIcon = TractorIcon;
	exports.TrademarkIcon = TrademarkIcon;
	exports.TrafficConeIcon = TrafficConeIcon;
	exports.TrafficLightsIcon = TrafficLightsIcon;
	exports.TrainIcon = TrainIcon;
	exports.TransferInIcon = TransferInIcon;
	exports.TransferOutIcon = TransferOutIcon;
	exports.TrashIcon = TrashIcon;
	exports.TrashOffIcon = TrashOffIcon;
	exports.TrashXIcon = TrashXIcon;
	exports.TreeIcon = TreeIcon;
	exports.TreesIcon = TreesIcon;
	exports.TrendingDown2Icon = TrendingDown2Icon;
	exports.TrendingDown3Icon = TrendingDown3Icon;
	exports.TrendingDownIcon = TrendingDownIcon;
	exports.TrendingUp2Icon = TrendingUp2Icon;
	exports.TrendingUp3Icon = TrendingUp3Icon;
	exports.TrendingUpIcon = TrendingUpIcon;
	exports.TriangleIcon = TriangleIcon;
	exports.TriangleInvertedIcon = TriangleInvertedIcon;
	exports.TriangleOffIcon = TriangleOffIcon;
	exports.TriangleSquareCircleIcon = TriangleSquareCircleIcon;
	exports.TrianglesIcon = TrianglesIcon;
	exports.TridentIcon = TridentIcon;
	exports.TrophyIcon = TrophyIcon;
	exports.TruckDeliveryIcon = TruckDeliveryIcon;
	exports.TruckIcon = TruckIcon;
	exports.TruckOffIcon = TruckOffIcon;
	exports.TruckReturnIcon = TruckReturnIcon;
	exports.TwoFactorAuthIcon = TwoFactorAuthIcon;
	exports.TypographyIcon = TypographyIcon;
	exports.UmbrellaIcon = UmbrellaIcon;
	exports.UnderlineIcon = UnderlineIcon;
	exports.UnlinkIcon = UnlinkIcon;
	exports.UploadIcon = UploadIcon;
	exports.UrgentIcon = UrgentIcon;
	exports.UsbIcon = UsbIcon;
	exports.UserCheckIcon = UserCheckIcon;
	exports.UserCircleIcon = UserCircleIcon;
	exports.UserExclamationIcon = UserExclamationIcon;
	exports.UserIcon = UserIcon;
	exports.UserMinusIcon = UserMinusIcon;
	exports.UserOffIcon = UserOffIcon;
	exports.UserPlusIcon = UserPlusIcon;
	exports.UserSearchIcon = UserSearchIcon;
	exports.UserXIcon = UserXIcon;
	exports.UsersIcon = UsersIcon;
	exports.VaccineBottleIcon = VaccineBottleIcon;
	exports.VaccineIcon = VaccineIcon;
	exports.VariableIcon = VariableIcon;
	exports.VectorBeizer2Icon = VectorBeizer2Icon;
	exports.VectorBezierIcon = VectorBezierIcon;
	exports.VectorIcon = VectorIcon;
	exports.VectorTriangleIcon = VectorTriangleIcon;
	exports.VenusIcon = VenusIcon;
	exports.VersionsIcon = VersionsIcon;
	exports.VideoIcon = VideoIcon;
	exports.VideoMinusIcon = VideoMinusIcon;
	exports.VideoOffIcon = VideoOffIcon;
	exports.VideoPlusIcon = VideoPlusIcon;
	exports.View360Icon = View360Icon;
	exports.ViewfinderIcon = ViewfinderIcon;
	exports.ViewportNarrowIcon = ViewportNarrowIcon;
	exports.ViewportWideIcon = ViewportWideIcon;
	exports.VinylIcon = VinylIcon;
	exports.VirusIcon = VirusIcon;
	exports.VirusOffIcon = VirusOffIcon;
	exports.VirusSearchIcon = VirusSearchIcon;
	exports.VocabularyIcon = VocabularyIcon;
	exports.Volume2Icon = Volume2Icon;
	exports.Volume3Icon = Volume3Icon;
	exports.VolumeIcon = VolumeIcon;
	exports.WalkIcon = WalkIcon;
	exports.WallIcon = WallIcon;
	exports.WalletIcon = WalletIcon;
	exports.WallpaperIcon = WallpaperIcon;
	exports.WandIcon = WandIcon;
	exports.WaveSawToolIcon = WaveSawToolIcon;
	exports.WaveSineIcon = WaveSineIcon;
	exports.WaveSquareIcon = WaveSquareIcon;
	exports.WebhookIcon = WebhookIcon;
	exports.Wifi0Icon = Wifi0Icon;
	exports.Wifi1Icon = Wifi1Icon;
	exports.Wifi2Icon = Wifi2Icon;
	exports.WifiIcon = WifiIcon;
	exports.WifiOffIcon = WifiOffIcon;
	exports.WindIcon = WindIcon;
	exports.WindmillIcon = WindmillIcon;
	exports.WindowIcon = WindowIcon;
	exports.WindsockIcon = WindsockIcon;
	exports.WiperIcon = WiperIcon;
	exports.WiperWashIcon = WiperWashIcon;
	exports.WomanIcon = WomanIcon;
	exports.WorldDownloadIcon = WorldDownloadIcon;
	exports.WorldIcon = WorldIcon;
	exports.WorldLatitudeIcon = WorldLatitudeIcon;
	exports.WorldLongitudeIcon = WorldLongitudeIcon;
	exports.WorldUploadIcon = WorldUploadIcon;
	exports.WreckingBallIcon = WreckingBallIcon;
	exports.WritingIcon = WritingIcon;
	exports.WritingSignIcon = WritingSignIcon;
	exports.XIcon = XIcon;
	exports.YinYangIcon = YinYangIcon;
	exports.YogaIcon = YogaIcon;
	exports.ZodiacAquariusIcon = ZodiacAquariusIcon;
	exports.ZodiacAriesIcon = ZodiacAriesIcon;
	exports.ZodiacCancerIcon = ZodiacCancerIcon;
	exports.ZodiacCapricornIcon = ZodiacCapricornIcon;
	exports.ZodiacGeminiIcon = ZodiacGeminiIcon;
	exports.ZodiacLeoIcon = ZodiacLeoIcon;
	exports.ZodiacLibraIcon = ZodiacLibraIcon;
	exports.ZodiacPiscesIcon = ZodiacPiscesIcon;
	exports.ZodiacSagittariusIcon = ZodiacSagittariusIcon;
	exports.ZodiacScorpioIcon = ZodiacScorpioIcon;
	exports.ZodiacTaurusIcon = ZodiacTaurusIcon;
	exports.ZodiacVirgoIcon = ZodiacVirgoIcon;
	exports.ZoomCancelIcon = ZoomCancelIcon;
	exports.ZoomCheckIcon = ZoomCheckIcon;
	exports.ZoomCodeIcon = ZoomCodeIcon;
	exports.ZoomExclamationIcon = ZoomExclamationIcon;
	exports.ZoomInIcon = ZoomInIcon;
	exports.ZoomMoneyIcon = ZoomMoneyIcon;
	exports.ZoomOutIcon = ZoomOutIcon;
	exports.ZoomQuestionIcon = ZoomQuestionIcon;
	exports['default'] = index;
} (vueTablerIcons));

const suspectProtoRx = /"(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])"\s*:/;
const suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
const JsonSigRx = /^["{[]|^-?[0-9][0-9.]{0,14}$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor") {
    return;
  }
  return value;
}
function destr(val) {
  if (typeof val !== "string") {
    return val;
  }
  const _lval = val.toLowerCase();
  if (_lval === "true") {
    return true;
  }
  if (_lval === "false") {
    return false;
  }
  if (_lval === "null") {
    return null;
  }
  if (_lval === "nan") {
    return NaN;
  }
  if (_lval === "infinity") {
    return Infinity;
  }
  if (_lval === "undefined") {
    return void 0;
  }
  if (!JsonSigRx.test(val)) {
    return val;
  }
  try {
    if (suspectProtoRx.test(val) || suspectConstructorRx.test(val)) {
      return JSON.parse(val, jsonParseTransform);
    }
    return JSON.parse(val);
  } catch (_e) {
    return val;
  }
}
class FetchError extends Error {
  constructor() {
    super(...arguments);
    this.name = "FetchError";
  }
}
function createFetchError(request, error, response) {
  let message = "";
  if (request && response) {
    message = `${response.status} ${response.statusText} (${request.toString()})`;
  }
  if (error) {
    message = `${error.message} (${message})`;
  }
  const fetchError = new FetchError(message);
  Object.defineProperty(fetchError, "request", { get() {
    return request;
  } });
  Object.defineProperty(fetchError, "response", { get() {
    return response;
  } });
  Object.defineProperty(fetchError, "data", { get() {
    return response && response._data;
  } });
  return fetchError;
}
const payloadMethods = new Set(Object.freeze(["PATCH", "POST", "PUT", "DELETE"]));
function isPayloadMethod(method = "GET") {
  return payloadMethods.has(method.toUpperCase());
}
function isJSONSerializable(val) {
  if (val === void 0) {
    return false;
  }
  const t = typeof val;
  if (t === "string" || t === "number" || t === "boolean" || t === null) {
    return true;
  }
  if (t !== "object") {
    return false;
  }
  if (Array.isArray(val)) {
    return true;
  }
  return val.constructor && val.constructor.name === "Object" || typeof val.toJSON === "function";
}
const textTypes = /* @__PURE__ */ new Set([
  "image/svg",
  "application/xml",
  "application/xhtml",
  "application/html"
]);
const JSON_RE = /^application\/(?:[\w!#$%&*`\-.^~]*\+)?json(;.+)?$/i;
function detectResponseType(_contentType = "") {
  if (!_contentType) {
    return "json";
  }
  const contentType = _contentType.split(";").shift();
  if (JSON_RE.test(contentType)) {
    return "json";
  }
  if (textTypes.has(contentType) || contentType.startsWith("text/")) {
    return "text";
  }
  return "blob";
}
const retryStatusCodes = /* @__PURE__ */ new Set([
  408,
  409,
  425,
  429,
  500,
  502,
  503,
  504
]);
function createFetch(globalOptions) {
  const { fetch: fetch2, Headers: Headers2 } = globalOptions;
  function onError(ctx) {
    if (ctx.options.retry !== false) {
      const retries = typeof ctx.options.retry === "number" ? ctx.options.retry : isPayloadMethod(ctx.options.method) ? 0 : 1;
      const responseCode = ctx.response && ctx.response.status || 500;
      if (retries > 0 && retryStatusCodes.has(responseCode)) {
        return $fetchRaw(ctx.request, {
          ...ctx.options,
          retry: retries - 1
        });
      }
    }
    const err = createFetchError(ctx.request, ctx.error, ctx.response);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(err, $fetchRaw);
    }
    throw err;
  }
  const $fetchRaw = async function $fetchRaw2(_request, _opts = {}) {
    const ctx = {
      request: _request,
      options: { ...globalOptions.defaults, ..._opts },
      response: void 0,
      error: void 0
    };
    if (ctx.options.onRequest) {
      await ctx.options.onRequest(ctx);
    }
    if (typeof ctx.request === "string") {
      if (ctx.options.baseURL) {
        ctx.request = withBase(ctx.request, ctx.options.baseURL);
      }
      if (ctx.options.params) {
        ctx.request = withQuery(ctx.request, ctx.options.params);
      }
      if (ctx.options.body && isPayloadMethod(ctx.options.method)) {
        if (isJSONSerializable(ctx.options.body)) {
          ctx.options.body = typeof ctx.options.body === "string" ? ctx.options.body : JSON.stringify(ctx.options.body);
          ctx.options.headers = new Headers2(ctx.options.headers);
          if (!ctx.options.headers.has("content-type")) {
            ctx.options.headers.set("content-type", "application/json");
          }
          if (!ctx.options.headers.has("accept")) {
            ctx.options.headers.set("accept", "application/json");
          }
        }
      }
    }
    ctx.response = await fetch2(ctx.request, ctx.options).catch(async (error) => {
      ctx.error = error;
      if (ctx.options.onRequestError) {
        await ctx.options.onRequestError(ctx);
      }
      return onError(ctx);
    });
    const responseType = (ctx.options.parseResponse ? "json" : ctx.options.responseType) || detectResponseType(ctx.response.headers.get("content-type") || "");
    if (responseType === "json") {
      const data = await ctx.response.text();
      const parseFn = ctx.options.parseResponse || destr;
      ctx.response._data = parseFn(data);
    } else {
      ctx.response._data = await ctx.response[responseType]();
    }
    if (ctx.options.onResponse) {
      await ctx.options.onResponse(ctx);
    }
    if (!ctx.response.ok) {
      if (ctx.options.onResponseError) {
        await ctx.options.onResponseError(ctx);
      }
    }
    return ctx.response.ok ? ctx.response : onError(ctx);
  };
  const $fetch2 = function $fetch22(request, opts) {
    return $fetchRaw(request, opts).then((r) => r._data);
  };
  $fetch2.raw = $fetchRaw;
  $fetch2.create = (defaultOptions = {}) => createFetch({
    ...globalOptions,
    defaults: {
      ...globalOptions.defaults,
      ...defaultOptions
    }
  });
  return $fetch2;
}
const _globalThis$2 = function() {
  if (typeof globalThis !== "undefined") {
    return globalThis;
  }
  if (typeof self !== "undefined") {
    return self;
  }
  if (typeof global !== "undefined") {
    return global;
  }
  throw new Error("unable to locate global object");
}();
const fetch = _globalThis$2.fetch || (() => Promise.reject(new Error("[ohmyfetch] global.fetch is not supported!")));
const Headers = _globalThis$2.Headers;
const $fetch$1 = createFetch({ fetch, Headers });
const appConfig = useRuntimeConfig$1().app;
const baseURL = () => appConfig.baseURL;
function flatHooks(configHooks, hooks = {}, parentName) {
  for (const key in configHooks) {
    const subHook = configHooks[key];
    const name = parentName ? `${parentName}:${key}` : key;
    if (typeof subHook === "object" && subHook !== null) {
      flatHooks(subHook, hooks, name);
    } else if (typeof subHook === "function") {
      hooks[name] = subHook;
    }
  }
  return hooks;
}
function serialCaller(hooks, args) {
  return hooks.reduce((promise, hookFn) => promise.then(() => hookFn.apply(void 0, args)), Promise.resolve(null));
}
function parallelCaller(hooks, args) {
  return Promise.all(hooks.map((hook) => hook.apply(void 0, args)));
}
class Hookable {
  constructor() {
    this._hooks = {};
    this._deprecatedHooks = {};
    this.hook = this.hook.bind(this);
    this.callHook = this.callHook.bind(this);
    this.callHookWith = this.callHookWith.bind(this);
  }
  hook(name, fn) {
    if (!name || typeof fn !== "function") {
      return () => {
      };
    }
    const originalName = name;
    let deprecatedHookObj;
    while (this._deprecatedHooks[name]) {
      const deprecatedHook = this._deprecatedHooks[name];
      if (typeof deprecatedHook === "string") {
        deprecatedHookObj = { to: deprecatedHook };
      } else {
        deprecatedHookObj = deprecatedHook;
      }
      name = deprecatedHookObj.to;
    }
    if (deprecatedHookObj) {
      if (!deprecatedHookObj.message) {
        console.warn(`${originalName} hook has been deprecated` + (deprecatedHookObj.to ? `, please use ${deprecatedHookObj.to}` : ""));
      } else {
        console.warn(deprecatedHookObj.message);
      }
    }
    this._hooks[name] = this._hooks[name] || [];
    this._hooks[name].push(fn);
    return () => {
      if (fn) {
        this.removeHook(name, fn);
        fn = null;
      }
    };
  }
  hookOnce(name, fn) {
    let _unreg;
    let _fn = (...args) => {
      _unreg();
      _unreg = null;
      _fn = null;
      return fn(...args);
    };
    _unreg = this.hook(name, _fn);
    return _unreg;
  }
  removeHook(name, fn) {
    if (this._hooks[name]) {
      const idx = this._hooks[name].indexOf(fn);
      if (idx !== -1) {
        this._hooks[name].splice(idx, 1);
      }
      if (this._hooks[name].length === 0) {
        delete this._hooks[name];
      }
    }
  }
  deprecateHook(name, deprecated) {
    this._deprecatedHooks[name] = deprecated;
  }
  deprecateHooks(deprecatedHooks) {
    Object.assign(this._deprecatedHooks, deprecatedHooks);
  }
  addHooks(configHooks) {
    const hooks = flatHooks(configHooks);
    const removeFns = Object.keys(hooks).map((key) => this.hook(key, hooks[key]));
    return () => {
      removeFns.splice(0, removeFns.length).forEach((unreg) => unreg());
    };
  }
  removeHooks(configHooks) {
    const hooks = flatHooks(configHooks);
    for (const key in hooks) {
      this.removeHook(key, hooks[key]);
    }
  }
  callHook(name, ...args) {
    return serialCaller(this._hooks[name] || [], args);
  }
  callHookParallel(name, ...args) {
    return parallelCaller(this._hooks[name] || [], args);
  }
  callHookWith(caller, name, ...args) {
    return caller(this._hooks[name] || [], args);
  }
}
function createHooks() {
  return new Hookable();
}
function createContext() {
  let currentInstance = null;
  let isSingleton = false;
  const checkConflict = (instance) => {
    if (currentInstance && currentInstance !== instance) {
      throw new Error("Context conflict");
    }
  };
  return {
    use: () => currentInstance,
    set: (instance, replace) => {
      if (!replace) {
        checkConflict(instance);
      }
      currentInstance = instance;
      isSingleton = true;
    },
    unset: () => {
      currentInstance = null;
      isSingleton = false;
    },
    call: (instance, cb) => {
      checkConflict(instance);
      currentInstance = instance;
      try {
        return cb();
      } finally {
        if (!isSingleton) {
          currentInstance = null;
        }
      }
    },
    async callAsync(instance, cb) {
      currentInstance = instance;
      const onRestore = () => {
        currentInstance = instance;
      };
      const onLeave = () => currentInstance === instance ? onRestore : void 0;
      asyncHandlers.add(onLeave);
      try {
        const r = cb();
        if (!isSingleton) {
          currentInstance = null;
        }
        return await r;
      } finally {
        asyncHandlers.delete(onLeave);
      }
    }
  };
}
function createNamespace() {
  const contexts = {};
  return {
    get(key) {
      if (!contexts[key]) {
        contexts[key] = createContext();
      }
      contexts[key];
      return contexts[key];
    }
  };
}
const _globalThis$1 = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof global !== "undefined" ? global : {};
const globalKey = "__unctx__";
const defaultNamespace = _globalThis$1[globalKey] || (_globalThis$1[globalKey] = createNamespace());
const getContext = (key) => defaultNamespace.get(key);
const asyncHandlersKey = "__unctx_async_handlers__";
const asyncHandlers = _globalThis$1[asyncHandlersKey] || (_globalThis$1[asyncHandlersKey] = /* @__PURE__ */ new Set());
function executeAsync(fn) {
  const restores = [];
  for (const leaveHandler of asyncHandlers) {
    const restore2 = leaveHandler();
    if (restore2) {
      restores.push(restore2);
    }
  }
  const restore = () => {
    for (const restore2 of restores) {
      restore2();
    }
  };
  return [fn(), restore];
}
function createMock(name, overrides = {}) {
  const fn = function() {
  };
  fn.prototype.name = name;
  const props = {};
  return new Proxy(fn, {
    get(_target, prop) {
      if (prop === "caller") {
        return null;
      }
      if (prop === "__createMock__") {
        return createMock;
      }
      if (prop in overrides) {
        return overrides[prop];
      }
      return props[prop] = props[prop] || createMock(`${name}.${prop.toString()}`);
    },
    apply(_target, _this, _args) {
      return createMock(`${name}()`);
    },
    construct(_target, _args, _newT) {
      return createMock(`[${name}]`);
    },
    enumerate(_target) {
      return [];
    }
  });
}
const mockContext = createMock("mock");
function mock(warning) {
  console.warn(warning);
  return mockContext;
}
const unsupported = /* @__PURE__ */ new Set([
  "store",
  "spa",
  "fetchCounters"
]);
const todo = /* @__PURE__ */ new Set([
  "isHMR",
  "base",
  "payload",
  "from",
  "next",
  "error",
  "redirect",
  "redirected",
  "enablePreview",
  "$preview",
  "beforeNuxtRender",
  "beforeSerialize"
]);
const routerKeys = ["route", "params", "query"];
const staticFlags = {
  isClient: false,
  isServer: true,
  isDev: false,
  isStatic: void 0,
  target: "server",
  modern: false
};
const legacyPlugin = (nuxtApp) => {
  nuxtApp._legacyContext = new Proxy(nuxtApp, {
    get(nuxt, p) {
      if (unsupported.has(p)) {
        return mock(`Accessing ${p} is not supported in Nuxt 3.`);
      }
      if (todo.has(p)) {
        return mock(`Accessing ${p} is not yet supported in Nuxt 3.`);
      }
      if (routerKeys.includes(p)) {
        if (!("$router" in nuxtApp)) {
          return mock("vue-router is not being used in this project.");
        }
        switch (p) {
          case "route":
            return nuxt.$router.currentRoute.value;
          case "params":
          case "query":
            return nuxt.$router.currentRoute.value[p];
        }
      }
      if (p === "$config" || p === "env") {
        return useRuntimeConfig();
      }
      if (p in staticFlags) {
        return staticFlags[p];
      }
      if (p === "ssrContext") {
        return nuxt._legacyContext;
      }
      if (nuxt.ssrContext && p in nuxt.ssrContext) {
        return nuxt.ssrContext[p];
      }
      if (p === "nuxt") {
        return nuxt.payload;
      }
      if (p === "nuxtState") {
        return nuxt.payload.data;
      }
      if (p in nuxtApp.vueApp) {
        return nuxtApp.vueApp[p];
      }
      if (p in nuxtApp) {
        return nuxtApp[p];
      }
      return mock(`Accessing ${p} is not supported in Nuxt3.`);
    }
  });
};
const nuxtAppCtx = getContext("nuxt-app");
const NuxtPluginIndicator = "__nuxt_plugin";
function createNuxtApp(options) {
  const nuxtApp = {
    provide: void 0,
    globalName: "nuxt",
    payload: vue_cjs_prod.reactive({
      data: {},
      state: {},
      _errors: {},
      ...{ serverRendered: true }
    }),
    isHydrating: false,
    _asyncDataPromises: {},
    ...options
  };
  nuxtApp.hooks = createHooks();
  nuxtApp.hook = nuxtApp.hooks.hook;
  nuxtApp.callHook = nuxtApp.hooks.callHook;
  nuxtApp.provide = (name, value) => {
    const $name = "$" + name;
    defineGetter(nuxtApp, $name, value);
    defineGetter(nuxtApp.vueApp.config.globalProperties, $name, value);
  };
  defineGetter(nuxtApp.vueApp, "$nuxt", nuxtApp);
  defineGetter(nuxtApp.vueApp.config.globalProperties, "$nuxt", nuxtApp);
  if (nuxtApp.ssrContext) {
    nuxtApp.ssrContext.nuxt = nuxtApp;
  }
  {
    nuxtApp.ssrContext = nuxtApp.ssrContext || {};
    nuxtApp.ssrContext.payload = nuxtApp.payload;
  }
  {
    nuxtApp.payload.config = {
      public: options.ssrContext.runtimeConfig.public,
      app: options.ssrContext.runtimeConfig.app
    };
  }
  const runtimeConfig = options.ssrContext.runtimeConfig;
  const compatibilityConfig = new Proxy(runtimeConfig, {
    get(target, prop) {
      var _a;
      if (prop === "public") {
        return target.public;
      }
      return (_a = target[prop]) != null ? _a : target.public[prop];
    },
    set(target, prop, value) {
      {
        return false;
      }
    }
  });
  nuxtApp.provide("config", compatibilityConfig);
  return nuxtApp;
}
async function applyPlugin(nuxtApp, plugin) {
  if (typeof plugin !== "function") {
    return;
  }
  const { provide: provide2 } = await callWithNuxt(nuxtApp, plugin, [nuxtApp]) || {};
  if (provide2 && typeof provide2 === "object") {
    for (const key in provide2) {
      nuxtApp.provide(key, provide2[key]);
    }
  }
}
async function applyPlugins(nuxtApp, plugins2) {
  for (const plugin of plugins2) {
    await applyPlugin(nuxtApp, plugin);
  }
}
function normalizePlugins(_plugins2) {
  let needsLegacyContext = false;
  const plugins2 = _plugins2.map((plugin) => {
    if (typeof plugin !== "function") {
      return () => {
      };
    }
    if (isLegacyPlugin(plugin)) {
      needsLegacyContext = true;
      return (nuxtApp) => plugin(nuxtApp._legacyContext, nuxtApp.provide);
    }
    return plugin;
  });
  if (needsLegacyContext) {
    plugins2.unshift(legacyPlugin);
  }
  return plugins2;
}
function defineNuxtPlugin(plugin) {
  plugin[NuxtPluginIndicator] = true;
  return plugin;
}
function isLegacyPlugin(plugin) {
  return !plugin[NuxtPluginIndicator];
}
function callWithNuxt(nuxt, setup, args) {
  const fn = () => args ? setup(...args) : setup();
  {
    return nuxtAppCtx.callAsync(nuxt, fn);
  }
}
function useNuxtApp() {
  const vm = vue_cjs_prod.getCurrentInstance();
  if (!vm) {
    const nuxtAppInstance = nuxtAppCtx.use();
    if (!nuxtAppInstance) {
      throw new Error("nuxt instance unavailable");
    }
    return nuxtAppInstance;
  }
  return vm.appContext.app.$nuxt;
}
function useRuntimeConfig() {
  return useNuxtApp().$config;
}
function defineGetter(obj, key, val) {
  Object.defineProperty(obj, key, { get: () => val });
}
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
var vueRouter_cjs_prod = {};
/*!
  * vue-router v4.0.16
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  var vue = require$$0;
  const hasSymbol = typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol";
  const PolySymbol = (name) => hasSymbol ? Symbol(name) : "_vr_" + name;
  const matchedRouteKey = /* @__PURE__ */ PolySymbol("rvlm");
  const viewDepthKey = /* @__PURE__ */ PolySymbol("rvd");
  const routerKey = /* @__PURE__ */ PolySymbol("r");
  const routeLocationKey = /* @__PURE__ */ PolySymbol("rl");
  const routerViewLocationKey = /* @__PURE__ */ PolySymbol("rvl");
  function isESModule(obj) {
    return obj.__esModule || hasSymbol && obj[Symbol.toStringTag] === "Module";
  }
  const assign = Object.assign;
  function applyToParams(fn, params) {
    const newParams = {};
    for (const key in params) {
      const value = params[key];
      newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);
    }
    return newParams;
  }
  const noop = () => {
  };
  const TRAILING_SLASH_RE = /\/$/;
  const removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, "");
  function parseURL(parseQuery2, location2, currentLocation = "/") {
    let path, query = {}, searchString = "", hash2 = "";
    const searchPos = location2.indexOf("?");
    const hashPos = location2.indexOf("#", searchPos > -1 ? searchPos : 0);
    if (searchPos > -1) {
      path = location2.slice(0, searchPos);
      searchString = location2.slice(searchPos + 1, hashPos > -1 ? hashPos : location2.length);
      query = parseQuery2(searchString);
    }
    if (hashPos > -1) {
      path = path || location2.slice(0, hashPos);
      hash2 = location2.slice(hashPos, location2.length);
    }
    path = resolveRelativePath(path != null ? path : location2, currentLocation);
    return {
      fullPath: path + (searchString && "?") + searchString + hash2,
      path,
      query,
      hash: hash2
    };
  }
  function stringifyURL(stringifyQuery2, location2) {
    const query = location2.query ? stringifyQuery2(location2.query) : "";
    return location2.path + (query && "?") + query + (location2.hash || "");
  }
  function stripBase(pathname, base) {
    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))
      return pathname;
    return pathname.slice(base.length) || "/";
  }
  function isSameRouteLocation(stringifyQuery2, a, b) {
    const aLastIndex = a.matched.length - 1;
    const bLastIndex = b.matched.length - 1;
    return aLastIndex > -1 && aLastIndex === bLastIndex && isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) && isSameRouteLocationParams(a.params, b.params) && stringifyQuery2(a.query) === stringifyQuery2(b.query) && a.hash === b.hash;
  }
  function isSameRouteRecord(a, b) {
    return (a.aliasOf || a) === (b.aliasOf || b);
  }
  function isSameRouteLocationParams(a, b) {
    if (Object.keys(a).length !== Object.keys(b).length)
      return false;
    for (const key in a) {
      if (!isSameRouteLocationParamsValue(a[key], b[key]))
        return false;
    }
    return true;
  }
  function isSameRouteLocationParamsValue(a, b) {
    return Array.isArray(a) ? isEquivalentArray(a, b) : Array.isArray(b) ? isEquivalentArray(b, a) : a === b;
  }
  function isEquivalentArray(a, b) {
    return Array.isArray(b) ? a.length === b.length && a.every((value, i) => value === b[i]) : a.length === 1 && a[0] === b;
  }
  function resolveRelativePath(to, from) {
    if (to.startsWith("/"))
      return to;
    if (!to)
      return from;
    const fromSegments = from.split("/");
    const toSegments = to.split("/");
    let position = fromSegments.length - 1;
    let toPosition;
    let segment;
    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {
      segment = toSegments[toPosition];
      if (position === 1 || segment === ".")
        continue;
      if (segment === "..")
        position--;
      else
        break;
    }
    return fromSegments.slice(0, position).join("/") + "/" + toSegments.slice(toPosition - (toPosition === toSegments.length ? 1 : 0)).join("/");
  }
  var NavigationType;
  (function(NavigationType2) {
    NavigationType2["pop"] = "pop";
    NavigationType2["push"] = "push";
  })(NavigationType || (NavigationType = {}));
  var NavigationDirection;
  (function(NavigationDirection2) {
    NavigationDirection2["back"] = "back";
    NavigationDirection2["forward"] = "forward";
    NavigationDirection2["unknown"] = "";
  })(NavigationDirection || (NavigationDirection = {}));
  const START = "";
  function normalizeBase(base) {
    if (!base) {
      {
        base = "/";
      }
    }
    if (base[0] !== "/" && base[0] !== "#")
      base = "/" + base;
    return removeTrailingSlash(base);
  }
  const BEFORE_HASH_RE = /^[^#]+#/;
  function createHref(base, location2) {
    return base.replace(BEFORE_HASH_RE, "#") + location2;
  }
  const computeScrollPosition = () => ({
    left: window.pageXOffset,
    top: window.pageYOffset
  });
  let createBaseLocation = () => location.protocol + "//" + location.host;
  function createCurrentLocation(base, location2) {
    const { pathname, search, hash: hash2 } = location2;
    const hashPos = base.indexOf("#");
    if (hashPos > -1) {
      let slicePos = hash2.includes(base.slice(hashPos)) ? base.slice(hashPos).length : 1;
      let pathFromHash = hash2.slice(slicePos);
      if (pathFromHash[0] !== "/")
        pathFromHash = "/" + pathFromHash;
      return stripBase(pathFromHash, "");
    }
    const path = stripBase(pathname, base);
    return path + search + hash2;
  }
  function useHistoryListeners(base, historyState, currentLocation, replace) {
    let listeners = [];
    let teardowns = [];
    let pauseState = null;
    const popStateHandler = ({ state }) => {
      const to = createCurrentLocation(base, location);
      const from = currentLocation.value;
      const fromState = historyState.value;
      let delta = 0;
      if (state) {
        currentLocation.value = to;
        historyState.value = state;
        if (pauseState && pauseState === from) {
          pauseState = null;
          return;
        }
        delta = fromState ? state.position - fromState.position : 0;
      } else {
        replace(to);
      }
      listeners.forEach((listener) => {
        listener(currentLocation.value, from, {
          delta,
          type: NavigationType.pop,
          direction: delta ? delta > 0 ? NavigationDirection.forward : NavigationDirection.back : NavigationDirection.unknown
        });
      });
    };
    function pauseListeners() {
      pauseState = currentLocation.value;
    }
    function listen(callback) {
      listeners.push(callback);
      const teardown = () => {
        const index2 = listeners.indexOf(callback);
        if (index2 > -1)
          listeners.splice(index2, 1);
      };
      teardowns.push(teardown);
      return teardown;
    }
    function beforeUnloadListener() {
      const { history: history2 } = window;
      if (!history2.state)
        return;
      history2.replaceState(assign({}, history2.state, { scroll: computeScrollPosition() }), "");
    }
    function destroy() {
      for (const teardown of teardowns)
        teardown();
      teardowns = [];
      window.removeEventListener("popstate", popStateHandler);
      window.removeEventListener("beforeunload", beforeUnloadListener);
    }
    window.addEventListener("popstate", popStateHandler);
    window.addEventListener("beforeunload", beforeUnloadListener);
    return {
      pauseListeners,
      listen,
      destroy
    };
  }
  function buildState(back, current, forward, replaced = false, computeScroll = false) {
    return {
      back,
      current,
      forward,
      replaced,
      position: window.history.length,
      scroll: computeScroll ? computeScrollPosition() : null
    };
  }
  function useHistoryStateNavigation(base) {
    const { history: history2, location: location2 } = window;
    const currentLocation = {
      value: createCurrentLocation(base, location2)
    };
    const historyState = { value: history2.state };
    if (!historyState.value) {
      changeLocation(currentLocation.value, {
        back: null,
        current: currentLocation.value,
        forward: null,
        position: history2.length - 1,
        replaced: true,
        scroll: null
      }, true);
    }
    function changeLocation(to, state, replace2) {
      const hashIndex = base.indexOf("#");
      const url = hashIndex > -1 ? (location2.host && document.querySelector("base") ? base : base.slice(hashIndex)) + to : createBaseLocation() + base + to;
      try {
        history2[replace2 ? "replaceState" : "pushState"](state, "", url);
        historyState.value = state;
      } catch (err) {
        {
          console.error(err);
        }
        location2[replace2 ? "replace" : "assign"](url);
      }
    }
    function replace(to, data) {
      const state = assign({}, history2.state, buildState(historyState.value.back, to, historyState.value.forward, true), data, { position: historyState.value.position });
      changeLocation(to, state, true);
      currentLocation.value = to;
    }
    function push(to, data) {
      const currentState = assign({}, historyState.value, history2.state, {
        forward: to,
        scroll: computeScrollPosition()
      });
      changeLocation(currentState.current, currentState, true);
      const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);
      changeLocation(to, state, false);
      currentLocation.value = to;
    }
    return {
      location: currentLocation,
      state: historyState,
      push,
      replace
    };
  }
  function createWebHistory(base) {
    base = normalizeBase(base);
    const historyNavigation = useHistoryStateNavigation(base);
    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);
    function go(delta, triggerListeners = true) {
      if (!triggerListeners)
        historyListeners.pauseListeners();
      history.go(delta);
    }
    const routerHistory = assign({
      location: "",
      base,
      go,
      createHref: createHref.bind(null, base)
    }, historyNavigation, historyListeners);
    Object.defineProperty(routerHistory, "location", {
      enumerable: true,
      get: () => historyNavigation.location.value
    });
    Object.defineProperty(routerHistory, "state", {
      enumerable: true,
      get: () => historyNavigation.state.value
    });
    return routerHistory;
  }
  function createMemoryHistory(base = "") {
    let listeners = [];
    let queue = [START];
    let position = 0;
    base = normalizeBase(base);
    function setLocation(location2) {
      position++;
      if (position === queue.length) {
        queue.push(location2);
      } else {
        queue.splice(position);
        queue.push(location2);
      }
    }
    function triggerListeners(to, from, { direction, delta }) {
      const info2 = {
        direction,
        delta,
        type: NavigationType.pop
      };
      for (const callback of listeners) {
        callback(to, from, info2);
      }
    }
    const routerHistory = {
      location: START,
      state: {},
      base,
      createHref: createHref.bind(null, base),
      replace(to) {
        queue.splice(position--, 1);
        setLocation(to);
      },
      push(to, data) {
        setLocation(to);
      },
      listen(callback) {
        listeners.push(callback);
        return () => {
          const index2 = listeners.indexOf(callback);
          if (index2 > -1)
            listeners.splice(index2, 1);
        };
      },
      destroy() {
        listeners = [];
        queue = [START];
        position = 0;
      },
      go(delta, shouldTrigger = true) {
        const from = this.location;
        const direction = delta < 0 ? NavigationDirection.back : NavigationDirection.forward;
        position = Math.max(0, Math.min(position + delta, queue.length - 1));
        if (shouldTrigger) {
          triggerListeners(this.location, from, {
            direction,
            delta
          });
        }
      }
    };
    Object.defineProperty(routerHistory, "location", {
      enumerable: true,
      get: () => queue[position]
    });
    return routerHistory;
  }
  function createWebHashHistory(base) {
    base = location.host ? base || location.pathname + location.search : "";
    if (!base.includes("#"))
      base += "#";
    return createWebHistory(base);
  }
  function isRouteLocation(route) {
    return typeof route === "string" || route && typeof route === "object";
  }
  function isRouteName(name) {
    return typeof name === "string" || typeof name === "symbol";
  }
  const START_LOCATION_NORMALIZED = {
    path: "/",
    name: void 0,
    params: {},
    query: {},
    hash: "",
    fullPath: "/",
    matched: [],
    meta: {},
    redirectedFrom: void 0
  };
  const NavigationFailureSymbol = /* @__PURE__ */ PolySymbol("nf");
  exports.NavigationFailureType = void 0;
  (function(NavigationFailureType) {
    NavigationFailureType[NavigationFailureType["aborted"] = 4] = "aborted";
    NavigationFailureType[NavigationFailureType["cancelled"] = 8] = "cancelled";
    NavigationFailureType[NavigationFailureType["duplicated"] = 16] = "duplicated";
  })(exports.NavigationFailureType || (exports.NavigationFailureType = {}));
  const ErrorTypeMessages = {
    [1]({ location: location2, currentLocation }) {
      return `No match for
 ${JSON.stringify(location2)}${currentLocation ? "\nwhile being at\n" + JSON.stringify(currentLocation) : ""}`;
    },
    [2]({ from, to }) {
      return `Redirected from "${from.fullPath}" to "${stringifyRoute(to)}" via a navigation guard.`;
    },
    [4]({ from, to }) {
      return `Navigation aborted from "${from.fullPath}" to "${to.fullPath}" via a navigation guard.`;
    },
    [8]({ from, to }) {
      return `Navigation cancelled from "${from.fullPath}" to "${to.fullPath}" with a new navigation.`;
    },
    [16]({ from, to }) {
      return `Avoided redundant navigation to current location: "${from.fullPath}".`;
    }
  };
  function createRouterError(type, params) {
    {
      return assign(new Error(ErrorTypeMessages[type](params)), {
        type,
        [NavigationFailureSymbol]: true
      }, params);
    }
  }
  function isNavigationFailure(error, type) {
    return error instanceof Error && NavigationFailureSymbol in error && (type == null || !!(error.type & type));
  }
  const propertiesToLog = ["params", "query", "hash"];
  function stringifyRoute(to) {
    if (typeof to === "string")
      return to;
    if ("path" in to)
      return to.path;
    const location2 = {};
    for (const key of propertiesToLog) {
      if (key in to)
        location2[key] = to[key];
    }
    return JSON.stringify(location2, null, 2);
  }
  const BASE_PARAM_PATTERN = "[^/]+?";
  const BASE_PATH_PARSER_OPTIONS = {
    sensitive: false,
    strict: false,
    start: true,
    end: true
  };
  const REGEX_CHARS_RE = /[.+*?^${}()[\]/\\]/g;
  function tokensToParser(segments, extraOptions) {
    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);
    const score = [];
    let pattern = options.start ? "^" : "";
    const keys = [];
    for (const segment of segments) {
      const segmentScores = segment.length ? [] : [90];
      if (options.strict && !segment.length)
        pattern += "/";
      for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {
        const token = segment[tokenIndex];
        let subSegmentScore = 40 + (options.sensitive ? 0.25 : 0);
        if (token.type === 0) {
          if (!tokenIndex)
            pattern += "/";
          pattern += token.value.replace(REGEX_CHARS_RE, "\\$&");
          subSegmentScore += 40;
        } else if (token.type === 1) {
          const { value, repeatable, optional, regexp } = token;
          keys.push({
            name: value,
            repeatable,
            optional
          });
          const re2 = regexp ? regexp : BASE_PARAM_PATTERN;
          if (re2 !== BASE_PARAM_PATTERN) {
            subSegmentScore += 10;
            try {
              new RegExp(`(${re2})`);
            } catch (err) {
              throw new Error(`Invalid custom RegExp for param "${value}" (${re2}): ` + err.message);
            }
          }
          let subPattern = repeatable ? `((?:${re2})(?:/(?:${re2}))*)` : `(${re2})`;
          if (!tokenIndex)
            subPattern = optional && segment.length < 2 ? `(?:/${subPattern})` : "/" + subPattern;
          if (optional)
            subPattern += "?";
          pattern += subPattern;
          subSegmentScore += 20;
          if (optional)
            subSegmentScore += -8;
          if (repeatable)
            subSegmentScore += -20;
          if (re2 === ".*")
            subSegmentScore += -50;
        }
        segmentScores.push(subSegmentScore);
      }
      score.push(segmentScores);
    }
    if (options.strict && options.end) {
      const i = score.length - 1;
      score[i][score[i].length - 1] += 0.7000000000000001;
    }
    if (!options.strict)
      pattern += "/?";
    if (options.end)
      pattern += "$";
    else if (options.strict)
      pattern += "(?:/|$)";
    const re = new RegExp(pattern, options.sensitive ? "" : "i");
    function parse2(path) {
      const match = path.match(re);
      const params = {};
      if (!match)
        return null;
      for (let i = 1; i < match.length; i++) {
        const value = match[i] || "";
        const key = keys[i - 1];
        params[key.name] = value && key.repeatable ? value.split("/") : value;
      }
      return params;
    }
    function stringify(params) {
      let path = "";
      let avoidDuplicatedSlash = false;
      for (const segment of segments) {
        if (!avoidDuplicatedSlash || !path.endsWith("/"))
          path += "/";
        avoidDuplicatedSlash = false;
        for (const token of segment) {
          if (token.type === 0) {
            path += token.value;
          } else if (token.type === 1) {
            const { value, repeatable, optional } = token;
            const param = value in params ? params[value] : "";
            if (Array.isArray(param) && !repeatable)
              throw new Error(`Provided param "${value}" is an array but it is not repeatable (* or + modifiers)`);
            const text = Array.isArray(param) ? param.join("/") : param;
            if (!text) {
              if (optional) {
                if (segment.length < 2 && segments.length > 1) {
                  if (path.endsWith("/"))
                    path = path.slice(0, -1);
                  else
                    avoidDuplicatedSlash = true;
                }
              } else
                throw new Error(`Missing required param "${value}"`);
            }
            path += text;
          }
        }
      }
      return path;
    }
    return {
      re,
      score,
      keys,
      parse: parse2,
      stringify
    };
  }
  function compareScoreArray(a, b) {
    let i = 0;
    while (i < a.length && i < b.length) {
      const diff = b[i] - a[i];
      if (diff)
        return diff;
      i++;
    }
    if (a.length < b.length) {
      return a.length === 1 && a[0] === 40 + 40 ? -1 : 1;
    } else if (a.length > b.length) {
      return b.length === 1 && b[0] === 40 + 40 ? 1 : -1;
    }
    return 0;
  }
  function comparePathParserScore(a, b) {
    let i = 0;
    const aScore = a.score;
    const bScore = b.score;
    while (i < aScore.length && i < bScore.length) {
      const comp = compareScoreArray(aScore[i], bScore[i]);
      if (comp)
        return comp;
      i++;
    }
    if (Math.abs(bScore.length - aScore.length) === 1) {
      if (isLastScoreNegative(aScore))
        return 1;
      if (isLastScoreNegative(bScore))
        return -1;
    }
    return bScore.length - aScore.length;
  }
  function isLastScoreNegative(score) {
    const last = score[score.length - 1];
    return score.length > 0 && last[last.length - 1] < 0;
  }
  const ROOT_TOKEN = {
    type: 0,
    value: ""
  };
  const VALID_PARAM_RE = /[a-zA-Z0-9_]/;
  function tokenizePath(path) {
    if (!path)
      return [[]];
    if (path === "/")
      return [[ROOT_TOKEN]];
    if (!path.startsWith("/")) {
      throw new Error(`Invalid path "${path}"`);
    }
    function crash(message) {
      throw new Error(`ERR (${state})/"${buffer}": ${message}`);
    }
    let state = 0;
    let previousState = state;
    const tokens = [];
    let segment;
    function finalizeSegment() {
      if (segment)
        tokens.push(segment);
      segment = [];
    }
    let i = 0;
    let char;
    let buffer = "";
    let customRe = "";
    function consumeBuffer() {
      if (!buffer)
        return;
      if (state === 0) {
        segment.push({
          type: 0,
          value: buffer
        });
      } else if (state === 1 || state === 2 || state === 3) {
        if (segment.length > 1 && (char === "*" || char === "+"))
          crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);
        segment.push({
          type: 1,
          value: buffer,
          regexp: customRe,
          repeatable: char === "*" || char === "+",
          optional: char === "*" || char === "?"
        });
      } else {
        crash("Invalid state to consume buffer");
      }
      buffer = "";
    }
    function addCharToBuffer() {
      buffer += char;
    }
    while (i < path.length) {
      char = path[i++];
      if (char === "\\" && state !== 2) {
        previousState = state;
        state = 4;
        continue;
      }
      switch (state) {
        case 0:
          if (char === "/") {
            if (buffer) {
              consumeBuffer();
            }
            finalizeSegment();
          } else if (char === ":") {
            consumeBuffer();
            state = 1;
          } else {
            addCharToBuffer();
          }
          break;
        case 4:
          addCharToBuffer();
          state = previousState;
          break;
        case 1:
          if (char === "(") {
            state = 2;
          } else if (VALID_PARAM_RE.test(char)) {
            addCharToBuffer();
          } else {
            consumeBuffer();
            state = 0;
            if (char !== "*" && char !== "?" && char !== "+")
              i--;
          }
          break;
        case 2:
          if (char === ")") {
            if (customRe[customRe.length - 1] == "\\")
              customRe = customRe.slice(0, -1) + char;
            else
              state = 3;
          } else {
            customRe += char;
          }
          break;
        case 3:
          consumeBuffer();
          state = 0;
          if (char !== "*" && char !== "?" && char !== "+")
            i--;
          customRe = "";
          break;
        default:
          crash("Unknown state");
          break;
      }
    }
    if (state === 2)
      crash(`Unfinished custom RegExp for param "${buffer}"`);
    consumeBuffer();
    finalizeSegment();
    return tokens;
  }
  function createRouteRecordMatcher(record, parent, options) {
    const parser = tokensToParser(tokenizePath(record.path), options);
    const matcher = assign(parser, {
      record,
      parent,
      children: [],
      alias: []
    });
    if (parent) {
      if (!matcher.record.aliasOf === !parent.record.aliasOf)
        parent.children.push(matcher);
    }
    return matcher;
  }
  function createRouterMatcher(routes2, globalOptions) {
    const matchers = [];
    const matcherMap = /* @__PURE__ */ new Map();
    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);
    function getRecordMatcher(name) {
      return matcherMap.get(name);
    }
    function addRoute(record, parent, originalRecord) {
      const isRootAdd = !originalRecord;
      const mainNormalizedRecord = normalizeRouteRecord(record);
      mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;
      const options = mergeOptions(globalOptions, record);
      const normalizedRecords = [
        mainNormalizedRecord
      ];
      if ("alias" in record) {
        const aliases = typeof record.alias === "string" ? [record.alias] : record.alias;
        for (const alias of aliases) {
          normalizedRecords.push(assign({}, mainNormalizedRecord, {
            components: originalRecord ? originalRecord.record.components : mainNormalizedRecord.components,
            path: alias,
            aliasOf: originalRecord ? originalRecord.record : mainNormalizedRecord
          }));
        }
      }
      let matcher;
      let originalMatcher;
      for (const normalizedRecord of normalizedRecords) {
        const { path } = normalizedRecord;
        if (parent && path[0] !== "/") {
          const parentPath = parent.record.path;
          const connectingSlash = parentPath[parentPath.length - 1] === "/" ? "" : "/";
          normalizedRecord.path = parent.record.path + (path && connectingSlash + path);
        }
        matcher = createRouteRecordMatcher(normalizedRecord, parent, options);
        if (originalRecord) {
          originalRecord.alias.push(matcher);
        } else {
          originalMatcher = originalMatcher || matcher;
          if (originalMatcher !== matcher)
            originalMatcher.alias.push(matcher);
          if (isRootAdd && record.name && !isAliasRecord(matcher))
            removeRoute(record.name);
        }
        if ("children" in mainNormalizedRecord) {
          const children = mainNormalizedRecord.children;
          for (let i = 0; i < children.length; i++) {
            addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);
          }
        }
        originalRecord = originalRecord || matcher;
        insertMatcher(matcher);
      }
      return originalMatcher ? () => {
        removeRoute(originalMatcher);
      } : noop;
    }
    function removeRoute(matcherRef) {
      if (isRouteName(matcherRef)) {
        const matcher = matcherMap.get(matcherRef);
        if (matcher) {
          matcherMap.delete(matcherRef);
          matchers.splice(matchers.indexOf(matcher), 1);
          matcher.children.forEach(removeRoute);
          matcher.alias.forEach(removeRoute);
        }
      } else {
        const index2 = matchers.indexOf(matcherRef);
        if (index2 > -1) {
          matchers.splice(index2, 1);
          if (matcherRef.record.name)
            matcherMap.delete(matcherRef.record.name);
          matcherRef.children.forEach(removeRoute);
          matcherRef.alias.forEach(removeRoute);
        }
      }
    }
    function getRoutes() {
      return matchers;
    }
    function insertMatcher(matcher) {
      let i = 0;
      while (i < matchers.length && comparePathParserScore(matcher, matchers[i]) >= 0 && (matcher.record.path !== matchers[i].record.path || !isRecordChildOf(matcher, matchers[i])))
        i++;
      matchers.splice(i, 0, matcher);
      if (matcher.record.name && !isAliasRecord(matcher))
        matcherMap.set(matcher.record.name, matcher);
    }
    function resolve(location2, currentLocation) {
      let matcher;
      let params = {};
      let path;
      let name;
      if ("name" in location2 && location2.name) {
        matcher = matcherMap.get(location2.name);
        if (!matcher)
          throw createRouterError(1, {
            location: location2
          });
        name = matcher.record.name;
        params = assign(paramsFromLocation(currentLocation.params, matcher.keys.filter((k) => !k.optional).map((k) => k.name)), location2.params);
        path = matcher.stringify(params);
      } else if ("path" in location2) {
        path = location2.path;
        matcher = matchers.find((m) => m.re.test(path));
        if (matcher) {
          params = matcher.parse(path);
          name = matcher.record.name;
        }
      } else {
        matcher = currentLocation.name ? matcherMap.get(currentLocation.name) : matchers.find((m) => m.re.test(currentLocation.path));
        if (!matcher)
          throw createRouterError(1, {
            location: location2,
            currentLocation
          });
        name = matcher.record.name;
        params = assign({}, currentLocation.params, location2.params);
        path = matcher.stringify(params);
      }
      const matched = [];
      let parentMatcher = matcher;
      while (parentMatcher) {
        matched.unshift(parentMatcher.record);
        parentMatcher = parentMatcher.parent;
      }
      return {
        name,
        path,
        params,
        matched,
        meta: mergeMetaFields(matched)
      };
    }
    routes2.forEach((route) => addRoute(route));
    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };
  }
  function paramsFromLocation(params, keys) {
    const newParams = {};
    for (const key of keys) {
      if (key in params)
        newParams[key] = params[key];
    }
    return newParams;
  }
  function normalizeRouteRecord(record) {
    return {
      path: record.path,
      redirect: record.redirect,
      name: record.name,
      meta: record.meta || {},
      aliasOf: void 0,
      beforeEnter: record.beforeEnter,
      props: normalizeRecordProps(record),
      children: record.children || [],
      instances: {},
      leaveGuards: /* @__PURE__ */ new Set(),
      updateGuards: /* @__PURE__ */ new Set(),
      enterCallbacks: {},
      components: "components" in record ? record.components || {} : { default: record.component }
    };
  }
  function normalizeRecordProps(record) {
    const propsObject = {};
    const props = record.props || false;
    if ("component" in record) {
      propsObject.default = props;
    } else {
      for (const name in record.components)
        propsObject[name] = typeof props === "boolean" ? props : props[name];
    }
    return propsObject;
  }
  function isAliasRecord(record) {
    while (record) {
      if (record.record.aliasOf)
        return true;
      record = record.parent;
    }
    return false;
  }
  function mergeMetaFields(matched) {
    return matched.reduce((meta2, record) => assign(meta2, record.meta), {});
  }
  function mergeOptions(defaults2, partialOptions) {
    const options = {};
    for (const key in defaults2) {
      options[key] = key in partialOptions ? partialOptions[key] : defaults2[key];
    }
    return options;
  }
  function isRecordChildOf(record, parent) {
    return parent.children.some((child) => child === record || isRecordChildOf(record, child));
  }
  const HASH_RE = /#/g;
  const AMPERSAND_RE = /&/g;
  const SLASH_RE = /\//g;
  const EQUAL_RE = /=/g;
  const IM_RE = /\?/g;
  const PLUS_RE = /\+/g;
  const ENC_BRACKET_OPEN_RE = /%5B/g;
  const ENC_BRACKET_CLOSE_RE = /%5D/g;
  const ENC_CARET_RE = /%5E/g;
  const ENC_BACKTICK_RE = /%60/g;
  const ENC_CURLY_OPEN_RE = /%7B/g;
  const ENC_PIPE_RE = /%7C/g;
  const ENC_CURLY_CLOSE_RE = /%7D/g;
  const ENC_SPACE_RE = /%20/g;
  function commonEncode(text) {
    return encodeURI("" + text).replace(ENC_PIPE_RE, "|").replace(ENC_BRACKET_OPEN_RE, "[").replace(ENC_BRACKET_CLOSE_RE, "]");
  }
  function encodeHash(text) {
    return commonEncode(text).replace(ENC_CURLY_OPEN_RE, "{").replace(ENC_CURLY_CLOSE_RE, "}").replace(ENC_CARET_RE, "^");
  }
  function encodeQueryValue(text) {
    return commonEncode(text).replace(PLUS_RE, "%2B").replace(ENC_SPACE_RE, "+").replace(HASH_RE, "%23").replace(AMPERSAND_RE, "%26").replace(ENC_BACKTICK_RE, "`").replace(ENC_CURLY_OPEN_RE, "{").replace(ENC_CURLY_CLOSE_RE, "}").replace(ENC_CARET_RE, "^");
  }
  function encodeQueryKey(text) {
    return encodeQueryValue(text).replace(EQUAL_RE, "%3D");
  }
  function encodePath(text) {
    return commonEncode(text).replace(HASH_RE, "%23").replace(IM_RE, "%3F");
  }
  function encodeParam(text) {
    return text == null ? "" : encodePath(text).replace(SLASH_RE, "%2F");
  }
  function decode2(text) {
    try {
      return decodeURIComponent("" + text);
    } catch (err) {
    }
    return "" + text;
  }
  function parseQuery(search) {
    const query = {};
    if (search === "" || search === "?")
      return query;
    const hasLeadingIM = search[0] === "?";
    const searchParams = (hasLeadingIM ? search.slice(1) : search).split("&");
    for (let i = 0; i < searchParams.length; ++i) {
      const searchParam = searchParams[i].replace(PLUS_RE, " ");
      const eqPos = searchParam.indexOf("=");
      const key = decode2(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));
      const value = eqPos < 0 ? null : decode2(searchParam.slice(eqPos + 1));
      if (key in query) {
        let currentValue = query[key];
        if (!Array.isArray(currentValue)) {
          currentValue = query[key] = [currentValue];
        }
        currentValue.push(value);
      } else {
        query[key] = value;
      }
    }
    return query;
  }
  function stringifyQuery(query) {
    let search = "";
    for (let key in query) {
      const value = query[key];
      key = encodeQueryKey(key);
      if (value == null) {
        if (value !== void 0) {
          search += (search.length ? "&" : "") + key;
        }
        continue;
      }
      const values = Array.isArray(value) ? value.map((v) => v && encodeQueryValue(v)) : [value && encodeQueryValue(value)];
      values.forEach((value2) => {
        if (value2 !== void 0) {
          search += (search.length ? "&" : "") + key;
          if (value2 != null)
            search += "=" + value2;
        }
      });
    }
    return search;
  }
  function normalizeQuery(query) {
    const normalizedQuery = {};
    for (const key in query) {
      const value = query[key];
      if (value !== void 0) {
        normalizedQuery[key] = Array.isArray(value) ? value.map((v) => v == null ? null : "" + v) : value == null ? value : "" + value;
      }
    }
    return normalizedQuery;
  }
  function useCallbacks() {
    let handlers = [];
    function add(handler) {
      handlers.push(handler);
      return () => {
        const i = handlers.indexOf(handler);
        if (i > -1)
          handlers.splice(i, 1);
      };
    }
    function reset() {
      handlers = [];
    }
    return {
      add,
      list: () => handlers,
      reset
    };
  }
  function registerGuard(record, name, guard) {
    const removeFromList = () => {
      record[name].delete(guard);
    };
    vue.onUnmounted(removeFromList);
    vue.onDeactivated(removeFromList);
    vue.onActivated(() => {
      record[name].add(guard);
    });
    record[name].add(guard);
  }
  function onBeforeRouteLeave(leaveGuard) {
    const activeRecord = vue.inject(matchedRouteKey, {}).value;
    if (!activeRecord) {
      return;
    }
    registerGuard(activeRecord, "leaveGuards", leaveGuard);
  }
  function onBeforeRouteUpdate(updateGuard) {
    const activeRecord = vue.inject(matchedRouteKey, {}).value;
    if (!activeRecord) {
      return;
    }
    registerGuard(activeRecord, "updateGuards", updateGuard);
  }
  function guardToPromiseFn(guard, to, from, record, name) {
    const enterCallbackArray = record && (record.enterCallbacks[name] = record.enterCallbacks[name] || []);
    return () => new Promise((resolve, reject) => {
      const next = (valid) => {
        if (valid === false)
          reject(createRouterError(4, {
            from,
            to
          }));
        else if (valid instanceof Error) {
          reject(valid);
        } else if (isRouteLocation(valid)) {
          reject(createRouterError(2, {
            from: to,
            to: valid
          }));
        } else {
          if (enterCallbackArray && record.enterCallbacks[name] === enterCallbackArray && typeof valid === "function")
            enterCallbackArray.push(valid);
          resolve();
        }
      };
      const guardReturn = guard.call(record && record.instances[name], to, from, next);
      let guardCall = Promise.resolve(guardReturn);
      if (guard.length < 3)
        guardCall = guardCall.then(next);
      guardCall.catch((err) => reject(err));
    });
  }
  function extractComponentsGuards(matched, guardType, to, from) {
    const guards = [];
    for (const record of matched) {
      for (const name in record.components) {
        let rawComponent = record.components[name];
        if (guardType !== "beforeRouteEnter" && !record.instances[name])
          continue;
        if (isRouteComponent(rawComponent)) {
          const options = rawComponent.__vccOpts || rawComponent;
          const guard = options[guardType];
          guard && guards.push(guardToPromiseFn(guard, to, from, record, name));
        } else {
          let componentPromise = rawComponent();
          guards.push(() => componentPromise.then((resolved) => {
            if (!resolved)
              return Promise.reject(new Error(`Couldn't resolve component "${name}" at "${record.path}"`));
            const resolvedComponent = isESModule(resolved) ? resolved.default : resolved;
            record.components[name] = resolvedComponent;
            const options = resolvedComponent.__vccOpts || resolvedComponent;
            const guard = options[guardType];
            return guard && guardToPromiseFn(guard, to, from, record, name)();
          }));
        }
      }
    }
    return guards;
  }
  function isRouteComponent(component) {
    return typeof component === "object" || "displayName" in component || "props" in component || "__vccOpts" in component;
  }
  function useLink(props) {
    const router = vue.inject(routerKey);
    const currentRoute = vue.inject(routeLocationKey);
    const route = vue.computed(() => router.resolve(vue.unref(props.to)));
    const activeRecordIndex = vue.computed(() => {
      const { matched } = route.value;
      const { length } = matched;
      const routeMatched = matched[length - 1];
      const currentMatched = currentRoute.matched;
      if (!routeMatched || !currentMatched.length)
        return -1;
      const index2 = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));
      if (index2 > -1)
        return index2;
      const parentRecordPath = getOriginalPath(matched[length - 2]);
      return length > 1 && getOriginalPath(routeMatched) === parentRecordPath && currentMatched[currentMatched.length - 1].path !== parentRecordPath ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2])) : index2;
    });
    const isActive = vue.computed(() => activeRecordIndex.value > -1 && includesParams(currentRoute.params, route.value.params));
    const isExactActive = vue.computed(() => activeRecordIndex.value > -1 && activeRecordIndex.value === currentRoute.matched.length - 1 && isSameRouteLocationParams(currentRoute.params, route.value.params));
    function navigate(e = {}) {
      if (guardEvent(e)) {
        return router[vue.unref(props.replace) ? "replace" : "push"](vue.unref(props.to)).catch(noop);
      }
      return Promise.resolve();
    }
    return {
      route,
      href: vue.computed(() => route.value.href),
      isActive,
      isExactActive,
      navigate
    };
  }
  const RouterLinkImpl = /* @__PURE__ */ vue.defineComponent({
    name: "RouterLink",
    compatConfig: { MODE: 3 },
    props: {
      to: {
        type: [String, Object],
        required: true
      },
      replace: Boolean,
      activeClass: String,
      exactActiveClass: String,
      custom: Boolean,
      ariaCurrentValue: {
        type: String,
        default: "page"
      }
    },
    useLink,
    setup(props, { slots }) {
      const link = vue.reactive(useLink(props));
      const { options } = vue.inject(routerKey);
      const elClass = vue.computed(() => ({
        [getLinkClass(props.activeClass, options.linkActiveClass, "router-link-active")]: link.isActive,
        [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, "router-link-exact-active")]: link.isExactActive
      }));
      return () => {
        const children = slots.default && slots.default(link);
        return props.custom ? children : vue.h("a", {
          "aria-current": link.isExactActive ? props.ariaCurrentValue : null,
          href: link.href,
          onClick: link.navigate,
          class: elClass.value
        }, children);
      };
    }
  });
  const RouterLink = RouterLinkImpl;
  function guardEvent(e) {
    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)
      return;
    if (e.defaultPrevented)
      return;
    if (e.button !== void 0 && e.button !== 0)
      return;
    if (e.currentTarget && e.currentTarget.getAttribute) {
      const target = e.currentTarget.getAttribute("target");
      if (/\b_blank\b/i.test(target))
        return;
    }
    if (e.preventDefault)
      e.preventDefault();
    return true;
  }
  function includesParams(outer, inner) {
    for (const key in inner) {
      const innerValue = inner[key];
      const outerValue = outer[key];
      if (typeof innerValue === "string") {
        if (innerValue !== outerValue)
          return false;
      } else {
        if (!Array.isArray(outerValue) || outerValue.length !== innerValue.length || innerValue.some((value, i) => value !== outerValue[i]))
          return false;
      }
    }
    return true;
  }
  function getOriginalPath(record) {
    return record ? record.aliasOf ? record.aliasOf.path : record.path : "";
  }
  const getLinkClass = (propClass, globalClass, defaultClass) => propClass != null ? propClass : globalClass != null ? globalClass : defaultClass;
  const RouterViewImpl = /* @__PURE__ */ vue.defineComponent({
    name: "RouterView",
    inheritAttrs: false,
    props: {
      name: {
        type: String,
        default: "default"
      },
      route: Object
    },
    compatConfig: { MODE: 3 },
    setup(props, { attrs, slots }) {
      const injectedRoute = vue.inject(routerViewLocationKey);
      const routeToDisplay = vue.computed(() => props.route || injectedRoute.value);
      const depth = vue.inject(viewDepthKey, 0);
      const matchedRouteRef = vue.computed(() => routeToDisplay.value.matched[depth]);
      vue.provide(viewDepthKey, depth + 1);
      vue.provide(matchedRouteKey, matchedRouteRef);
      vue.provide(routerViewLocationKey, routeToDisplay);
      const viewRef = vue.ref();
      vue.watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {
        if (to) {
          to.instances[name] = instance;
          if (from && from !== to && instance && instance === oldInstance) {
            if (!to.leaveGuards.size) {
              to.leaveGuards = from.leaveGuards;
            }
            if (!to.updateGuards.size) {
              to.updateGuards = from.updateGuards;
            }
          }
        }
        if (instance && to && (!from || !isSameRouteRecord(to, from) || !oldInstance)) {
          (to.enterCallbacks[name] || []).forEach((callback) => callback(instance));
        }
      }, { flush: "post" });
      return () => {
        const route = routeToDisplay.value;
        const matchedRoute = matchedRouteRef.value;
        const ViewComponent = matchedRoute && matchedRoute.components[props.name];
        const currentName = props.name;
        if (!ViewComponent) {
          return normalizeSlot(slots.default, { Component: ViewComponent, route });
        }
        const routePropsOption = matchedRoute.props[props.name];
        const routeProps = routePropsOption ? routePropsOption === true ? route.params : typeof routePropsOption === "function" ? routePropsOption(route) : routePropsOption : null;
        const onVnodeUnmounted = (vnode) => {
          if (vnode.component.isUnmounted) {
            matchedRoute.instances[currentName] = null;
          }
        };
        const component = vue.h(ViewComponent, assign({}, routeProps, attrs, {
          onVnodeUnmounted,
          ref: viewRef
        }));
        return normalizeSlot(slots.default, { Component: component, route }) || component;
      };
    }
  });
  function normalizeSlot(slot, data) {
    if (!slot)
      return null;
    const slotContent = slot(data);
    return slotContent.length === 1 ? slotContent[0] : slotContent;
  }
  const RouterView = RouterViewImpl;
  function createRouter(options) {
    const matcher = createRouterMatcher(options.routes, options);
    const parseQuery$1 = options.parseQuery || parseQuery;
    const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;
    const routerHistory = options.history;
    const beforeGuards = useCallbacks();
    const beforeResolveGuards = useCallbacks();
    const afterGuards = useCallbacks();
    const currentRoute = vue.shallowRef(START_LOCATION_NORMALIZED);
    let pendingLocation = START_LOCATION_NORMALIZED;
    const normalizeParams = applyToParams.bind(null, (paramValue) => "" + paramValue);
    const encodeParams = applyToParams.bind(null, encodeParam);
    const decodeParams = applyToParams.bind(null, decode2);
    function addRoute(parentOrRoute, route) {
      let parent;
      let record;
      if (isRouteName(parentOrRoute)) {
        parent = matcher.getRecordMatcher(parentOrRoute);
        record = route;
      } else {
        record = parentOrRoute;
      }
      return matcher.addRoute(record, parent);
    }
    function removeRoute(name) {
      const recordMatcher = matcher.getRecordMatcher(name);
      if (recordMatcher) {
        matcher.removeRoute(recordMatcher);
      }
    }
    function getRoutes() {
      return matcher.getRoutes().map((routeMatcher) => routeMatcher.record);
    }
    function hasRoute(name) {
      return !!matcher.getRecordMatcher(name);
    }
    function resolve(rawLocation, currentLocation) {
      currentLocation = assign({}, currentLocation || currentRoute.value);
      if (typeof rawLocation === "string") {
        const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);
        const matchedRoute2 = matcher.resolve({ path: locationNormalized.path }, currentLocation);
        const href2 = routerHistory.createHref(locationNormalized.fullPath);
        return assign(locationNormalized, matchedRoute2, {
          params: decodeParams(matchedRoute2.params),
          hash: decode2(locationNormalized.hash),
          redirectedFrom: void 0,
          href: href2
        });
      }
      let matcherLocation;
      if ("path" in rawLocation) {
        matcherLocation = assign({}, rawLocation, {
          path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path
        });
      } else {
        const targetParams = assign({}, rawLocation.params);
        for (const key in targetParams) {
          if (targetParams[key] == null) {
            delete targetParams[key];
          }
        }
        matcherLocation = assign({}, rawLocation, {
          params: encodeParams(rawLocation.params)
        });
        currentLocation.params = encodeParams(currentLocation.params);
      }
      const matchedRoute = matcher.resolve(matcherLocation, currentLocation);
      const hash2 = rawLocation.hash || "";
      matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));
      const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {
        hash: encodeHash(hash2),
        path: matchedRoute.path
      }));
      const href = routerHistory.createHref(fullPath);
      return assign({
        fullPath,
        hash: hash2,
        query: stringifyQuery$1 === stringifyQuery ? normalizeQuery(rawLocation.query) : rawLocation.query || {}
      }, matchedRoute, {
        redirectedFrom: void 0,
        href
      });
    }
    function locationAsObject(to) {
      return typeof to === "string" ? parseURL(parseQuery$1, to, currentRoute.value.path) : assign({}, to);
    }
    function checkCanceledNavigation(to, from) {
      if (pendingLocation !== to) {
        return createRouterError(8, {
          from,
          to
        });
      }
    }
    function push(to) {
      return pushWithRedirect(to);
    }
    function replace(to) {
      return push(assign(locationAsObject(to), { replace: true }));
    }
    function handleRedirectRecord(to) {
      const lastMatched = to.matched[to.matched.length - 1];
      if (lastMatched && lastMatched.redirect) {
        const { redirect } = lastMatched;
        let newTargetLocation = typeof redirect === "function" ? redirect(to) : redirect;
        if (typeof newTargetLocation === "string") {
          newTargetLocation = newTargetLocation.includes("?") || newTargetLocation.includes("#") ? newTargetLocation = locationAsObject(newTargetLocation) : { path: newTargetLocation };
          newTargetLocation.params = {};
        }
        return assign({
          query: to.query,
          hash: to.hash,
          params: to.params
        }, newTargetLocation);
      }
    }
    function pushWithRedirect(to, redirectedFrom) {
      const targetLocation = pendingLocation = resolve(to);
      const from = currentRoute.value;
      const data = to.state;
      const force = to.force;
      const replace2 = to.replace === true;
      const shouldRedirect = handleRedirectRecord(targetLocation);
      if (shouldRedirect)
        return pushWithRedirect(assign(locationAsObject(shouldRedirect), {
          state: data,
          force,
          replace: replace2
        }), redirectedFrom || targetLocation);
      const toLocation = targetLocation;
      toLocation.redirectedFrom = redirectedFrom;
      let failure;
      if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {
        failure = createRouterError(16, { to: toLocation, from });
        handleScroll();
      }
      return (failure ? Promise.resolve(failure) : navigate(toLocation, from)).catch((error) => isNavigationFailure(error) ? isNavigationFailure(error, 2) ? error : markAsReady(error) : triggerError(error, toLocation, from)).then((failure2) => {
        if (failure2) {
          if (isNavigationFailure(failure2, 2)) {
            return pushWithRedirect(assign(locationAsObject(failure2.to), {
              state: data,
              force,
              replace: replace2
            }), redirectedFrom || toLocation);
          }
        } else {
          failure2 = finalizeNavigation(toLocation, from, true, replace2, data);
        }
        triggerAfterEach(toLocation, from, failure2);
        return failure2;
      });
    }
    function checkCanceledNavigationAndReject(to, from) {
      const error = checkCanceledNavigation(to, from);
      return error ? Promise.reject(error) : Promise.resolve();
    }
    function navigate(to, from) {
      let guards;
      const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);
      guards = extractComponentsGuards(leavingRecords.reverse(), "beforeRouteLeave", to, from);
      for (const record of leavingRecords) {
        record.leaveGuards.forEach((guard) => {
          guards.push(guardToPromiseFn(guard, to, from));
        });
      }
      const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);
      guards.push(canceledNavigationCheck);
      return runGuardQueue(guards).then(() => {
        guards = [];
        for (const guard of beforeGuards.list()) {
          guards.push(guardToPromiseFn(guard, to, from));
        }
        guards.push(canceledNavigationCheck);
        return runGuardQueue(guards);
      }).then(() => {
        guards = extractComponentsGuards(updatingRecords, "beforeRouteUpdate", to, from);
        for (const record of updatingRecords) {
          record.updateGuards.forEach((guard) => {
            guards.push(guardToPromiseFn(guard, to, from));
          });
        }
        guards.push(canceledNavigationCheck);
        return runGuardQueue(guards);
      }).then(() => {
        guards = [];
        for (const record of to.matched) {
          if (record.beforeEnter && !from.matched.includes(record)) {
            if (Array.isArray(record.beforeEnter)) {
              for (const beforeEnter of record.beforeEnter)
                guards.push(guardToPromiseFn(beforeEnter, to, from));
            } else {
              guards.push(guardToPromiseFn(record.beforeEnter, to, from));
            }
          }
        }
        guards.push(canceledNavigationCheck);
        return runGuardQueue(guards);
      }).then(() => {
        to.matched.forEach((record) => record.enterCallbacks = {});
        guards = extractComponentsGuards(enteringRecords, "beforeRouteEnter", to, from);
        guards.push(canceledNavigationCheck);
        return runGuardQueue(guards);
      }).then(() => {
        guards = [];
        for (const guard of beforeResolveGuards.list()) {
          guards.push(guardToPromiseFn(guard, to, from));
        }
        guards.push(canceledNavigationCheck);
        return runGuardQueue(guards);
      }).catch((err) => isNavigationFailure(err, 8) ? err : Promise.reject(err));
    }
    function triggerAfterEach(to, from, failure) {
      for (const guard of afterGuards.list())
        guard(to, from, failure);
    }
    function finalizeNavigation(toLocation, from, isPush, replace2, data) {
      const error = checkCanceledNavigation(toLocation, from);
      if (error)
        return error;
      const isFirstNavigation = from === START_LOCATION_NORMALIZED;
      const state = {};
      if (isPush) {
        if (replace2 || isFirstNavigation)
          routerHistory.replace(toLocation.fullPath, assign({
            scroll: isFirstNavigation && state && state.scroll
          }, data));
        else
          routerHistory.push(toLocation.fullPath, data);
      }
      currentRoute.value = toLocation;
      handleScroll();
      markAsReady();
    }
    let removeHistoryListener;
    function setupListeners() {
      if (removeHistoryListener)
        return;
      removeHistoryListener = routerHistory.listen((to, _from, info2) => {
        const toLocation = resolve(to);
        const shouldRedirect = handleRedirectRecord(toLocation);
        if (shouldRedirect) {
          pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);
          return;
        }
        pendingLocation = toLocation;
        const from = currentRoute.value;
        navigate(toLocation, from).catch((error) => {
          if (isNavigationFailure(error, 4 | 8)) {
            return error;
          }
          if (isNavigationFailure(error, 2)) {
            pushWithRedirect(error.to, toLocation).then((failure) => {
              if (isNavigationFailure(failure, 4 | 16) && !info2.delta && info2.type === NavigationType.pop) {
                routerHistory.go(-1, false);
              }
            }).catch(noop);
            return Promise.reject();
          }
          if (info2.delta)
            routerHistory.go(-info2.delta, false);
          return triggerError(error, toLocation, from);
        }).then((failure) => {
          failure = failure || finalizeNavigation(toLocation, from, false);
          if (failure) {
            if (info2.delta) {
              routerHistory.go(-info2.delta, false);
            } else if (info2.type === NavigationType.pop && isNavigationFailure(failure, 4 | 16)) {
              routerHistory.go(-1, false);
            }
          }
          triggerAfterEach(toLocation, from, failure);
        }).catch(noop);
      });
    }
    let readyHandlers = useCallbacks();
    let errorHandlers = useCallbacks();
    let ready;
    function triggerError(error, to, from) {
      markAsReady(error);
      const list = errorHandlers.list();
      if (list.length) {
        list.forEach((handler) => handler(error, to, from));
      } else {
        console.error(error);
      }
      return Promise.reject(error);
    }
    function isReady() {
      if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)
        return Promise.resolve();
      return new Promise((resolve2, reject) => {
        readyHandlers.add([resolve2, reject]);
      });
    }
    function markAsReady(err) {
      if (!ready) {
        ready = !err;
        setupListeners();
        readyHandlers.list().forEach(([resolve2, reject]) => err ? reject(err) : resolve2());
        readyHandlers.reset();
      }
      return err;
    }
    function handleScroll(to, from, isPush, isFirstNavigation) {
      return Promise.resolve();
    }
    const go = (delta) => routerHistory.go(delta);
    const installedApps = /* @__PURE__ */ new Set();
    const router = {
      currentRoute,
      addRoute,
      removeRoute,
      hasRoute,
      getRoutes,
      resolve,
      options,
      push,
      replace,
      go,
      back: () => go(-1),
      forward: () => go(1),
      beforeEach: beforeGuards.add,
      beforeResolve: beforeResolveGuards.add,
      afterEach: afterGuards.add,
      onError: errorHandlers.add,
      isReady,
      install(app) {
        const router2 = this;
        app.component("RouterLink", RouterLink);
        app.component("RouterView", RouterView);
        app.config.globalProperties.$router = router2;
        Object.defineProperty(app.config.globalProperties, "$route", {
          enumerable: true,
          get: () => vue.unref(currentRoute)
        });
        const reactiveRoute = {};
        for (const key in START_LOCATION_NORMALIZED) {
          reactiveRoute[key] = vue.computed(() => currentRoute.value[key]);
        }
        app.provide(routerKey, router2);
        app.provide(routeLocationKey, vue.reactive(reactiveRoute));
        app.provide(routerViewLocationKey, currentRoute);
        const unmountApp = app.unmount;
        installedApps.add(app);
        app.unmount = function() {
          installedApps.delete(app);
          if (installedApps.size < 1) {
            pendingLocation = START_LOCATION_NORMALIZED;
            removeHistoryListener && removeHistoryListener();
            removeHistoryListener = null;
            currentRoute.value = START_LOCATION_NORMALIZED;
            ready = false;
          }
          unmountApp();
        };
      }
    };
    return router;
  }
  function runGuardQueue(guards) {
    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());
  }
  function extractChangingRecords(to, from) {
    const leavingRecords = [];
    const updatingRecords = [];
    const enteringRecords = [];
    const len = Math.max(from.matched.length, to.matched.length);
    for (let i = 0; i < len; i++) {
      const recordFrom = from.matched[i];
      if (recordFrom) {
        if (to.matched.find((record) => isSameRouteRecord(record, recordFrom)))
          updatingRecords.push(recordFrom);
        else
          leavingRecords.push(recordFrom);
      }
      const recordTo = to.matched[i];
      if (recordTo) {
        if (!from.matched.find((record) => isSameRouteRecord(record, recordTo))) {
          enteringRecords.push(recordTo);
        }
      }
    }
    return [leavingRecords, updatingRecords, enteringRecords];
  }
  function useRouter2() {
    return vue.inject(routerKey);
  }
  function useRoute2() {
    return vue.inject(routeLocationKey);
  }
  exports.RouterLink = RouterLink;
  exports.RouterView = RouterView;
  exports.START_LOCATION = START_LOCATION_NORMALIZED;
  exports.createMemoryHistory = createMemoryHistory;
  exports.createRouter = createRouter;
  exports.createRouterMatcher = createRouterMatcher;
  exports.createWebHashHistory = createWebHashHistory;
  exports.createWebHistory = createWebHistory;
  exports.isNavigationFailure = isNavigationFailure;
  exports.matchedRouteKey = matchedRouteKey;
  exports.onBeforeRouteLeave = onBeforeRouteLeave;
  exports.onBeforeRouteUpdate = onBeforeRouteUpdate;
  exports.parseQuery = parseQuery;
  exports.routeLocationKey = routeLocationKey;
  exports.routerKey = routerKey;
  exports.routerViewLocationKey = routerViewLocationKey;
  exports.stringifyQuery = stringifyQuery;
  exports.useLink = useLink;
  exports.useRoute = useRoute2;
  exports.useRouter = useRouter2;
  exports.viewDepthKey = viewDepthKey;
})(vueRouter_cjs_prod);
const wrapInRef = (value) => vue_cjs_prod.isRef(value) ? value : vue_cjs_prod.ref(value);
const getDefault = () => null;
function useAsyncData(key, handler, options = {}) {
  var _a, _b, _c, _d, _e;
  if (typeof key !== "string") {
    throw new TypeError("asyncData key must be a string");
  }
  if (typeof handler !== "function") {
    throw new TypeError("asyncData handler must be a function");
  }
  options = { server: true, default: getDefault, ...options };
  if (options.defer) {
    console.warn("[useAsyncData] `defer` has been renamed to `lazy`. Support for `defer` will be removed in RC.");
  }
  options.lazy = (_b = (_a = options.lazy) != null ? _a : options.defer) != null ? _b : false;
  options.initialCache = (_c = options.initialCache) != null ? _c : true;
  const nuxt = useNuxtApp();
  const instance = vue_cjs_prod.getCurrentInstance();
  if (instance && !instance._nuxtOnBeforeMountCbs) {
    const cbs = instance._nuxtOnBeforeMountCbs = [];
    if (instance && false) {
      vue_cjs_prod.onBeforeMount(() => {
        cbs.forEach((cb) => {
          cb();
        });
        cbs.splice(0, cbs.length);
      });
      vue_cjs_prod.onUnmounted(() => cbs.splice(0, cbs.length));
    }
  }
  const useInitialCache = () => options.initialCache && nuxt.payload.data[key] !== void 0;
  const asyncData = {
    data: wrapInRef((_d = nuxt.payload.data[key]) != null ? _d : options.default()),
    pending: vue_cjs_prod.ref(!useInitialCache()),
    error: vue_cjs_prod.ref((_e = nuxt.payload._errors[key]) != null ? _e : null)
  };
  asyncData.refresh = (opts = {}) => {
    if (nuxt._asyncDataPromises[key]) {
      return nuxt._asyncDataPromises[key];
    }
    if (opts._initial && useInitialCache()) {
      return nuxt.payload.data[key];
    }
    asyncData.pending.value = true;
    nuxt._asyncDataPromises[key] = Promise.resolve(handler(nuxt)).then((result) => {
      if (options.transform) {
        result = options.transform(result);
      }
      if (options.pick) {
        result = pick(result, options.pick);
      }
      asyncData.data.value = result;
      asyncData.error.value = null;
    }).catch((error) => {
      asyncData.error.value = error;
      asyncData.data.value = vue_cjs_prod.unref(options.default());
    }).finally(() => {
      asyncData.pending.value = false;
      nuxt.payload.data[key] = asyncData.data.value;
      if (asyncData.error.value) {
        nuxt.payload._errors[key] = true;
      }
      delete nuxt._asyncDataPromises[key];
    });
    return nuxt._asyncDataPromises[key];
  };
  const initialFetch = () => asyncData.refresh({ _initial: true });
  const fetchOnServer = options.server !== false && nuxt.payload.serverRendered;
  if (fetchOnServer) {
    const promise = initialFetch();
    vue_cjs_prod.onServerPrefetch(() => promise);
  }
  const asyncDataPromise = Promise.resolve(nuxt._asyncDataPromises[key]).then(() => asyncData);
  Object.assign(asyncDataPromise, asyncData);
  return asyncDataPromise;
}
function pick(obj, keys) {
  const newObj = {};
  for (const key of keys) {
    newObj[key] = obj[key];
  }
  return newObj;
}
const useState = (key, init) => {
  const nuxt = useNuxtApp();
  const state = vue_cjs_prod.toRef(nuxt.payload.state, key);
  if (state.value === void 0 && init) {
    const initialValue = init();
    if (vue_cjs_prod.isRef(initialValue)) {
      nuxt.payload.state[key] = initialValue;
      return initialValue;
    }
    state.value = initialValue;
  }
  return state;
};
const useError = () => {
  const nuxtApp = useNuxtApp();
  return useState("error", () => nuxtApp.ssrContext.error);
};
const throwError = (_err) => {
  const nuxtApp = useNuxtApp();
  useError();
  const err = typeof _err === "string" ? new Error(_err) : _err;
  nuxtApp.callHook("app:error", err);
  {
    nuxtApp.ssrContext.error = nuxtApp.ssrContext.error || err;
  }
  return err;
};
function murmurHash(key, seed = 0) {
  if (typeof key === "string") {
    key = createBuffer(key);
  }
  let i = 0;
  let h1 = seed;
  let k1;
  let h1b;
  const remainder = key.length & 3;
  const bytes = key.length - remainder;
  const c1 = 3432918353;
  const c2 = 461845907;
  while (i < bytes) {
    k1 = key[i] & 255 | (key[++i] & 255) << 8 | (key[++i] & 255) << 16 | (key[++i] & 255) << 24;
    ++i;
    k1 = (k1 & 65535) * c1 + (((k1 >>> 16) * c1 & 65535) << 16) & 4294967295;
    k1 = k1 << 15 | k1 >>> 17;
    k1 = (k1 & 65535) * c2 + (((k1 >>> 16) * c2 & 65535) << 16) & 4294967295;
    h1 ^= k1;
    h1 = h1 << 13 | h1 >>> 19;
    h1b = (h1 & 65535) * 5 + (((h1 >>> 16) * 5 & 65535) << 16) & 4294967295;
    h1 = (h1b & 65535) + 27492 + (((h1b >>> 16) + 58964 & 65535) << 16);
  }
  k1 = 0;
  switch (remainder) {
    case 3:
      k1 ^= (key[i + 2] & 255) << 16;
      break;
    case 2:
      k1 ^= (key[i + 1] & 255) << 8;
      break;
    case 1:
      k1 ^= key[i] & 255;
      k1 = (k1 & 65535) * c1 + (((k1 >>> 16) * c1 & 65535) << 16) & 4294967295;
      k1 = k1 << 15 | k1 >>> 17;
      k1 = (k1 & 65535) * c2 + (((k1 >>> 16) * c2 & 65535) << 16) & 4294967295;
      h1 ^= k1;
  }
  h1 ^= key.length;
  h1 ^= h1 >>> 16;
  h1 = (h1 & 65535) * 2246822507 + (((h1 >>> 16) * 2246822507 & 65535) << 16) & 4294967295;
  h1 ^= h1 >>> 13;
  h1 = (h1 & 65535) * 3266489909 + (((h1 >>> 16) * 3266489909 & 65535) << 16) & 4294967295;
  h1 ^= h1 >>> 16;
  return h1 >>> 0;
}
function createBuffer(val) {
  return new TextEncoder().encode(val);
}
const defaults = {
  ignoreUnknown: false,
  respectType: false,
  respectFunctionNames: false,
  respectFunctionProperties: false,
  unorderedObjects: true,
  unorderedArrays: false,
  unorderedSets: false
};
function objectHash(object, options = {}) {
  options = { ...defaults, ...options };
  const hasher = createHasher(options);
  hasher.dispatch(object);
  return hasher.toString();
}
function createHasher(options) {
  const buff = [];
  let context = [];
  const write = (str) => {
    buff.push(str);
  };
  return {
    toString() {
      return buff.join("");
    },
    getContext() {
      return context;
    },
    dispatch(value) {
      if (options.replacer) {
        value = options.replacer(value);
      }
      const type = value === null ? "null" : typeof value;
      return this["_" + type](value);
    },
    _object(object) {
      const pattern = /\[object (.*)\]/i;
      const objString = Object.prototype.toString.call(object);
      const _objType = pattern.exec(objString);
      const objType = _objType ? _objType[1].toLowerCase() : "unknown:[" + objString.toLowerCase() + "]";
      let objectNumber = null;
      if ((objectNumber = context.indexOf(object)) >= 0) {
        return this.dispatch("[CIRCULAR:" + objectNumber + "]");
      } else {
        context.push(object);
      }
      if (typeof Buffer !== "undefined" && Buffer.isBuffer && Buffer.isBuffer(object)) {
        write("buffer:");
        return write(object.toString("utf8"));
      }
      if (objType !== "object" && objType !== "function" && objType !== "asyncfunction") {
        if (this["_" + objType]) {
          this["_" + objType](object);
        } else if (options.ignoreUnknown) {
          return write("[" + objType + "]");
        } else {
          throw new Error('Unknown object type "' + objType + '"');
        }
      } else {
        let keys = Object.keys(object);
        if (options.unorderedObjects) {
          keys = keys.sort();
        }
        if (options.respectType !== false && !isNativeFunction(object)) {
          keys.splice(0, 0, "prototype", "__proto__", "letructor");
        }
        if (options.excludeKeys) {
          keys = keys.filter(function(key) {
            return !options.excludeKeys(key);
          });
        }
        write("object:" + keys.length + ":");
        return keys.forEach((key) => {
          this.dispatch(key);
          write(":");
          if (!options.excludeValues) {
            this.dispatch(object[key]);
          }
          write(",");
        });
      }
    },
    _array(arr, unordered) {
      unordered = typeof unordered !== "undefined" ? unordered : options.unorderedArrays !== false;
      write("array:" + arr.length + ":");
      if (!unordered || arr.length <= 1) {
        return arr.forEach((entry2) => {
          return this.dispatch(entry2);
        });
      }
      const contextAdditions = [];
      const entries = arr.map((entry2) => {
        const hasher = createHasher(options);
        hasher.dispatch(entry2);
        contextAdditions.push(hasher.getContext());
        return hasher.toString();
      });
      context = context.concat(contextAdditions);
      entries.sort();
      return this._array(entries, false);
    },
    _date(date) {
      return write("date:" + date.toJSON());
    },
    _symbol(sym) {
      return write("symbol:" + sym.toString());
    },
    _error(err) {
      return write("error:" + err.toString());
    },
    _boolean(bool) {
      return write("bool:" + bool.toString());
    },
    _string(string) {
      write("string:" + string.length + ":");
      write(string.toString());
    },
    _function(fn) {
      write("fn:");
      if (isNativeFunction(fn)) {
        this.dispatch("[native]");
      } else {
        this.dispatch(fn.toString());
      }
      if (options.respectFunctionNames !== false) {
        this.dispatch("function-name:" + String(fn.name));
      }
      if (options.respectFunctionProperties) {
        this._object(fn);
      }
    },
    _number(number) {
      return write("number:" + number.toString());
    },
    _xml(xml) {
      return write("xml:" + xml.toString());
    },
    _null() {
      return write("Null");
    },
    _undefined() {
      return write("Undefined");
    },
    _regexp(regex) {
      return write("regex:" + regex.toString());
    },
    _uint8array(arr) {
      write("uint8array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    _uint8clampedarray(arr) {
      write("uint8clampedarray:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    _int8array(arr) {
      write("int8array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    _uint16array(arr) {
      write("uint16array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    _int16array(arr) {
      write("int16array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    _uint32array(arr) {
      write("uint32array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    _int32array(arr) {
      write("int32array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    _float32array(arr) {
      write("float32array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    _float64array(arr) {
      write("float64array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    _arraybuffer(arr) {
      write("arraybuffer:");
      return this.dispatch(new Uint8Array(arr));
    },
    _url(url) {
      return write("url:" + url.toString());
    },
    _map(map) {
      write("map:");
      const arr = Array.from(map);
      return this._array(arr, options.unorderedSets !== false);
    },
    _set(set) {
      write("set:");
      const arr = Array.from(set);
      return this._array(arr, options.unorderedSets !== false);
    },
    _file(file) {
      write("file:");
      return this.dispatch([file.name, file.size, file.type, file.lastModfied]);
    },
    _blob() {
      if (options.ignoreUnknown) {
        return write("[blob]");
      }
      throw new Error('Hashing Blob objects is currently not supported\nUse "options.replacer" or "options.ignoreUnknown"\n');
    },
    _domwindow() {
      return write("domwindow");
    },
    _bigint(number) {
      return write("bigint:" + number.toString());
    },
    _process() {
      return write("process");
    },
    _timer() {
      return write("timer");
    },
    _pipe() {
      return write("pipe");
    },
    _tcp() {
      return write("tcp");
    },
    _udp() {
      return write("udp");
    },
    _tty() {
      return write("tty");
    },
    _statwatcher() {
      return write("statwatcher");
    },
    _securecontext() {
      return write("securecontext");
    },
    _connection() {
      return write("connection");
    },
    _zlib() {
      return write("zlib");
    },
    _context() {
      return write("context");
    },
    _nodescript() {
      return write("nodescript");
    },
    _httpparser() {
      return write("httpparser");
    },
    _dataview() {
      return write("dataview");
    },
    _signal() {
      return write("signal");
    },
    _fsevent() {
      return write("fsevent");
    },
    _tlswrap() {
      return write("tlswrap");
    }
  };
}
function isNativeFunction(f) {
  if (typeof f !== "function") {
    return false;
  }
  const exp = /^function\s+\w*\s*\(\s*\)\s*{\s+\[native code\]\s+}$/i;
  return exp.exec(Function.prototype.toString.call(f)) != null;
}
function hash(object, options = {}) {
  const hashed = typeof object === "string" ? object : objectHash(object, options);
  return String(murmurHash(hashed));
}
function useFetch(request, opts = {}) {
  const key = "$f_" + (opts.key || hash([request, { ...opts, transform: null }]));
  const _request = vue_cjs_prod.computed(() => {
    let r = request;
    if (typeof r === "function") {
      r = r();
    }
    return vue_cjs_prod.isRef(r) ? r.value : r;
  });
  const _fetchOptions = {
    ...opts,
    cache: typeof opts.cache === "boolean" ? void 0 : opts.cache
  };
  const _asyncDataOptions = {
    ...opts,
    watch: [
      _request,
      ...opts.watch || []
    ]
  };
  const asyncData = useAsyncData(key, () => {
    return $fetch(_request.value, _fetchOptions);
  }, _asyncDataOptions);
  return asyncData;
}
const decode = decodeURIComponent;
const encode = encodeURIComponent;
const pairSplitRegExp = /; */;
const fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
function parse(str, options) {
  if (typeof str !== "string") {
    throw new TypeError("argument str must be a string");
  }
  let obj = {};
  let opt = options || {};
  let pairs = str.split(pairSplitRegExp);
  let dec = opt.decode || decode;
  for (let i = 0; i < pairs.length; i++) {
    let pair = pairs[i];
    let eq_idx = pair.indexOf("=");
    if (eq_idx < 0) {
      continue;
    }
    let key = pair.substr(0, eq_idx).trim();
    let val = pair.substr(++eq_idx, pair.length).trim();
    if (val[0] == '"') {
      val = val.slice(1, -1);
    }
    if (obj[key] == void 0) {
      obj[key] = tryDecode(val, dec);
    }
  }
  return obj;
}
function serialize(name, value, options) {
  let opt = options || {};
  let enc = opt.encode || encode;
  if (typeof enc !== "function") {
    throw new TypeError("option encode is invalid");
  }
  if (!fieldContentRegExp.test(name)) {
    throw new TypeError("argument name is invalid");
  }
  let encodedValue = enc(value);
  if (encodedValue && !fieldContentRegExp.test(encodedValue)) {
    throw new TypeError("argument val is invalid");
  }
  let str = name + "=" + encodedValue;
  if (opt.maxAge != null) {
    let maxAge = opt.maxAge - 0;
    if (isNaN(maxAge) || !isFinite(maxAge)) {
      throw new TypeError("option maxAge is invalid");
    }
    str += "; Max-Age=" + Math.floor(maxAge);
  }
  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError("option domain is invalid");
    }
    str += "; Domain=" + opt.domain;
  }
  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError("option path is invalid");
    }
    str += "; Path=" + opt.path;
  }
  if (opt.expires) {
    if (typeof opt.expires.toUTCString !== "function") {
      throw new TypeError("option expires is invalid");
    }
    str += "; Expires=" + opt.expires.toUTCString();
  }
  if (opt.httpOnly) {
    str += "; HttpOnly";
  }
  if (opt.secure) {
    str += "; Secure";
  }
  if (opt.sameSite) {
    let sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
    switch (sameSite) {
      case true:
        str += "; SameSite=Strict";
        break;
      case "lax":
        str += "; SameSite=Lax";
        break;
      case "strict":
        str += "; SameSite=Strict";
        break;
      case "none":
        str += "; SameSite=None";
        break;
      default:
        throw new TypeError("option sameSite is invalid");
    }
  }
  return str;
}
function tryDecode(str, decode2) {
  try {
    return decode2(str);
  } catch (e) {
    return str;
  }
}
function useRequestEvent(nuxtApp = useNuxtApp()) {
  var _a;
  return (_a = nuxtApp.ssrContext) == null ? void 0 : _a.event;
}
const CookieDefaults = {
  path: "/",
  decode: (val) => destr(decodeURIComponent(val)),
  encode: (val) => encodeURIComponent(typeof val === "string" ? val : JSON.stringify(val))
};
function useCookie(name, _opts) {
  var _a, _b;
  const opts = { ...CookieDefaults, ..._opts };
  const cookies = readRawCookies(opts);
  const cookie = wrapInRef((_b = cookies[name]) != null ? _b : (_a = opts.default) == null ? void 0 : _a.call(opts));
  {
    const nuxtApp = useNuxtApp();
    const writeFinalCookieValue = () => {
      if (cookie.value !== cookies[name]) {
        writeServerCookie(useRequestEvent(nuxtApp), name, cookie.value, opts);
      }
    };
    nuxtApp.hooks.hookOnce("app:rendered", writeFinalCookieValue);
    nuxtApp.hooks.hookOnce("app:redirected", writeFinalCookieValue);
  }
  return cookie;
}
function readRawCookies(opts = {}) {
  var _a;
  {
    return parse(((_a = useRequestEvent()) == null ? void 0 : _a.req.headers.cookie) || "", opts);
  }
}
function serializeCookie(name, value, opts = {}) {
  if (value === null || value === void 0) {
    return serialize(name, value, { ...opts, maxAge: -1 });
  }
  return serialize(name, value, opts);
}
function writeServerCookie(event, name, value, opts = {}) {
  if (event) {
    appendHeader(event, "Set-Cookie", serializeCookie(name, value, opts));
  }
}
const useRouter = () => {
  var _a;
  return (_a = useNuxtApp()) == null ? void 0 : _a.$router;
};
const useRoute = () => {
  return useNuxtApp()._route;
};
const defineNuxtRouteMiddleware = (middleware) => middleware;
const navigateTo = (to, options = {}) => {
  if (!to) {
    to = "/";
  }
  const router = useRouter();
  {
    const nuxtApp = useNuxtApp();
    if (nuxtApp.ssrContext && nuxtApp.ssrContext.event) {
      const redirectLocation = joinURL(useRuntimeConfig().app.baseURL, router.resolve(to).fullPath || "/");
      return nuxtApp.callHook("app:redirected").then(() => sendRedirect(nuxtApp.ssrContext.event, redirectLocation, options.redirectCode || 302));
    }
  }
  return options.replace ? router.replace(to) : router.push(to);
};
const firstNonUndefined = (...args) => args.find((arg) => arg !== void 0);
const DEFAULT_EXTERNAL_REL_ATTRIBUTE = "noopener noreferrer";
function defineNuxtLink(options) {
  const componentName = options.componentName || "NuxtLink";
  const checkPropConflicts = (props, main, sub) => {
  };
  return vue_cjs_prod.defineComponent({
    name: componentName,
    props: {
      to: {
        type: [String, Object],
        default: void 0,
        required: false
      },
      href: {
        type: [String, Object],
        default: void 0,
        required: false
      },
      target: {
        type: String,
        default: void 0,
        required: false
      },
      rel: {
        type: String,
        default: void 0,
        required: false
      },
      noRel: {
        type: Boolean,
        default: void 0,
        required: false
      },
      activeClass: {
        type: String,
        default: void 0,
        required: false
      },
      exactActiveClass: {
        type: String,
        default: void 0,
        required: false
      },
      replace: {
        type: Boolean,
        default: void 0,
        required: false
      },
      ariaCurrentValue: {
        type: String,
        default: void 0,
        required: false
      },
      external: {
        type: Boolean,
        default: void 0,
        required: false
      },
      custom: {
        type: Boolean,
        default: void 0,
        required: false
      }
    },
    setup(props, { slots }) {
      const router = useRouter();
      const to = vue_cjs_prod.computed(() => {
        checkPropConflicts();
        return props.to || props.href || "";
      });
      const isExternal = vue_cjs_prod.computed(() => {
        if (props.external) {
          return true;
        }
        if (props.target && props.target !== "_self") {
          return true;
        }
        if (typeof to.value === "object") {
          return false;
        }
        return to.value === "" || hasProtocol(to.value, true);
      });
      return () => {
        var _a, _b, _c;
        if (!isExternal.value) {
          return vue_cjs_prod.h(vue_cjs_prod.resolveComponent("RouterLink"), {
            to: to.value,
            activeClass: props.activeClass || options.activeClass,
            exactActiveClass: props.exactActiveClass || options.exactActiveClass,
            replace: props.replace,
            ariaCurrentValue: props.ariaCurrentValue
          }, slots.default);
        }
        const href = typeof to.value === "object" ? (_b = (_a = router.resolve(to.value)) == null ? void 0 : _a.href) != null ? _b : null : to.value || null;
        const target = props.target || null;
        checkPropConflicts();
        const rel = props.noRel ? null : firstNonUndefined(props.rel, options.externalRelAttribute, href ? DEFAULT_EXTERNAL_REL_ATTRIBUTE : "") || null;
        return vue_cjs_prod.h("a", { href, rel, target }, (_c = slots.default) == null ? void 0 : _c.call(slots));
      };
    }
  });
}
const __nuxt_component_0$1 = defineNuxtLink({ componentName: "NuxtLink" });
var shared_cjs_prod = {};
Object.defineProperty(shared_cjs_prod, "__esModule", { value: true });
function makeMap(str, expectsLowerCase) {
  const map = /* @__PURE__ */ Object.create(null);
  const list = str.split(",");
  for (let i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];
}
const PatchFlagNames = {
  [1]: `TEXT`,
  [2]: `CLASS`,
  [4]: `STYLE`,
  [8]: `PROPS`,
  [16]: `FULL_PROPS`,
  [32]: `HYDRATE_EVENTS`,
  [64]: `STABLE_FRAGMENT`,
  [128]: `KEYED_FRAGMENT`,
  [256]: `UNKEYED_FRAGMENT`,
  [512]: `NEED_PATCH`,
  [1024]: `DYNAMIC_SLOTS`,
  [2048]: `DEV_ROOT_FRAGMENT`,
  [-1]: `HOISTED`,
  [-2]: `BAIL`
};
const slotFlagsText = {
  [1]: "STABLE",
  [2]: "DYNAMIC",
  [3]: "FORWARDED"
};
const GLOBALS_WHITE_LISTED = "Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt";
const isGloballyWhitelisted = /* @__PURE__ */ makeMap(GLOBALS_WHITE_LISTED);
const range = 2;
function generateCodeFrame(source, start = 0, end = source.length) {
  let lines = source.split(/(\r?\n)/);
  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);
  lines = lines.filter((_, idx) => idx % 2 === 0);
  let count = 0;
  const res = [];
  for (let i = 0; i < lines.length; i++) {
    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);
    if (count >= start) {
      for (let j = i - range; j <= i + range || end > count; j++) {
        if (j < 0 || j >= lines.length)
          continue;
        const line = j + 1;
        res.push(`${line}${" ".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);
        const lineLength = lines[j].length;
        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;
        if (j === i) {
          const pad = start - (count - (lineLength + newLineSeqLength));
          const length = Math.max(1, end > count ? lineLength - pad : end - start);
          res.push(`   |  ` + " ".repeat(pad) + "^".repeat(length));
        } else if (j > i) {
          if (end > count) {
            const length = Math.max(Math.min(end - count, lineLength), 1);
            res.push(`   |  ` + "^".repeat(length));
          }
          count += lineLength + newLineSeqLength;
        }
      }
      break;
    }
  }
  return res.join("\n");
}
const specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;
const isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);
const isBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`);
function includeBooleanAttr(value) {
  return !!value || value === "";
}
const unsafeAttrCharRE = /[>/="'\u0009\u000a\u000c\u0020]/;
const attrValidationCache = {};
function isSSRSafeAttrName(name) {
  if (attrValidationCache.hasOwnProperty(name)) {
    return attrValidationCache[name];
  }
  const isUnsafe = unsafeAttrCharRE.test(name);
  if (isUnsafe) {
    console.error(`unsafe attribute name: ${name}`);
  }
  return attrValidationCache[name] = !isUnsafe;
}
const propsToAttrMap = {
  acceptCharset: "accept-charset",
  className: "class",
  htmlFor: "for",
  httpEquiv: "http-equiv"
};
const isNoUnitNumericStyleProp = /* @__PURE__ */ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,stroke-miterlimit,stroke-opacity,stroke-width`);
const isKnownHtmlAttr = /* @__PURE__ */ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`);
const isKnownSvgAttr = /* @__PURE__ */ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);
function normalizeStyle(value) {
  if (isArray(value)) {
    const res = {};
    for (let i = 0; i < value.length; i++) {
      const item = value[i];
      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);
      if (normalized) {
        for (const key in normalized) {
          res[key] = normalized[key];
        }
      }
    }
    return res;
  } else if (isString(value)) {
    return value;
  } else if (isObject$1(value)) {
    return value;
  }
}
const listDelimiterRE = /;(?![^(]*\))/g;
const propertyDelimiterRE = /:(.+)/;
function parseStringStyle(cssText) {
  const ret = {};
  cssText.split(listDelimiterRE).forEach((item) => {
    if (item) {
      const tmp = item.split(propertyDelimiterRE);
      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return ret;
}
function stringifyStyle(styles2) {
  let ret = "";
  if (!styles2 || isString(styles2)) {
    return ret;
  }
  for (const key in styles2) {
    const value = styles2[key];
    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);
    if (isString(value) || typeof value === "number" && isNoUnitNumericStyleProp(normalizedKey)) {
      ret += `${normalizedKey}:${value};`;
    }
  }
  return ret;
}
function normalizeClass(value) {
  let res = "";
  if (isString(value)) {
    res = value;
  } else if (isArray(value)) {
    for (let i = 0; i < value.length; i++) {
      const normalized = normalizeClass(value[i]);
      if (normalized) {
        res += normalized + " ";
      }
    }
  } else if (isObject$1(value)) {
    for (const name in value) {
      if (value[name]) {
        res += name + " ";
      }
    }
  }
  return res.trim();
}
function normalizeProps(props) {
  if (!props)
    return null;
  let { class: klass, style } = props;
  if (klass && !isString(klass)) {
    props.class = normalizeClass(klass);
  }
  if (style) {
    props.style = normalizeStyle(style);
  }
  return props;
}
const HTML_TAGS = "html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot";
const SVG_TAGS = "svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view";
const VOID_TAGS = "area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr";
const isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);
const isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);
const isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);
const escapeRE = /["'&<>]/;
function escapeHtml(string) {
  const str = "" + string;
  const match = escapeRE.exec(str);
  if (!match) {
    return str;
  }
  let html = "";
  let escaped;
  let index2;
  let lastIndex = 0;
  for (index2 = match.index; index2 < str.length; index2++) {
    switch (str.charCodeAt(index2)) {
      case 34:
        escaped = "&quot;";
        break;
      case 38:
        escaped = "&amp;";
        break;
      case 39:
        escaped = "&#39;";
        break;
      case 60:
        escaped = "&lt;";
        break;
      case 62:
        escaped = "&gt;";
        break;
      default:
        continue;
    }
    if (lastIndex !== index2) {
      html += str.slice(lastIndex, index2);
    }
    lastIndex = index2 + 1;
    html += escaped;
  }
  return lastIndex !== index2 ? html + str.slice(lastIndex, index2) : html;
}
const commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;
function escapeHtmlComment(src) {
  return src.replace(commentStripRE, "");
}
function looseCompareArrays(a, b) {
  if (a.length !== b.length)
    return false;
  let equal = true;
  for (let i = 0; equal && i < a.length; i++) {
    equal = looseEqual(a[i], b[i]);
  }
  return equal;
}
function looseEqual(a, b) {
  if (a === b)
    return true;
  let aValidType = isDate(a);
  let bValidType = isDate(b);
  if (aValidType || bValidType) {
    return aValidType && bValidType ? a.getTime() === b.getTime() : false;
  }
  aValidType = isSymbol(a);
  bValidType = isSymbol(b);
  if (aValidType || bValidType) {
    return a === b;
  }
  aValidType = isArray(a);
  bValidType = isArray(b);
  if (aValidType || bValidType) {
    return aValidType && bValidType ? looseCompareArrays(a, b) : false;
  }
  aValidType = isObject$1(a);
  bValidType = isObject$1(b);
  if (aValidType || bValidType) {
    if (!aValidType || !bValidType) {
      return false;
    }
    const aKeysCount = Object.keys(a).length;
    const bKeysCount = Object.keys(b).length;
    if (aKeysCount !== bKeysCount) {
      return false;
    }
    for (const key in a) {
      const aHasKey = a.hasOwnProperty(key);
      const bHasKey = b.hasOwnProperty(key);
      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {
        return false;
      }
    }
  }
  return String(a) === String(b);
}
function looseIndexOf(arr, val) {
  return arr.findIndex((item) => looseEqual(item, val));
}
const toDisplayString = (val) => {
  return isString(val) ? val : val == null ? "" : isArray(val) || isObject$1(val) && (val.toString === objectToString || !isFunction(val.toString)) ? JSON.stringify(val, replacer, 2) : String(val);
};
const replacer = (_key, val) => {
  if (val && val.__v_isRef) {
    return replacer(_key, val.value);
  } else if (isMap(val)) {
    return {
      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val2]) => {
        entries[`${key} =>`] = val2;
        return entries;
      }, {})
    };
  } else if (isSet(val)) {
    return {
      [`Set(${val.size})`]: [...val.values()]
    };
  } else if (isObject$1(val) && !isArray(val) && !isPlainObject(val)) {
    return String(val);
  }
  return val;
};
const EMPTY_OBJ = {};
const EMPTY_ARR = [];
const NOOP = () => {
};
const NO = () => false;
const onRE = /^on[^a-z]/;
const isOn = (key) => onRE.test(key);
const isModelListener = (key) => key.startsWith("onUpdate:");
const extend = Object.assign;
const remove = (arr, el) => {
  const i = arr.indexOf(el);
  if (i > -1) {
    arr.splice(i, 1);
  }
};
const hasOwnProperty = Object.prototype.hasOwnProperty;
const hasOwn = (val, key) => hasOwnProperty.call(val, key);
const isArray = Array.isArray;
const isMap = (val) => toTypeString(val) === "[object Map]";
const isSet = (val) => toTypeString(val) === "[object Set]";
const isDate = (val) => toTypeString(val) === "[object Date]";
const isFunction = (val) => typeof val === "function";
const isString = (val) => typeof val === "string";
const isSymbol = (val) => typeof val === "symbol";
const isObject$1 = (val) => val !== null && typeof val === "object";
const isPromise = (val) => {
  return isObject$1(val) && isFunction(val.then) && isFunction(val.catch);
};
const objectToString = Object.prototype.toString;
const toTypeString = (value) => objectToString.call(value);
const toRawType = (value) => {
  return toTypeString(value).slice(8, -1);
};
const isPlainObject = (val) => toTypeString(val) === "[object Object]";
const isIntegerKey = (key) => isString(key) && key !== "NaN" && key[0] !== "-" && "" + parseInt(key, 10) === key;
const isReservedProp = /* @__PURE__ */ makeMap(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted");
const isBuiltInDirective = /* @__PURE__ */ makeMap("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo");
const cacheStringFunction = (fn) => {
  const cache = /* @__PURE__ */ Object.create(null);
  return (str) => {
    const hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
};
const camelizeRE = /-(\w)/g;
const camelize = cacheStringFunction((str) => {
  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : "");
});
const hyphenateRE = /\B([A-Z])/g;
const hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, "-$1").toLowerCase());
const capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));
const toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);
const hasChanged = (value, oldValue) => !Object.is(value, oldValue);
const invokeArrayFns = (fns, arg) => {
  for (let i = 0; i < fns.length; i++) {
    fns[i](arg);
  }
};
const def = (obj, key, value) => {
  Object.defineProperty(obj, key, {
    configurable: true,
    enumerable: false,
    value
  });
};
const toNumber = (val) => {
  const n = parseFloat(val);
  return isNaN(n) ? val : n;
};
let _globalThis;
const getGlobalThis = () => {
  return _globalThis || (_globalThis = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof commonjsGlobal !== "undefined" ? commonjsGlobal : {});
};
const identRE = /^[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*$/;
function genPropsAccessExp(name) {
  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;
}
shared_cjs_prod.EMPTY_ARR = EMPTY_ARR;
shared_cjs_prod.EMPTY_OBJ = EMPTY_OBJ;
shared_cjs_prod.NO = NO;
shared_cjs_prod.NOOP = NOOP;
shared_cjs_prod.PatchFlagNames = PatchFlagNames;
shared_cjs_prod.camelize = camelize;
shared_cjs_prod.capitalize = capitalize;
shared_cjs_prod.def = def;
shared_cjs_prod.escapeHtml = escapeHtml;
shared_cjs_prod.escapeHtmlComment = escapeHtmlComment;
shared_cjs_prod.extend = extend;
shared_cjs_prod.genPropsAccessExp = genPropsAccessExp;
shared_cjs_prod.generateCodeFrame = generateCodeFrame;
shared_cjs_prod.getGlobalThis = getGlobalThis;
shared_cjs_prod.hasChanged = hasChanged;
shared_cjs_prod.hasOwn = hasOwn;
shared_cjs_prod.hyphenate = hyphenate;
shared_cjs_prod.includeBooleanAttr = includeBooleanAttr;
shared_cjs_prod.invokeArrayFns = invokeArrayFns;
shared_cjs_prod.isArray = isArray;
shared_cjs_prod.isBooleanAttr = isBooleanAttr;
shared_cjs_prod.isBuiltInDirective = isBuiltInDirective;
shared_cjs_prod.isDate = isDate;
var isFunction_1 = shared_cjs_prod.isFunction = isFunction;
shared_cjs_prod.isGloballyWhitelisted = isGloballyWhitelisted;
shared_cjs_prod.isHTMLTag = isHTMLTag;
shared_cjs_prod.isIntegerKey = isIntegerKey;
shared_cjs_prod.isKnownHtmlAttr = isKnownHtmlAttr;
shared_cjs_prod.isKnownSvgAttr = isKnownSvgAttr;
shared_cjs_prod.isMap = isMap;
shared_cjs_prod.isModelListener = isModelListener;
shared_cjs_prod.isNoUnitNumericStyleProp = isNoUnitNumericStyleProp;
shared_cjs_prod.isObject = isObject$1;
shared_cjs_prod.isOn = isOn;
shared_cjs_prod.isPlainObject = isPlainObject;
shared_cjs_prod.isPromise = isPromise;
shared_cjs_prod.isReservedProp = isReservedProp;
shared_cjs_prod.isSSRSafeAttrName = isSSRSafeAttrName;
shared_cjs_prod.isSVGTag = isSVGTag;
shared_cjs_prod.isSet = isSet;
shared_cjs_prod.isSpecialBooleanAttr = isSpecialBooleanAttr;
shared_cjs_prod.isString = isString;
shared_cjs_prod.isSymbol = isSymbol;
shared_cjs_prod.isVoidTag = isVoidTag;
shared_cjs_prod.looseEqual = looseEqual;
shared_cjs_prod.looseIndexOf = looseIndexOf;
shared_cjs_prod.makeMap = makeMap;
shared_cjs_prod.normalizeClass = normalizeClass;
shared_cjs_prod.normalizeProps = normalizeProps;
shared_cjs_prod.normalizeStyle = normalizeStyle;
shared_cjs_prod.objectToString = objectToString;
shared_cjs_prod.parseStringStyle = parseStringStyle;
shared_cjs_prod.propsToAttrMap = propsToAttrMap;
shared_cjs_prod.remove = remove;
shared_cjs_prod.slotFlagsText = slotFlagsText;
shared_cjs_prod.stringifyStyle = stringifyStyle;
shared_cjs_prod.toDisplayString = toDisplayString;
shared_cjs_prod.toHandlerKey = toHandlerKey;
shared_cjs_prod.toNumber = toNumber;
shared_cjs_prod.toRawType = toRawType;
shared_cjs_prod.toTypeString = toTypeString;
function useHead(meta2) {
  const resolvedMeta = isFunction_1(meta2) ? vue_cjs_prod.computed(meta2) : meta2;
  useNuxtApp()._useHead(resolvedMeta);
}
const preload = defineNuxtPlugin((nuxtApp) => {
  nuxtApp.vueApp.mixin({
    beforeCreate() {
      const { _registeredComponents } = this.$nuxt.ssrContext;
      const { __moduleIdentifier } = this.$options;
      _registeredComponents.add(__moduleIdentifier);
    }
  });
});
const components = {};
function C_58_47GitHub_47anya_47_46nuxt_47components_46plugin_46mjs(nuxtApp) {
  for (const name in components) {
    nuxtApp.vueApp.component(name, components[name]);
    nuxtApp.vueApp.component("Lazy" + name, components[name]);
  }
}
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var PROVIDE_KEY = `usehead`;
var HEAD_COUNT_KEY = `head:count`;
var HEAD_ATTRS_KEY = `data-head-attrs`;
var SELF_CLOSING_TAGS = ["meta", "link", "base"];
var createElement = (tag, attrs, document2) => {
  const el = document2.createElement(tag);
  for (const key of Object.keys(attrs)) {
    let value = attrs[key];
    if (key === "key" || value === false) {
      continue;
    }
    if (key === "children") {
      el.textContent = value;
    } else {
      el.setAttribute(key, value);
    }
  }
  return el;
};
var htmlEscape = (str) => str.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
var stringifyAttrs = (attributes) => {
  const handledAttributes = [];
  for (let [key, value] of Object.entries(attributes)) {
    if (key === "children" || key === "key") {
      continue;
    }
    if (value === false || value == null) {
      continue;
    }
    let attribute = htmlEscape(key);
    if (value !== true) {
      attribute += `="${htmlEscape(String(value))}"`;
    }
    handledAttributes.push(attribute);
  }
  return handledAttributes.length > 0 ? " " + handledAttributes.join(" ") : "";
};
function isEqualNode(oldTag, newTag) {
  if (oldTag instanceof HTMLElement && newTag instanceof HTMLElement) {
    const nonce = newTag.getAttribute("nonce");
    if (nonce && !oldTag.getAttribute("nonce")) {
      const cloneTag = newTag.cloneNode(true);
      cloneTag.setAttribute("nonce", "");
      cloneTag.nonce = nonce;
      return nonce === oldTag.nonce && oldTag.isEqualNode(cloneTag);
    }
  }
  return oldTag.isEqualNode(newTag);
}
var getTagKey = (props) => {
  const names = ["key", "id", "name", "property"];
  for (const n of names) {
    const value = typeof props.getAttribute === "function" ? props.hasAttribute(n) ? props.getAttribute(n) : void 0 : props[n];
    if (value !== void 0) {
      return { name: n, value };
    }
  }
};
var acceptFields = [
  "title",
  "meta",
  "link",
  "base",
  "style",
  "script",
  "htmlAttrs",
  "bodyAttrs"
];
var headObjToTags = (obj) => {
  const tags = [];
  for (const key of Object.keys(obj)) {
    if (obj[key] == null)
      continue;
    if (key === "title") {
      tags.push({ tag: key, props: { children: obj[key] } });
    } else if (key === "base") {
      tags.push({ tag: key, props: __spreadValues({ key: "default" }, obj[key]) });
    } else if (acceptFields.includes(key)) {
      const value = obj[key];
      if (Array.isArray(value)) {
        value.forEach((item) => {
          tags.push({ tag: key, props: item });
        });
      } else if (value) {
        tags.push({ tag: key, props: value });
      }
    }
  }
  return tags;
};
var setAttrs = (el, attrs) => {
  const existingAttrs = el.getAttribute(HEAD_ATTRS_KEY);
  if (existingAttrs) {
    for (const key of existingAttrs.split(",")) {
      if (!(key in attrs)) {
        el.removeAttribute(key);
      }
    }
  }
  const keys = [];
  for (const key in attrs) {
    const value = attrs[key];
    if (value == null)
      continue;
    if (value === false) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, value);
    }
    keys.push(key);
  }
  if (keys.length) {
    el.setAttribute(HEAD_ATTRS_KEY, keys.join(","));
  } else {
    el.removeAttribute(HEAD_ATTRS_KEY);
  }
};
var updateElements = (document2 = window.document, type, tags) => {
  var _a;
  const head = document2.head;
  let headCountEl = head.querySelector(`meta[name="${HEAD_COUNT_KEY}"]`);
  const headCount = headCountEl ? Number(headCountEl.getAttribute("content")) : 0;
  const oldElements = [];
  if (headCountEl) {
    for (let i = 0, j = headCountEl.previousElementSibling; i < headCount; i++, j = (j == null ? void 0 : j.previousElementSibling) || null) {
      if (((_a = j == null ? void 0 : j.tagName) == null ? void 0 : _a.toLowerCase()) === type) {
        oldElements.push(j);
      }
    }
  } else {
    headCountEl = document2.createElement("meta");
    headCountEl.setAttribute("name", HEAD_COUNT_KEY);
    headCountEl.setAttribute("content", "0");
    head.append(headCountEl);
  }
  let newElements = tags.map((tag) => createElement(tag.tag, tag.props, document2));
  newElements = newElements.filter((newEl) => {
    for (let i = 0; i < oldElements.length; i++) {
      const oldEl = oldElements[i];
      if (isEqualNode(oldEl, newEl)) {
        oldElements.splice(i, 1);
        return false;
      }
    }
    return true;
  });
  oldElements.forEach((t) => {
    var _a2;
    return (_a2 = t.parentNode) == null ? void 0 : _a2.removeChild(t);
  });
  newElements.forEach((t) => {
    head.insertBefore(t, headCountEl);
  });
  headCountEl.setAttribute("content", "" + (headCount - oldElements.length + newElements.length));
};
var createHead = () => {
  let allHeadObjs = [];
  let previousTags = /* @__PURE__ */ new Set();
  const head = {
    install(app) {
      app.config.globalProperties.$head = head;
      app.provide(PROVIDE_KEY, head);
    },
    get headTags() {
      const deduped = [];
      allHeadObjs.forEach((objs) => {
        const tags = headObjToTags(objs.value);
        tags.forEach((tag) => {
          if (tag.tag === "meta" || tag.tag === "base" || tag.tag === "script") {
            const key = getTagKey(tag.props);
            if (key) {
              let index2 = -1;
              for (let i = 0; i < deduped.length; i++) {
                const prev = deduped[i];
                const prevValue = prev.props[key.name];
                const nextValue = tag.props[key.name];
                if (prev.tag === tag.tag && prevValue === nextValue) {
                  index2 = i;
                  break;
                }
              }
              if (index2 !== -1) {
                deduped.splice(index2, 1);
              }
            }
          }
          deduped.push(tag);
        });
      });
      return deduped;
    },
    addHeadObjs(objs) {
      allHeadObjs.push(objs);
    },
    removeHeadObjs(objs) {
      allHeadObjs = allHeadObjs.filter((_objs) => _objs !== objs);
    },
    updateDOM(document2 = window.document) {
      let title;
      let htmlAttrs = {};
      let bodyAttrs = {};
      const actualTags = {};
      for (const tag of head.headTags) {
        if (tag.tag === "title") {
          title = tag.props.children;
          continue;
        }
        if (tag.tag === "htmlAttrs") {
          Object.assign(htmlAttrs, tag.props);
          continue;
        }
        if (tag.tag === "bodyAttrs") {
          Object.assign(bodyAttrs, tag.props);
          continue;
        }
        actualTags[tag.tag] = actualTags[tag.tag] || [];
        actualTags[tag.tag].push(tag);
      }
      if (title !== void 0) {
        document2.title = title;
      }
      setAttrs(document2.documentElement, htmlAttrs);
      setAttrs(document2.body, bodyAttrs);
      const tags = /* @__PURE__ */ new Set([...Object.keys(actualTags), ...previousTags]);
      for (const tag of tags) {
        updateElements(document2, tag, actualTags[tag] || []);
      }
      previousTags.clear();
      Object.keys(actualTags).forEach((i) => previousTags.add(i));
    }
  };
  return head;
};
var tagToString = (tag) => {
  let attrs = stringifyAttrs(tag.props);
  if (SELF_CLOSING_TAGS.includes(tag.tag)) {
    return `<${tag.tag}${attrs}>`;
  }
  return `<${tag.tag}${attrs}>${tag.props.children || ""}</${tag.tag}>`;
};
var renderHeadToString = (head) => {
  const tags = [];
  let titleTag = "";
  let htmlAttrs = {};
  let bodyAttrs = {};
  for (const tag of head.headTags) {
    if (tag.tag === "title") {
      titleTag = tagToString(tag);
    } else if (tag.tag === "htmlAttrs") {
      Object.assign(htmlAttrs, tag.props);
    } else if (tag.tag === "bodyAttrs") {
      Object.assign(bodyAttrs, tag.props);
    } else {
      tags.push(tagToString(tag));
    }
  }
  tags.push(`<meta name="${HEAD_COUNT_KEY}" content="${tags.length}">`);
  return {
    get headTags() {
      return titleTag + tags.join("");
    },
    get htmlAttrs() {
      return stringifyAttrs(__spreadProps(__spreadValues({}, htmlAttrs), {
        [HEAD_ATTRS_KEY]: Object.keys(htmlAttrs).join(",")
      }));
    },
    get bodyAttrs() {
      return stringifyAttrs(__spreadProps(__spreadValues({}, bodyAttrs), {
        [HEAD_ATTRS_KEY]: Object.keys(bodyAttrs).join(",")
      }));
    }
  };
};
function isObject(val) {
  return val !== null && typeof val === "object";
}
function _defu(baseObj, defaults2, namespace = ".", merger) {
  if (!isObject(defaults2)) {
    return _defu(baseObj, {}, namespace, merger);
  }
  const obj = Object.assign({}, defaults2);
  for (const key in baseObj) {
    if (key === "__proto__" || key === "constructor") {
      continue;
    }
    const val = baseObj[key];
    if (val === null || val === void 0) {
      continue;
    }
    if (merger && merger(obj, key, val, namespace)) {
      continue;
    }
    if (Array.isArray(val) && Array.isArray(obj[key])) {
      obj[key] = val.concat(obj[key]);
    } else if (isObject(val) && isObject(obj[key])) {
      obj[key] = _defu(val, obj[key], (namespace ? `${namespace}.` : "") + key.toString(), merger);
    } else {
      obj[key] = val;
    }
  }
  return obj;
}
function createDefu(merger) {
  return (...args) => args.reduce((p, c) => _defu(p, c, "", merger), {});
}
const defu = createDefu();
const C_58_47GitHub_47anya_47node_modules_47nuxt_47dist_47head_47runtime_47lib_47vueuse_45head_46plugin = defineNuxtPlugin((nuxtApp) => {
  const head = createHead();
  nuxtApp.vueApp.use(head);
  nuxtApp.hooks.hookOnce("app:mounted", () => {
    vue_cjs_prod.watchEffect(() => {
      head.updateDOM();
    });
  });
  const titleTemplate = vue_cjs_prod.ref();
  nuxtApp._useHead = (_meta) => {
    const meta2 = vue_cjs_prod.ref(_meta);
    if ("titleTemplate" in meta2.value) {
      titleTemplate.value = meta2.value.titleTemplate;
    }
    const headObj = vue_cjs_prod.computed(() => {
      const overrides = { meta: [] };
      if (titleTemplate.value && "title" in meta2.value) {
        overrides.title = typeof titleTemplate.value === "function" ? titleTemplate.value(meta2.value.title) : titleTemplate.value.replace(/%s/g, meta2.value.title);
      }
      if (meta2.value.charset) {
        overrides.meta.push({ key: "charset", charset: meta2.value.charset });
      }
      if (meta2.value.viewport) {
        overrides.meta.push({ name: "viewport", content: meta2.value.viewport });
      }
      return defu(overrides, meta2.value);
    });
    head.addHeadObjs(headObj);
    {
      return;
    }
  };
  {
    nuxtApp.ssrContext.renderMeta = () => renderHeadToString(head);
  }
});
const removeUndefinedProps = (props) => Object.fromEntries(Object.entries(props).filter(([, value]) => value !== void 0));
const setupForUseMeta = (metaFactory, renderChild) => (props, ctx) => {
  useHead(() => metaFactory({ ...removeUndefinedProps(props), ...ctx.attrs }, ctx));
  return () => {
    var _a, _b;
    return renderChild ? (_b = (_a = ctx.slots).default) == null ? void 0 : _b.call(_a) : null;
  };
};
const globalProps = {
  accesskey: String,
  autocapitalize: String,
  autofocus: {
    type: Boolean,
    default: void 0
  },
  class: String,
  contenteditable: {
    type: Boolean,
    default: void 0
  },
  contextmenu: String,
  dir: String,
  draggable: {
    type: Boolean,
    default: void 0
  },
  enterkeyhint: String,
  exportparts: String,
  hidden: {
    type: Boolean,
    default: void 0
  },
  id: String,
  inputmode: String,
  is: String,
  itemid: String,
  itemprop: String,
  itemref: String,
  itemscope: String,
  itemtype: String,
  lang: String,
  nonce: String,
  part: String,
  slot: String,
  spellcheck: {
    type: Boolean,
    default: void 0
  },
  style: String,
  tabindex: String,
  title: String,
  translate: String
};
const Script = vue_cjs_prod.defineComponent({
  name: "Script",
  inheritAttrs: false,
  props: {
    ...globalProps,
    async: Boolean,
    crossorigin: {
      type: [Boolean, String],
      default: void 0
    },
    defer: Boolean,
    integrity: String,
    nomodule: Boolean,
    nonce: String,
    referrerpolicy: String,
    src: String,
    type: String,
    charset: String,
    language: String
  },
  setup: setupForUseMeta((script) => ({
    script: [script]
  }))
});
const Link = vue_cjs_prod.defineComponent({
  name: "Link",
  inheritAttrs: false,
  props: {
    ...globalProps,
    as: String,
    crossorigin: String,
    disabled: Boolean,
    href: String,
    hreflang: String,
    imagesizes: String,
    imagesrcset: String,
    integrity: String,
    media: String,
    prefetch: {
      type: Boolean,
      default: void 0
    },
    referrerpolicy: String,
    rel: String,
    sizes: String,
    title: String,
    type: String,
    methods: String,
    target: String
  },
  setup: setupForUseMeta((link) => ({
    link: [link]
  }))
});
const Base = vue_cjs_prod.defineComponent({
  name: "Base",
  inheritAttrs: false,
  props: {
    ...globalProps,
    href: String,
    target: String
  },
  setup: setupForUseMeta((base) => ({
    base
  }))
});
const Title = vue_cjs_prod.defineComponent({
  name: "Title",
  inheritAttrs: false,
  setup: setupForUseMeta((_, { slots }) => {
    var _a, _b, _c;
    const title = ((_c = (_b = (_a = slots.default) == null ? void 0 : _a.call(slots)) == null ? void 0 : _b[0]) == null ? void 0 : _c.children) || null;
    return {
      title
    };
  })
});
const Meta = vue_cjs_prod.defineComponent({
  name: "Meta",
  inheritAttrs: false,
  props: {
    ...globalProps,
    charset: String,
    content: String,
    httpEquiv: String,
    name: String
  },
  setup: setupForUseMeta((meta2) => ({
    meta: [meta2]
  }))
});
const Style = vue_cjs_prod.defineComponent({
  name: "Style",
  inheritAttrs: false,
  props: {
    ...globalProps,
    type: String,
    media: String,
    nonce: String,
    title: String,
    scoped: {
      type: Boolean,
      default: void 0
    }
  },
  setup: setupForUseMeta((props, { slots }) => {
    var _a, _b, _c;
    const style = { ...props };
    const textContent = (_c = (_b = (_a = slots.default) == null ? void 0 : _a.call(slots)) == null ? void 0 : _b[0]) == null ? void 0 : _c.children;
    if (textContent) {
      style.children = textContent;
    }
    return {
      style: [style]
    };
  })
});
const Head = vue_cjs_prod.defineComponent({
  name: "Head",
  inheritAttrs: false,
  setup: (_props, ctx) => () => {
    var _a, _b;
    return (_b = (_a = ctx.slots).default) == null ? void 0 : _b.call(_a);
  }
});
const Html = vue_cjs_prod.defineComponent({
  name: "Html",
  inheritAttrs: false,
  props: {
    ...globalProps,
    manifest: String,
    version: String,
    xmlns: String
  },
  setup: setupForUseMeta((htmlAttrs) => ({ htmlAttrs }), true)
});
const Body = vue_cjs_prod.defineComponent({
  name: "Body",
  inheritAttrs: false,
  props: globalProps,
  setup: setupForUseMeta((bodyAttrs) => ({ bodyAttrs }), true)
});
const Components = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Script,
  Link,
  Base,
  Title,
  Meta,
  Style,
  Head,
  Html,
  Body
}, Symbol.toStringTag, { value: "Module" }));
const metaConfig = { "globalMeta": { "charset": "utf-8", "viewport": "width=device-width, initial-scale=1", "meta": [], "link": [], "style": [], "script": [], "title": "A Better Nuxt 3 Starter" } };
const metaMixin = {
  created() {
    const instance = vue_cjs_prod.getCurrentInstance();
    if (!instance) {
      return;
    }
    const options = instance.type;
    if (!options || !("head" in options)) {
      return;
    }
    const nuxtApp = useNuxtApp();
    const source = typeof options.head === "function" ? vue_cjs_prod.computed(() => options.head(nuxtApp)) : options.head;
    useHead(source);
  }
};
const C_58_47GitHub_47anya_47node_modules_47nuxt_47dist_47head_47runtime_47plugin = defineNuxtPlugin((nuxtApp) => {
  useHead(vue_cjs_prod.markRaw({ title: "", ...metaConfig.globalMeta }));
  nuxtApp.vueApp.mixin(metaMixin);
  for (const name in Components) {
    nuxtApp.vueApp.component(name, Components[name]);
  }
});
const interpolatePath = (route, match) => {
  return match.path.replace(/(:\w+)\([^)]+\)/g, "$1").replace(/(:\w+)[?+*]/g, "$1").replace(/:\w+/g, (r) => {
    var _a;
    return ((_a = route.params[r.slice(1)]) == null ? void 0 : _a.toString()) || "";
  });
};
const generateRouteKey = (override, routeProps) => {
  var _a;
  const matchedRoute = routeProps.route.matched.find((m) => m.components.default === routeProps.Component.type);
  const source = (_a = override != null ? override : matchedRoute == null ? void 0 : matchedRoute.meta.key) != null ? _a : interpolatePath(routeProps.route, matchedRoute);
  return typeof source === "function" ? source(routeProps.route) : source;
};
const wrapInKeepAlive = (props, children) => {
  return { default: () => children };
};
const Fragment = {
  setup(_props, { slots }) {
    return () => {
      var _a;
      return (_a = slots.default) == null ? void 0 : _a.call(slots);
    };
  }
};
const _wrapIf = (component, props, slots) => {
  return { default: () => props ? vue_cjs_prod.h(component, props === true ? {} : props, slots) : vue_cjs_prod.h(Fragment, {}, slots) };
};
const isNestedKey = Symbol("isNested");
const NuxtPage = vue_cjs_prod.defineComponent({
  name: "NuxtPage",
  inheritAttrs: false,
  props: {
    name: {
      type: String
    },
    route: {
      type: Object
    },
    pageKey: {
      type: [Function, String],
      default: null
    }
  },
  setup(props, { attrs }) {
    const nuxtApp = useNuxtApp();
    const isNested = vue_cjs_prod.inject(isNestedKey, false);
    vue_cjs_prod.provide(isNestedKey, true);
    return () => {
      return vue_cjs_prod.h(vueRouter_cjs_prod.RouterView, { name: props.name, route: props.route, ...attrs }, {
        default: (routeProps) => {
          var _a;
          return routeProps.Component && _wrapIf(vue_cjs_prod.Transition, (_a = routeProps.route.meta.pageTransition) != null ? _a : defaultPageTransition, wrapInKeepAlive(routeProps.route.meta.keepalive, isNested && nuxtApp.isHydrating ? vue_cjs_prod.h(routeProps.Component, { key: generateRouteKey(props.pageKey, routeProps) }) : vue_cjs_prod.h(vue_cjs_prod.Suspense, {
            onPending: () => nuxtApp.callHook("page:start", routeProps.Component),
            onResolve: () => nuxtApp.callHook("page:finish", routeProps.Component)
          }, { default: () => vue_cjs_prod.h(routeProps.Component, { key: generateRouteKey(props.pageKey, routeProps) }) }))).default();
        }
      });
    };
  }
});
const defaultPageTransition = { name: "page", mode: "out-in" };
const _sfc_main$i = /* @__PURE__ */ vue_cjs_prod.defineComponent({
  __name: "index",
  __ssrInlineRender: true,
  setup(__props) {
    const buttons = [
      {
        name: "\u041E\u0442\u043C\u0435\u0442\u0438\u0442\u0441\u044F \u043E \u043F\u0440\u0438\u0445\u043E\u0434\u0435",
        icon: vueTablerIcons.LoginIcon,
        path: "/"
      },
      {
        name: "\u041E\u0442\u043C\u0435\u0442\u0438\u0442\u0441\u044F \u043E\u0431 \u0443\u0445\u043E\u0434\u0435",
        icon: vueTablerIcons.LogoutIcon,
        path: "/"
      },
      {
        name: "\u041F\u0440\u0438\u043D\u044F\u0442\u044C \u043F\u043E\u0441\u0442\u0430\u0432\u043A\u0443",
        icon: vueTablerIcons.TruckIcon,
        path: "/"
      },
      {
        name: "\u041F\u0440\u0438\u043D\u044F\u0442\u044C \u0442\u043E\u0432\u0430\u0440 \u043D\u0430 \u0441\u043A\u043B\u0430\u0434",
        icon: vueTablerIcons.BarcodeIcon,
        path: "/scan"
      },
      {
        name: "\u0421\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u0435 \u0441\u043A\u043B\u0430\u0434\u0430",
        icon: vueTablerIcons.CheckIcon,
        path: "/"
      },
      {
        name: "\u041A\u0443\u0440\u044C\u0435\u0440\u0441\u043A\u0438\u0435 \u0434\u043E\u0441\u0442\u0430\u0432\u043A\u0438",
        icon: vueTablerIcons.CalendarStatsIcon,
        path: "/"
      }
    ];
    return (_ctx, _push, _parent, _attrs) => {
      const _component_nuxt_link = __nuxt_component_0$1;
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "grid items-center grid-cols-2 gap-4 my-24 text-primary" }, _attrs))}><!--[-->`);
      serverRenderer.exports.ssrRenderList(buttons, (button) => {
        _push(serverRenderer.exports.ssrRenderComponent(_component_nuxt_link, {
          to: button.path,
          class: "flex flex-row col-span-1 gap-2 text-2xl normal-case btn btn-outline btn-lg"
        }, {
          default: vue_cjs_prod.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              serverRenderer.exports.ssrRenderVNode(_push2, vue_cjs_prod.createVNode(vue_cjs_prod.resolveDynamicComponent(button.icon), null, null), _parent2, _scopeId);
              _push2(`${serverRenderer.exports.ssrInterpolate(button.name)}`);
            } else {
              return [
                (vue_cjs_prod.openBlock(), vue_cjs_prod.createBlock(vue_cjs_prod.resolveDynamicComponent(button.icon))),
                vue_cjs_prod.createTextVNode(vue_cjs_prod.toDisplayString(button.name), 1)
              ];
            }
          }),
          _: 2
        }, _parent));
      });
      _push(`<!--]--></div>`);
    };
  }
});
const _sfc_setup$i = _sfc_main$i.setup;
_sfc_main$i.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/index.vue");
  return _sfc_setup$i ? _sfc_setup$i(props, ctx) : void 0;
};
const meta$4 = {
  middleware: ["with-auth"],
  layout: "panel"
};
const _sfc_main$h = /* @__PURE__ */ vue_cjs_prod.defineComponent({
  __name: "info",
  __ssrInlineRender: true,
  setup(__props) {
    const state = vue_cjs_prod.reactive({ search: null, item: null, error: false });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "flex flex-col items-center justify-center w-full gap-2" }, _attrs))}><div class="flex flex-col w-full gap-4 m-auto"><div class="shadow-xl card bg-base-100"><div class="card-body"><form class="flex flex-row items-center w-full gap-2"><div class="w-full form-control"><input${serverRenderer.exports.ssrRenderAttr("value", state.search)} type="text" required placeholder="\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0431\u0430\u0440\u043A\u043E\u0434 \u0442\u043E\u0432\u0430\u0440\u0430..." class="w-full input input-bordered"></div><div class="justify-start card-actions"><button type="submit" class="btn btn-primary btn-md">`);
      _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), null, null, _parent));
      _push(`</button></div></form>`);
      if (!state.error && state.item) {
        _push(`<div class="grid grid-cols-3 grid-rows-3 stats"><div class="col-span-1 border-none stat"><div class="stat-title">\u0411\u0430\u0440\u043A\u043E\u0434</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Barcode)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\u0440\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Naimenovanie)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0410\u0440\u0442\u0438\u043A\u0443\u043B</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Artikyl)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041C\u0430\u0440\u043A\u0430 \u0442\u043E\u0432\u0430\u0440\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Marka_Tovara)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0414\u0430\u0442\u0430 \u043F\u043E\u0441\u0442\u0443\u043F\u043B\u0435\u043D\u0438\u044F</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(vue_cjs_prod.unref(format)(new Date(state.item.Data_postuplenia_na_sklad), "dd MMMM yyyy", { locale: vue_cjs_prod.unref(ru) }))}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0426\u0435\u043D\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Price)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041F\u043E\u0441\u0442\u0430\u0432\u0449\u0438\u043A</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Postavchik.INN)}</div><div class="stat-desc">${serverRenderer.exports.ssrInterpolate(state.item.Postavchik.Naimenovanie)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0420\u0430\u0431\u043E\u0442\u043D\u0438\u043A</div><div class="stat-value">\u2116${serverRenderer.exports.ssrInterpolate(state.item.Rabotnik.id_Rabotnika)}</div><div class="stat-desc">${serverRenderer.exports.ssrInterpolate(state.item.Rabotnik.Familia)} ${serverRenderer.exports.ssrInterpolate(state.item.Rabotnik.Name)} ${serverRenderer.exports.ssrInterpolate(state.item.Rabotnik.Otchestvo)}</div></div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
      if (state.error) {
        _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-error">`);
        _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), { class: "flex-shrink-0" }, null, _parent));
        _push(`<span class="w-auto">\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043D\u0430\u0439\u0442\u0438 \u0442\u043E\u0432\u0430\u0440 \u0441 \u0434\u0430\u043D\u043D\u044B\u043C \u0431\u0430\u0440\u043A\u043E\u0434\u043E\u043C</span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$h = _sfc_main$h.setup;
_sfc_main$h.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/info.vue");
  return _sfc_setup$h ? _sfc_setup$h(props, ctx) : void 0;
};
const meta$3 = {
  middleware: ["with-auth"],
  layout: "panel"
};
const _sfc_main$g = /* @__PURE__ */ vue_cjs_prod.defineComponent({
  __name: "login",
  __ssrInlineRender: true,
  setup(__props) {
    useCookie("auth");
    useRouter();
    const state = vue_cjs_prod.reactive({ Login: null, Parol: null, error: null });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "flex flex-col items-center justify-center w-full h-screen gap-2" }, _attrs))}><div class="flex flex-col gap-4 m-auto min-w-[612px]"><h1 class="font-bold text-center text-white text-[4em] drop-shadow-xl shadow-zinc-800/80 mb-6">\u0421 \u0432\u043E\u0437\u0432\u0440\u0430\u0449\u0435\u043D\u0438\u0435\u043C! </h1><div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-info">`);
      _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.UsersIcon), { class: "flex-shrink-0" }, null, _parent));
      _push(`<span class="w-auto">\u0414\u043B\u044F \u0432\u0445\u043E\u0434\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043C\u0443 \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0443\u0439\u0442\u0435\u0441\u044C.</span></div><div class="shadow-xl card bg-base-100"><div class="card-body"><form><div class="w-full form-control"><label class="label"><span class="font-bold label-text">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043B\u043E\u0433\u0438\u043D</span></label><input${serverRenderer.exports.ssrRenderAttr("value", state.Login)} type="text" required placeholder="alex" class="w-full input input-bordered"></div><div class="w-full form-control"><label class="label"><span class="font-bold label-text">\u041F\u0430\u0440\u043E\u043B\u044C</span></label><input${serverRenderer.exports.ssrRenderAttr("value", state.Parol)} type="password" required class="w-full input input-bordered"></div><div class="justify-start card-actions"><button type="submit" class="mt-4 rounded-full btn btn-md">\u0412\u043E\u0439\u0442\u0438</button></div></form></div></div>`);
      if (state.error) {
        _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-error">`);
        _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.UsersIcon), { class: "flex-shrink-0" }, null, _parent));
        _push(`<span class="w-auto">${serverRenderer.exports.ssrInterpolate(state.error)}</span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$g = _sfc_main$g.setup;
_sfc_main$g.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/login.vue");
  return _sfc_setup$g ? _sfc_setup$g(props, ctx) : void 0;
};
const meta$2 = {
  middleware: ["without-auth"]
};
const _sfc_main$f = /* @__PURE__ */ vue_cjs_prod.defineComponent({
  __name: "lookup",
  __ssrInlineRender: true,
  setup(__props) {
    const state = vue_cjs_prod.reactive({ search: null, items: null });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "flex flex-col items-center justify-center w-full gap-2" }, _attrs))}><div class="flex flex-col w-full gap-4 m-auto"><div class="shadow-xl card bg-base-100"><div class="card-body"><form class="flex flex-row items-center w-full gap-2"><div class="w-full form-control"><input${serverRenderer.exports.ssrRenderAttr("value", state.search)} type="text" required placeholder="\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043A\u043E\u0434 \u0437\u0430\u043A\u0430\u0437\u0430 \u0438\u043B\u0438 \u0424\u0418\u041E \u043A\u043B\u0438\u0435\u043D\u0442\u0430" class="w-full input input-bordered"></div><div class="justify-start card-actions"><button type="submit" class="btn btn-primary btn-md">`);
      _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), null, null, _parent));
      _push(`</button></div></form><div class="overflow-x-auto">`);
      if (state.items && state.items.length > 0) {
        _push(`<table class="table w-full table-compact"><thead><tr><th>\u0424\u0418\u041E \u041A\u043B\u0438\u0435\u043D\u0442\u0430</th><th>\u0422\u0435\u043B\u0435\u0444\u043E\u043D</th></tr></thead><tbody><!--[-->`);
        serverRenderer.exports.ssrRenderList(state.items, (item) => {
          _push(`<tr><th>${serverRenderer.exports.ssrInterpolate(item.Pokypatel ? item.Pokypatel.Familia : item.Familia)} ${serverRenderer.exports.ssrInterpolate(item.Pokypatel ? item.Pokypatel.Name : item.Name)} ${serverRenderer.exports.ssrInterpolate(item.Pokypatel ? item.Pokypatel.Otchestvo : item.Otchestvo)}</th><td>${serverRenderer.exports.ssrInterpolate(item.Pokypatel ? item.Pokypatel.Telephone : item.Telephone)}</td></tr>`);
        });
        _push(`<!--]--></tbody></table>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div></div>`);
      if (state.items && state.items.length == 0) {
        _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-error">`);
        _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), { class: "flex-shrink-0" }, null, _parent));
        _push(`<span class="w-auto">\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043D\u0430\u0439\u0442\u0438 \u043A\u043B\u0438\u0435\u043D\u0442\u043E\u0432, \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0445 \u0437\u0430\u043F\u0440\u043E\u0441\u0443</span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$f = _sfc_main$f.setup;
_sfc_main$f.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/lookup.vue");
  return _sfc_setup$f ? _sfc_setup$f(props, ctx) : void 0;
};
const meta$1 = {
  middleware: ["with-auth"],
  layout: "panel"
};
const _sfc_main$e = /* @__PURE__ */ vue_cjs_prod.defineComponent({
  __name: "scan",
  __ssrInlineRender: true,
  setup(__props) {
    const state = vue_cjs_prod.reactive({ barcode: null, result: null, error: false });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "flex flex-col items-center justify-center w-full gap-2" }, _attrs))}><div class="flex flex-col w-full gap-4 m-auto"><div class="shadow-xl card bg-base-100"><div class="card-body"><form class="flex flex-row items-center w-full gap-2"><div class="w-full form-control"><input${serverRenderer.exports.ssrRenderAttr("value", state.barcode)} type="text" required placeholder="\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0431\u0430\u0440\u043A\u043E\u0434 \u0442\u043E\u0432\u0430\u0440\u0430..." class="w-full input input-bordered"></div><div class="justify-start card-actions"><button type="submit" class="btn btn-primary btn-md">`);
      _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), null, null, _parent));
      _push(`</button></div></form>`);
      if (!state.error && state.result) {
        _push(`<!--[-->`);
        if (state.result.wasCreated) {
          _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-success">`);
          _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), { class: "flex-shrink-0" }, null, _parent));
          _push(`<span class="w-auto">\u0422\u043E\u0432\u0430\u0440 \u0441 \u0431\u0430\u0440\u043A\u043E\u0434\u043E\u043C \u2116${serverRenderer.exports.ssrInterpolate(state.result.tovar.Barcode)} \u043F\u0440\u0438\u043D\u044F\u0442 \u0432 \u044F\u0447\u0435\u0439\u043A\u0443!</span></div>`);
        } else {
          _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-info">`);
          _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), { class: "flex-shrink-0" }, null, _parent));
          _push(`<span class="w-auto">\u0422\u043E\u0432\u0430\u0440 \u0441 \u0431\u0430\u0440\u043A\u043E\u0434\u043E\u043C \u2116${serverRenderer.exports.ssrInterpolate(state.result.tovar.Barcode)} \u0443\u0436\u0435 \u0431\u044B\u043B \u043F\u0440\u0438\u043D\u044F\u0442 \u0432 \u044F\u0447\u0435\u0439\u043A\u0443!</span></div>`);
        }
        _push(`<!--]-->`);
      } else {
        _push(`<!---->`);
      }
      if (!state.error && state.result) {
        _push(`<div class="stats"><div class="stat"><div class="stat-title">\u2116 \u044F\u0447\u0435\u0439\u043A\u0438</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.yacheika.id_Yacheiki)}</div></div><div class="stat"><div class="stat-title">\u2116 \u0441\u043A\u043B\u0430\u0434\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.yacheika.id_Sklada)}</div></div><div class="stat"><div class="stat-title">\u041F\u043E\u043A\u0443\u043F\u0430\u0442\u0435\u043B\u044C</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.yacheika.Pokupatel.Familia)} ${serverRenderer.exports.ssrInterpolate(state.result.yacheika.Pokupatel.Name)} ${serverRenderer.exports.ssrInterpolate(state.result.yacheika.Pokupatel.Otchestvo)}</div></div></div>`);
      } else {
        _push(`<!---->`);
      }
      if (!state.error && state.result) {
        _push(`<div class="grid grid-cols-3 grid-rows-3 stats"><div class="col-span-1 border-none stat"><div class="stat-title">\u0411\u0430\u0440\u043A\u043E\u0434</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Barcode)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\u0440\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Naimenovanie)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0410\u0440\u0442\u0438\u043A\u0443\u043B</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Artikyl)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041C\u0430\u0440\u043A\u0430 \u0442\u043E\u0432\u0430\u0440\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Marka_Tovara)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0414\u0430\u0442\u0430 \u043F\u043E\u0441\u0442\u0443\u043F\u043B\u0435\u043D\u0438\u044F</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(vue_cjs_prod.unref(format)(new Date(state.result.tovar.Data_postuplenia_na_sklad), "dd MMMM yyyy", { locale: vue_cjs_prod.unref(ru) }))}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0426\u0435\u043D\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Price)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041F\u043E\u0441\u0442\u0430\u0432\u0449\u0438\u043A</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Postavchik.INN)}</div><div class="stat-desc">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Postavchik.Naimenovanie)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0420\u0430\u0431\u043E\u0442\u043D\u0438\u043A</div><div class="stat-value">\u2116${serverRenderer.exports.ssrInterpolate(state.result.tovar.Rabotnik.id_Rabotnika)}</div><div class="stat-desc">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Rabotnik.Familia)} ${serverRenderer.exports.ssrInterpolate(state.result.tovar.Rabotnik.Name)} ${serverRenderer.exports.ssrInterpolate(state.result.tovar.Rabotnik.Otchestvo)}</div></div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
      if (state.error) {
        _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-error">`);
        _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), { class: "flex-shrink-0" }, null, _parent));
        _push(`<span class="w-auto">\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043D\u0430\u0439\u0442\u0438 \u0442\u043E\u0432\u0430\u0440 \u0441 \u0434\u0430\u043D\u043D\u044B\u043C \u0431\u0430\u0440\u043A\u043E\u0434\u043E\u043C</span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$e = _sfc_main$e.setup;
_sfc_main$e.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/scan.vue");
  return _sfc_setup$e ? _sfc_setup$e(props, ctx) : void 0;
};
const meta = {
  middleware: ["with-auth"],
  layout: "panel"
};
const routes = [
  {
    name: "index",
    path: "/",
    file: "C:/GitHub/anya/pages/index.vue",
    children: [],
    meta: meta$4,
    alias: (meta$4 == null ? void 0 : meta$4.alias) || [],
    component: () => Promise.resolve().then(function() {
      return index;
    })
  },
  {
    name: "info",
    path: "/info",
    file: "C:/GitHub/anya/pages/info.vue",
    children: [],
    meta: meta$3,
    alias: (meta$3 == null ? void 0 : meta$3.alias) || [],
    component: () => Promise.resolve().then(function() {
      return info;
    })
  },
  {
    name: "login",
    path: "/login",
    file: "C:/GitHub/anya/pages/login.vue",
    children: [],
    meta: meta$2,
    alias: (meta$2 == null ? void 0 : meta$2.alias) || [],
    component: () => Promise.resolve().then(function() {
      return login;
    })
  },
  {
    name: "lookup",
    path: "/lookup",
    file: "C:/GitHub/anya/pages/lookup.vue",
    children: [],
    meta: meta$1,
    alias: (meta$1 == null ? void 0 : meta$1.alias) || [],
    component: () => Promise.resolve().then(function() {
      return lookup;
    })
  },
  {
    name: "scan",
    path: "/scan",
    file: "C:/GitHub/anya/pages/scan.vue",
    children: [],
    meta,
    alias: (meta == null ? void 0 : meta.alias) || [],
    component: () => Promise.resolve().then(function() {
      return scan;
    })
  }
];
const configRouterOptions = {};
const routerOptions = {
  ...configRouterOptions
};
const globalMiddleware = [];
const namedMiddleware = {
  "with-auth": () => Promise.resolve().then(function() {
    return withAuth$1;
  }),
  "without-auth": () => Promise.resolve().then(function() {
    return withoutAuth$1;
  })
};
const C_58_47GitHub_47anya_47node_modules_47nuxt_47dist_47pages_47runtime_47router = defineNuxtPlugin(async (nuxtApp) => {
  nuxtApp.vueApp.component("NuxtPage", NuxtPage);
  nuxtApp.vueApp.component("NuxtNestedPage", NuxtPage);
  nuxtApp.vueApp.component("NuxtChild", NuxtPage);
  const baseURL2 = useRuntimeConfig().app.baseURL;
  const routerHistory = vueRouter_cjs_prod.createMemoryHistory(baseURL2);
  const initialURL = nuxtApp.ssrContext.url;
  const router = vueRouter_cjs_prod.createRouter({
    ...routerOptions,
    history: routerHistory,
    routes
  });
  nuxtApp.vueApp.use(router);
  const previousRoute = vue_cjs_prod.shallowRef(router.currentRoute.value);
  router.afterEach((_to, from) => {
    previousRoute.value = from;
  });
  Object.defineProperty(nuxtApp.vueApp.config.globalProperties, "previousRoute", {
    get: () => previousRoute.value
  });
  const route = {};
  for (const key in router.currentRoute.value) {
    route[key] = vue_cjs_prod.computed(() => router.currentRoute.value[key]);
  }
  const _activeRoute = vue_cjs_prod.shallowRef(router.resolve(initialURL));
  const syncCurrentRoute = () => {
    _activeRoute.value = router.currentRoute.value;
  };
  nuxtApp.hook("page:finish", syncCurrentRoute);
  router.afterEach((to, from) => {
    var _a, _b, _c, _d;
    if (((_b = (_a = to.matched[0]) == null ? void 0 : _a.components) == null ? void 0 : _b.default) === ((_d = (_c = from.matched[0]) == null ? void 0 : _c.components) == null ? void 0 : _d.default)) {
      syncCurrentRoute();
    }
  });
  const activeRoute = {};
  for (const key in _activeRoute.value) {
    activeRoute[key] = vue_cjs_prod.computed(() => _activeRoute.value[key]);
  }
  nuxtApp._route = vue_cjs_prod.reactive(route);
  nuxtApp._activeRoute = vue_cjs_prod.reactive(activeRoute);
  nuxtApp._middleware = nuxtApp._middleware || {
    global: [],
    named: {}
  };
  useError();
  try {
    if (true) {
      await router.push(initialURL);
    }
    await router.isReady();
  } catch (error2) {
    callWithNuxt(nuxtApp, throwError, [error2]);
  }
  router.beforeEach(async (to, from) => {
    var _a;
    to.meta = vue_cjs_prod.reactive(to.meta);
    nuxtApp._processingMiddleware = true;
    const middlewareEntries = /* @__PURE__ */ new Set([...globalMiddleware, ...nuxtApp._middleware.global]);
    for (const component of to.matched) {
      const componentMiddleware = component.meta.middleware;
      if (!componentMiddleware) {
        continue;
      }
      if (Array.isArray(componentMiddleware)) {
        for (const entry2 of componentMiddleware) {
          middlewareEntries.add(entry2);
        }
      } else {
        middlewareEntries.add(componentMiddleware);
      }
    }
    for (const entry2 of middlewareEntries) {
      const middleware = typeof entry2 === "string" ? nuxtApp._middleware.named[entry2] || await ((_a = namedMiddleware[entry2]) == null ? void 0 : _a.call(namedMiddleware).then((r) => r.default || r)) : entry2;
      if (!middleware) {
        throw new Error(`Unknown route middleware: '${entry2}'.`);
      }
      const result = await callWithNuxt(nuxtApp, middleware, [to, from]);
      {
        if (result === false || result instanceof Error) {
          const error2 = result || createError({
            statusMessage: `Route navigation aborted: ${initialURL}`
          });
          return callWithNuxt(nuxtApp, throwError, [error2]);
        }
      }
      if (result || result === false) {
        return result;
      }
    }
  });
  router.afterEach(async (to) => {
    delete nuxtApp._processingMiddleware;
    if (to.matched.length === 0) {
      callWithNuxt(nuxtApp, throwError, [createError({
        statusCode: 404,
        statusMessage: `Page not found: ${to.fullPath}`
      })]);
    } else if (to.matched[0].name === "404" && nuxtApp.ssrContext) {
      nuxtApp.ssrContext.res.statusCode = 404;
    } else {
      const currentURL = to.fullPath || "/";
      if (!isEqual(currentURL, initialURL)) {
        await callWithNuxt(nuxtApp, navigateTo, [currentURL]);
      }
    }
  });
  nuxtApp.hooks.hookOnce("app:created", async () => {
    try {
      await router.replace({
        ...router.resolve(initialURL),
        name: void 0,
        force: true
      });
    } catch (error2) {
      callWithNuxt(nuxtApp, throwError, [error2]);
    }
  });
  return { provide: { router } };
});
const _plugins = [
  preload,
  C_58_47GitHub_47anya_47_46nuxt_47components_46plugin_46mjs,
  C_58_47GitHub_47anya_47node_modules_47nuxt_47dist_47head_47runtime_47lib_47vueuse_45head_46plugin,
  C_58_47GitHub_47anya_47node_modules_47nuxt_47dist_47head_47runtime_47plugin,
  C_58_47GitHub_47anya_47node_modules_47nuxt_47dist_47pages_47runtime_47router
];
const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const _sfc_main$d = {
  __name: "error-404",
  __ssrInlineRender: true,
  props: {
    appName: {
      type: String,
      default: "Nuxt"
    },
    version: {
      type: String,
      default: ""
    },
    statusCode: {
      type: String,
      default: "404"
    },
    statusMessage: {
      type: String,
      default: "Not Found"
    },
    description: {
      type: String,
      default: "Sorry, the page you are looking for could not be found."
    },
    backHome: {
      type: String,
      default: "Go back home"
    }
  },
  setup(__props) {
    const props = __props;
    useHead({
      title: `${props.statusCode} - ${props.statusMessage} | ${props.appName}`,
      script: [],
      style: [
        {
          children: `*,:before,:after{-webkit-box-sizing:border-box;box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}*{--tw-ring-inset:var(--tw-empty, );--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(14, 165, 233, .5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000}:root{-moz-tab-size:4;-o-tab-size:4;tab-size:4}a{color:inherit;text-decoration:inherit}body{margin:0;font-family:inherit;line-height:inherit}html{-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";line-height:1.5}h1,p{margin:0}h1{font-size:inherit;font-weight:inherit}`
        }
      ]
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_NuxtLink = __nuxt_component_0$1;
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "font-sans antialiased bg-white dark:bg-black text-black dark:text-white grid min-h-screen place-content-center overflow-hidden" }, _attrs))} data-v-011aae6d><div class="fixed left-0 right-0 spotlight z-10" data-v-011aae6d></div><div class="max-w-520px text-center z-20" data-v-011aae6d><h1 class="text-8xl sm:text-10xl font-medium mb-8" data-v-011aae6d>${serverRenderer.exports.ssrInterpolate(__props.statusCode)}</h1><p class="text-xl px-8 sm:px-0 sm:text-4xl font-light mb-16 leading-tight" data-v-011aae6d>${serverRenderer.exports.ssrInterpolate(__props.description)}</p><div class="w-full flex items-center justify-center" data-v-011aae6d>`);
      _push(serverRenderer.exports.ssrRenderComponent(_component_NuxtLink, {
        to: "/",
        class: "gradient-border text-md sm:text-xl py-2 px-4 sm:py-3 sm:px-6 cursor-pointer"
      }, {
        default: vue_cjs_prod.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${serverRenderer.exports.ssrInterpolate(__props.backHome)}`);
          } else {
            return [
              vue_cjs_prod.createTextVNode(vue_cjs_prod.toDisplayString(__props.backHome), 1)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div>`);
    };
  }
};
const _sfc_setup$d = _sfc_main$d.setup;
_sfc_main$d.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/@nuxt/ui-templates/dist/templates/error-404.vue");
  return _sfc_setup$d ? _sfc_setup$d(props, ctx) : void 0;
};
const Error404 = /* @__PURE__ */ _export_sfc(_sfc_main$d, [["__scopeId", "data-v-011aae6d"]]);
const _sfc_main$c = {
  __name: "error-500",
  __ssrInlineRender: true,
  props: {
    appName: {
      type: String,
      default: "Nuxt"
    },
    version: {
      type: String,
      default: ""
    },
    statusCode: {
      type: String,
      default: "500"
    },
    statusMessage: {
      type: String,
      default: "Server error"
    },
    description: {
      type: String,
      default: "This page is temporarily unavailable."
    }
  },
  setup(__props) {
    const props = __props;
    useHead({
      title: `${props.statusCode} - ${props.statusMessage} | ${props.appName}`,
      script: [],
      style: [
        {
          children: `*,:before,:after{-webkit-box-sizing:border-box;box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}*{--tw-ring-inset:var(--tw-empty, );--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(14, 165, 233, .5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000}:root{-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{margin:0;font-family:inherit;line-height:inherit}html{-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";line-height:1.5}h1,p{margin:0}h1{font-size:inherit;font-weight:inherit}`
        }
      ]
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "font-sans antialiased bg-white dark:bg-black text-black dark:text-white grid min-h-screen place-content-center overflow-hidden" }, _attrs))} data-v-6aee6495><div class="fixed -bottom-1/2 left-0 right-0 h-1/2 spotlight" data-v-6aee6495></div><div class="max-w-520px text-center" data-v-6aee6495><h1 class="text-8xl sm:text-10xl font-medium mb-8" data-v-6aee6495>${serverRenderer.exports.ssrInterpolate(__props.statusCode)}</h1><p class="text-xl px-8 sm:px-0 sm:text-4xl font-light mb-16 leading-tight" data-v-6aee6495>${serverRenderer.exports.ssrInterpolate(__props.description)}</p></div></div>`);
    };
  }
};
const _sfc_setup$c = _sfc_main$c.setup;
_sfc_main$c.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/@nuxt/ui-templates/dist/templates/error-500.vue");
  return _sfc_setup$c ? _sfc_setup$c(props, ctx) : void 0;
};
const Error500 = /* @__PURE__ */ _export_sfc(_sfc_main$c, [["__scopeId", "data-v-6aee6495"]]);
const _sfc_main$a = {
  __name: "nuxt-error-page",
  __ssrInlineRender: true,
  props: {
    error: Object
  },
  setup(__props) {
    var _a;
    const props = __props;
    const error = props.error;
    (error.stack || "").split("\n").splice(1).map((line) => {
      const text = line.replace("webpack:/", "").replace(".vue", ".js").trim();
      return {
        text,
        internal: line.includes("node_modules") && !line.includes(".cache") || line.includes("internal") || line.includes("new Promise")
      };
    }).map((i) => `<span class="stack${i.internal ? " internal" : ""}">${i.text}</span>`).join("\n");
    const statusCode = String(error.statusCode || 500);
    const is404 = statusCode === "404";
    const statusMessage = (_a = error.statusMessage) != null ? _a : is404 ? "Page Not Found" : "Internal Server Error";
    const description = error.message || error.toString();
    const stack = void 0;
    const ErrorTemplate = is404 ? Error404 : Error500;
    return (_ctx, _push, _parent, _attrs) => {
      _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(ErrorTemplate), vue_cjs_prod.mergeProps({ statusCode: vue_cjs_prod.unref(statusCode), statusMessage: vue_cjs_prod.unref(statusMessage), description: vue_cjs_prod.unref(description), stack: vue_cjs_prod.unref(stack) }, _attrs), null, _parent));
    };
  }
};
const _sfc_setup$a = _sfc_main$a.setup;
_sfc_main$a.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/nuxt/dist/app/components/nuxt-error-page.vue");
  return _sfc_setup$a ? _sfc_setup$a(props, ctx) : void 0;
};
const _sfc_main$9 = {
  __name: "nuxt-root",
  __ssrInlineRender: true,
  setup(__props) {
    const nuxtApp = useNuxtApp();
    nuxtApp.hooks.callHookWith((hooks) => hooks.map((hook) => hook()), "vue:setup");
    const error = useError();
    vue_cjs_prod.onErrorCaptured((err, target, info2) => {
      nuxtApp.hooks.callHook("vue:error", err, target, info2).catch((hookError) => console.error("[nuxt] Error in `vue:error` hook", hookError));
      {
        callWithNuxt(nuxtApp, throwError, [err]);
      }
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_App = vue_cjs_prod.resolveComponent("App");
      serverRenderer.exports.ssrRenderSuspense(_push, {
        default: () => {
          if (vue_cjs_prod.unref(error)) {
            _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(_sfc_main$a), { error: vue_cjs_prod.unref(error) }, null, _parent));
          } else {
            _push(serverRenderer.exports.ssrRenderComponent(_component_App, null, null, _parent));
          }
        },
        _: 1
      });
    };
  }
};
const _sfc_setup$9 = _sfc_main$9.setup;
_sfc_main$9.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/nuxt/dist/app/components/nuxt-root.vue");
  return _sfc_setup$9 ? _sfc_setup$9(props, ctx) : void 0;
};
const layouts = {
  default: vue_cjs_prod.defineAsyncComponent(() => Promise.resolve().then(function() {
    return _default$1;
  })),
  panel: vue_cjs_prod.defineAsyncComponent(() => Promise.resolve().then(function() {
    return panel$1;
  }))
};
const defaultLayoutTransition = { name: "layout", mode: "out-in" };
const __nuxt_component_0 = vue_cjs_prod.defineComponent({
  props: {
    name: {
      type: [String, Boolean, Object],
      default: null
    }
  },
  setup(props, context) {
    const route = useRoute();
    return () => {
      var _a, _b, _c;
      const layout = (_b = (_a = vue_cjs_prod.isRef(props.name) ? props.name.value : props.name) != null ? _a : route.meta.layout) != null ? _b : "default";
      const hasLayout = layout && layout in layouts;
      return _wrapIf(vue_cjs_prod.Transition, hasLayout && ((_c = route.meta.layoutTransition) != null ? _c : defaultLayoutTransition), _wrapIf(layouts[layout], hasLayout, context.slots)).default();
    };
  }
});
const _sfc_main$8 = {};
function _sfc_ssrRender$2(_ctx, _push, _parent, _attrs) {
  const _component_NuxtLayout = __nuxt_component_0;
  const _component_NuxtPage = vue_cjs_prod.resolveComponent("NuxtPage");
  _push(serverRenderer.exports.ssrRenderComponent(_component_NuxtLayout, _attrs, {
    default: vue_cjs_prod.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.exports.ssrRenderComponent(_component_NuxtPage, null, null, _parent2, _scopeId));
      } else {
        return [
          vue_cjs_prod.createVNode(_component_NuxtPage)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$8 = _sfc_main$8.setup;
_sfc_main$8.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/nuxt/dist/pages/runtime/app.vue");
  return _sfc_setup$8 ? _sfc_setup$8(props, ctx) : void 0;
};
const AppComponent = /* @__PURE__ */ _export_sfc(_sfc_main$8, [["ssrRender", _sfc_ssrRender$2]]);
if (!globalThis.$fetch) {
  globalThis.$fetch = $fetch$1.create({
    baseURL: baseURL()
  });
}
let entry;
const plugins = normalizePlugins(_plugins);
{
  entry = async function createNuxtAppServer(ssrContext) {
    const vueApp = vue_cjs_prod.createApp(_sfc_main$9);
    vueApp.component("App", AppComponent);
    const nuxt = createNuxtApp({ vueApp, ssrContext });
    try {
      await applyPlugins(nuxt, plugins);
      await nuxt.hooks.callHook("app:created", vueApp);
    } catch (err) {
      await nuxt.callHook("app:error", err);
      ssrContext.error = ssrContext.error || err;
    }
    return vueApp;
  };
}
const entry$1 = (ctx) => entry(ctx);
const _sfc_main$7 = /* @__PURE__ */ vue_cjs_prod.defineComponent({
  __name: "index",
  __ssrInlineRender: true,
  setup(__props) {
    const buttons = [
      {
        name: "\u041E\u0442\u043C\u0435\u0442\u0438\u0442\u0441\u044F \u043E \u043F\u0440\u0438\u0445\u043E\u0434\u0435",
        icon: vueTablerIcons.LoginIcon,
        path: "/"
      },
      {
        name: "\u041E\u0442\u043C\u0435\u0442\u0438\u0442\u0441\u044F \u043E\u0431 \u0443\u0445\u043E\u0434\u0435",
        icon: vueTablerIcons.LogoutIcon,
        path: "/"
      },
      {
        name: "\u041F\u0440\u0438\u043D\u044F\u0442\u044C \u043F\u043E\u0441\u0442\u0430\u0432\u043A\u0443",
        icon: vueTablerIcons.TruckIcon,
        path: "/"
      },
      {
        name: "\u041F\u0440\u0438\u043D\u044F\u0442\u044C \u0442\u043E\u0432\u0430\u0440 \u043D\u0430 \u0441\u043A\u043B\u0430\u0434",
        icon: vueTablerIcons.BarcodeIcon,
        path: "/scan"
      },
      {
        name: "\u0421\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u0435 \u0441\u043A\u043B\u0430\u0434\u0430",
        icon: vueTablerIcons.CheckIcon,
        path: "/"
      },
      {
        name: "\u041A\u0443\u0440\u044C\u0435\u0440\u0441\u043A\u0438\u0435 \u0434\u043E\u0441\u0442\u0430\u0432\u043A\u0438",
        icon: vueTablerIcons.CalendarStatsIcon,
        path: "/"
      }
    ];
    return (_ctx, _push, _parent, _attrs) => {
      const _component_nuxt_link = __nuxt_component_0$1;
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "grid items-center grid-cols-2 gap-4 my-24 text-primary" }, _attrs))}><!--[-->`);
      serverRenderer.exports.ssrRenderList(buttons, (button) => {
        _push(serverRenderer.exports.ssrRenderComponent(_component_nuxt_link, {
          to: button.path,
          class: "flex flex-row col-span-1 gap-2 text-2xl normal-case btn btn-outline btn-lg"
        }, {
          default: vue_cjs_prod.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              serverRenderer.exports.ssrRenderVNode(_push2, vue_cjs_prod.createVNode(vue_cjs_prod.resolveDynamicComponent(button.icon), null, null), _parent2, _scopeId);
              _push2(`${serverRenderer.exports.ssrInterpolate(button.name)}`);
            } else {
              return [
                (vue_cjs_prod.openBlock(), vue_cjs_prod.createBlock(vue_cjs_prod.resolveDynamicComponent(button.icon))),
                vue_cjs_prod.createTextVNode(vue_cjs_prod.toDisplayString(button.name), 1)
              ];
            }
          }),
          _: 2
        }, _parent));
      });
      _push(`<!--]--></div>`);
    };
  }
});
const _sfc_setup$7 = _sfc_main$7.setup;
_sfc_main$7.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/index.vue");
  return _sfc_setup$7 ? _sfc_setup$7(props, ctx) : void 0;
};
const index = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$7
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$6 = /* @__PURE__ */ vue_cjs_prod.defineComponent({
  __name: "info",
  __ssrInlineRender: true,
  setup(__props) {
    const state = vue_cjs_prod.reactive({ search: null, item: null, error: false });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "flex flex-col items-center justify-center w-full gap-2" }, _attrs))}><div class="flex flex-col w-full gap-4 m-auto"><div class="shadow-xl card bg-base-100"><div class="card-body"><form class="flex flex-row items-center w-full gap-2"><div class="w-full form-control"><input${serverRenderer.exports.ssrRenderAttr("value", state.search)} type="text" required placeholder="\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0431\u0430\u0440\u043A\u043E\u0434 \u0442\u043E\u0432\u0430\u0440\u0430..." class="w-full input input-bordered"></div><div class="justify-start card-actions"><button type="submit" class="btn btn-primary btn-md">`);
      _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), null, null, _parent));
      _push(`</button></div></form>`);
      if (!state.error && state.item) {
        _push(`<div class="grid grid-cols-3 grid-rows-3 stats"><div class="col-span-1 border-none stat"><div class="stat-title">\u0411\u0430\u0440\u043A\u043E\u0434</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Barcode)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\u0440\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Naimenovanie)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0410\u0440\u0442\u0438\u043A\u0443\u043B</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Artikyl)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041C\u0430\u0440\u043A\u0430 \u0442\u043E\u0432\u0430\u0440\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Marka_Tovara)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0414\u0430\u0442\u0430 \u043F\u043E\u0441\u0442\u0443\u043F\u043B\u0435\u043D\u0438\u044F</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(vue_cjs_prod.unref(format)(new Date(state.item.Data_postuplenia_na_sklad), "dd MMMM yyyy", { locale: vue_cjs_prod.unref(ru) }))}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0426\u0435\u043D\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Price)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041F\u043E\u0441\u0442\u0430\u0432\u0449\u0438\u043A</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.item.Postavchik.INN)}</div><div class="stat-desc">${serverRenderer.exports.ssrInterpolate(state.item.Postavchik.Naimenovanie)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0420\u0430\u0431\u043E\u0442\u043D\u0438\u043A</div><div class="stat-value">\u2116${serverRenderer.exports.ssrInterpolate(state.item.Rabotnik.id_Rabotnika)}</div><div class="stat-desc">${serverRenderer.exports.ssrInterpolate(state.item.Rabotnik.Familia)} ${serverRenderer.exports.ssrInterpolate(state.item.Rabotnik.Name)} ${serverRenderer.exports.ssrInterpolate(state.item.Rabotnik.Otchestvo)}</div></div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
      if (state.error) {
        _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-error">`);
        _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), { class: "flex-shrink-0" }, null, _parent));
        _push(`<span class="w-auto">\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043D\u0430\u0439\u0442\u0438 \u0442\u043E\u0432\u0430\u0440 \u0441 \u0434\u0430\u043D\u043D\u044B\u043C \u0431\u0430\u0440\u043A\u043E\u0434\u043E\u043C</span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$6 = _sfc_main$6.setup;
_sfc_main$6.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/info.vue");
  return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
};
const info = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$6
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$5 = /* @__PURE__ */ vue_cjs_prod.defineComponent({
  __name: "login",
  __ssrInlineRender: true,
  setup(__props) {
    useCookie("auth");
    useRouter();
    const state = vue_cjs_prod.reactive({ Login: null, Parol: null, error: null });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "flex flex-col items-center justify-center w-full h-screen gap-2" }, _attrs))}><div class="flex flex-col gap-4 m-auto min-w-[612px]"><h1 class="font-bold text-center text-white text-[4em] drop-shadow-xl shadow-zinc-800/80 mb-6">\u0421 \u0432\u043E\u0437\u0432\u0440\u0430\u0449\u0435\u043D\u0438\u0435\u043C! </h1><div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-info">`);
      _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.UsersIcon), { class: "flex-shrink-0" }, null, _parent));
      _push(`<span class="w-auto">\u0414\u043B\u044F \u0432\u0445\u043E\u0434\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043C\u0443 \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0443\u0439\u0442\u0435\u0441\u044C.</span></div><div class="shadow-xl card bg-base-100"><div class="card-body"><form><div class="w-full form-control"><label class="label"><span class="font-bold label-text">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043B\u043E\u0433\u0438\u043D</span></label><input${serverRenderer.exports.ssrRenderAttr("value", state.Login)} type="text" required placeholder="alex" class="w-full input input-bordered"></div><div class="w-full form-control"><label class="label"><span class="font-bold label-text">\u041F\u0430\u0440\u043E\u043B\u044C</span></label><input${serverRenderer.exports.ssrRenderAttr("value", state.Parol)} type="password" required class="w-full input input-bordered"></div><div class="justify-start card-actions"><button type="submit" class="mt-4 rounded-full btn btn-md">\u0412\u043E\u0439\u0442\u0438</button></div></form></div></div>`);
      if (state.error) {
        _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-error">`);
        _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.UsersIcon), { class: "flex-shrink-0" }, null, _parent));
        _push(`<span class="w-auto">${serverRenderer.exports.ssrInterpolate(state.error)}</span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$5 = _sfc_main$5.setup;
_sfc_main$5.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/login.vue");
  return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
};
const login = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$5
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$4 = /* @__PURE__ */ vue_cjs_prod.defineComponent({
  __name: "lookup",
  __ssrInlineRender: true,
  setup(__props) {
    const state = vue_cjs_prod.reactive({ search: null, items: null });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "flex flex-col items-center justify-center w-full gap-2" }, _attrs))}><div class="flex flex-col w-full gap-4 m-auto"><div class="shadow-xl card bg-base-100"><div class="card-body"><form class="flex flex-row items-center w-full gap-2"><div class="w-full form-control"><input${serverRenderer.exports.ssrRenderAttr("value", state.search)} type="text" required placeholder="\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043A\u043E\u0434 \u0437\u0430\u043A\u0430\u0437\u0430 \u0438\u043B\u0438 \u0424\u0418\u041E \u043A\u043B\u0438\u0435\u043D\u0442\u0430" class="w-full input input-bordered"></div><div class="justify-start card-actions"><button type="submit" class="btn btn-primary btn-md">`);
      _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), null, null, _parent));
      _push(`</button></div></form><div class="overflow-x-auto">`);
      if (state.items && state.items.length > 0) {
        _push(`<table class="table w-full table-compact"><thead><tr><th>\u0424\u0418\u041E \u041A\u043B\u0438\u0435\u043D\u0442\u0430</th><th>\u0422\u0435\u043B\u0435\u0444\u043E\u043D</th></tr></thead><tbody><!--[-->`);
        serverRenderer.exports.ssrRenderList(state.items, (item) => {
          _push(`<tr><th>${serverRenderer.exports.ssrInterpolate(item.Pokypatel ? item.Pokypatel.Familia : item.Familia)} ${serverRenderer.exports.ssrInterpolate(item.Pokypatel ? item.Pokypatel.Name : item.Name)} ${serverRenderer.exports.ssrInterpolate(item.Pokypatel ? item.Pokypatel.Otchestvo : item.Otchestvo)}</th><td>${serverRenderer.exports.ssrInterpolate(item.Pokypatel ? item.Pokypatel.Telephone : item.Telephone)}</td></tr>`);
        });
        _push(`<!--]--></tbody></table>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div></div>`);
      if (state.items && state.items.length == 0) {
        _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-error">`);
        _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), { class: "flex-shrink-0" }, null, _parent));
        _push(`<span class="w-auto">\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043D\u0430\u0439\u0442\u0438 \u043A\u043B\u0438\u0435\u043D\u0442\u043E\u0432, \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0445 \u0437\u0430\u043F\u0440\u043E\u0441\u0443</span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$4 = _sfc_main$4.setup;
_sfc_main$4.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/lookup.vue");
  return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
};
const lookup = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$4
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3 = /* @__PURE__ */ vue_cjs_prod.defineComponent({
  __name: "scan",
  __ssrInlineRender: true,
  setup(__props) {
    const state = vue_cjs_prod.reactive({ barcode: null, result: null, error: false });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "flex flex-col items-center justify-center w-full gap-2" }, _attrs))}><div class="flex flex-col w-full gap-4 m-auto"><div class="shadow-xl card bg-base-100"><div class="card-body"><form class="flex flex-row items-center w-full gap-2"><div class="w-full form-control"><input${serverRenderer.exports.ssrRenderAttr("value", state.barcode)} type="text" required placeholder="\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0431\u0430\u0440\u043A\u043E\u0434 \u0442\u043E\u0432\u0430\u0440\u0430..." class="w-full input input-bordered"></div><div class="justify-start card-actions"><button type="submit" class="btn btn-primary btn-md">`);
      _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), null, null, _parent));
      _push(`</button></div></form>`);
      if (!state.error && state.result) {
        _push(`<!--[-->`);
        if (state.result.wasCreated) {
          _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-success">`);
          _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), { class: "flex-shrink-0" }, null, _parent));
          _push(`<span class="w-auto">\u0422\u043E\u0432\u0430\u0440 \u0441 \u0431\u0430\u0440\u043A\u043E\u0434\u043E\u043C \u2116${serverRenderer.exports.ssrInterpolate(state.result.tovar.Barcode)} \u043F\u0440\u0438\u043D\u044F\u0442 \u0432 \u044F\u0447\u0435\u0439\u043A\u0443!</span></div>`);
        } else {
          _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-info">`);
          _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), { class: "flex-shrink-0" }, null, _parent));
          _push(`<span class="w-auto">\u0422\u043E\u0432\u0430\u0440 \u0441 \u0431\u0430\u0440\u043A\u043E\u0434\u043E\u043C \u2116${serverRenderer.exports.ssrInterpolate(state.result.tovar.Barcode)} \u0443\u0436\u0435 \u0431\u044B\u043B \u043F\u0440\u0438\u043D\u044F\u0442 \u0432 \u044F\u0447\u0435\u0439\u043A\u0443!</span></div>`);
        }
        _push(`<!--]-->`);
      } else {
        _push(`<!---->`);
      }
      if (!state.error && state.result) {
        _push(`<div class="stats"><div class="stat"><div class="stat-title">\u2116 \u044F\u0447\u0435\u0439\u043A\u0438</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.yacheika.id_Yacheiki)}</div></div><div class="stat"><div class="stat-title">\u2116 \u0441\u043A\u043B\u0430\u0434\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.yacheika.id_Sklada)}</div></div><div class="stat"><div class="stat-title">\u041F\u043E\u043A\u0443\u043F\u0430\u0442\u0435\u043B\u044C</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.yacheika.Pokupatel.Familia)} ${serverRenderer.exports.ssrInterpolate(state.result.yacheika.Pokupatel.Name)} ${serverRenderer.exports.ssrInterpolate(state.result.yacheika.Pokupatel.Otchestvo)}</div></div></div>`);
      } else {
        _push(`<!---->`);
      }
      if (!state.error && state.result) {
        _push(`<div class="grid grid-cols-3 grid-rows-3 stats"><div class="col-span-1 border-none stat"><div class="stat-title">\u0411\u0430\u0440\u043A\u043E\u0434</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Barcode)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\u0440\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Naimenovanie)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0410\u0440\u0442\u0438\u043A\u0443\u043B</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Artikyl)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041C\u0430\u0440\u043A\u0430 \u0442\u043E\u0432\u0430\u0440\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Marka_Tovara)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0414\u0430\u0442\u0430 \u043F\u043E\u0441\u0442\u0443\u043F\u043B\u0435\u043D\u0438\u044F</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(vue_cjs_prod.unref(format)(new Date(state.result.tovar.Data_postuplenia_na_sklad), "dd MMMM yyyy", { locale: vue_cjs_prod.unref(ru) }))}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0426\u0435\u043D\u0430</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Price)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u041F\u043E\u0441\u0442\u0430\u0432\u0449\u0438\u043A</div><div class="stat-value">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Postavchik.INN)}</div><div class="stat-desc">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Postavchik.Naimenovanie)}</div></div><div class="col-span-1 border-none stat"><div class="stat-title">\u0420\u0430\u0431\u043E\u0442\u043D\u0438\u043A</div><div class="stat-value">\u2116${serverRenderer.exports.ssrInterpolate(state.result.tovar.Rabotnik.id_Rabotnika)}</div><div class="stat-desc">${serverRenderer.exports.ssrInterpolate(state.result.tovar.Rabotnik.Familia)} ${serverRenderer.exports.ssrInterpolate(state.result.tovar.Rabotnik.Name)} ${serverRenderer.exports.ssrInterpolate(state.result.tovar.Rabotnik.Otchestvo)}</div></div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
      if (state.error) {
        _push(`<div class="flex flex-row items-center justify-center gap-2 font-semibold text-white shadow-lg alert alert-error">`);
        _push(serverRenderer.exports.ssrRenderComponent(vue_cjs_prod.unref(vueTablerIcons.SearchIcon), { class: "flex-shrink-0" }, null, _parent));
        _push(`<span class="w-auto">\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043D\u0430\u0439\u0442\u0438 \u0442\u043E\u0432\u0430\u0440 \u0441 \u0434\u0430\u043D\u043D\u044B\u043C \u0431\u0430\u0440\u043A\u043E\u0434\u043E\u043C</span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$3 = _sfc_main$3.setup;
_sfc_main$3.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/scan.vue");
  return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
};
const scan = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$3
}, Symbol.toStringTag, { value: "Module" }));
const withAuth = defineNuxtRouteMiddleware(async (to, from) => {
  let __temp, __restore;
  const cookie = useCookie("auth");
  if (!cookie.value)
    return navigateTo("/login");
  const account = cookie.value;
  const res = ([__temp, __restore] = executeAsync(() => useFetch(`/api/user/login`, {
    method: "post",
    body: {
      Login: account.Login,
      Parol: account.Parol
    }
  })), __temp = await __temp, __restore(), __temp);
  if (!res.data.value || res.error.value) {
    cookie.value = null;
    return navigateTo("/login");
  }
  if (account.Login != res.data.value.Login || account.Parol != res.data.value.Parol) {
    cookie.value = null;
    return navigateTo("/login");
  }
});
const withAuth$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": withAuth
}, Symbol.toStringTag, { value: "Module" }));
const withoutAuth = defineNuxtRouteMiddleware(async (to, from) => {
  const cookie = useCookie("auth");
  const account = cookie.value;
  if (account)
    return navigateTo("/");
});
const withoutAuth$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": withoutAuth
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2 = {};
function _sfc_ssrRender$1(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ id: "auth" }, _attrs))}>`);
  serverRenderer.exports.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div>`);
}
const _sfc_setup$2 = _sfc_main$2.setup;
_sfc_main$2.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("layouts/default.vue");
  return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
};
const _default = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["ssrRender", _sfc_ssrRender$1]]);
const _default$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _default
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1 = {
  __name: "Navbar",
  __ssrInlineRender: true,
  setup(__props) {
    useCookie("auth");
    useRouter();
    const links = [
      {
        name: "\u0417\u0430\u0434\u0430\u043D\u0438\u044F \u043D\u0430 \u0434\u0435\u043D\u044C",
        path: "/"
      },
      {
        name: "\u041F\u043E\u0438\u0441\u043A \u043A\u043B\u0438\u0435\u043D\u0442\u043E\u0432",
        path: "/lookup"
      },
      {
        name: "\u041A\u043B\u0438\u0435\u043D\u0442\u044B \u043D\u0430 \u043F\u0440\u0438\u043C\u0435\u0440\u043A\u0435",
        path: "/dressing"
      },
      {
        name: "\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0442\u043E\u0432\u0430\u0440\u0435",
        path: "/info"
      },
      {
        name: "\u0412\u043E\u0437\u0432\u0440\u0430\u0442 \u0442\u043E\u0432\u0430\u0440\u0430",
        path: "/return"
      }
    ];
    return (_ctx, _push, _parent, _attrs) => {
      const _component_nuxt_link = __nuxt_component_0$1;
      _push(`<nav${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({ class: "flex flex-row items-center justify-center" }, _attrs))}><!--[-->`);
      serverRenderer.exports.ssrRenderList(links, (link) => {
        _push(serverRenderer.exports.ssrRenderComponent(_component_nuxt_link, {
          class: "link",
          to: link.path
        }, {
          default: vue_cjs_prod.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`${serverRenderer.exports.ssrInterpolate(link.name)}`);
            } else {
              return [
                vue_cjs_prod.createTextVNode(vue_cjs_prod.toDisplayString(link.name), 1)
              ];
            }
          }),
          _: 2
        }, _parent));
      });
      _push(`<!--]--><button class="link">\u0412\u044B\u0439\u0442\u0438</button></nav>`);
    };
  }
};
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/Navbar.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  const _component_Navbar = _sfc_main$1;
  _push(`<div${serverRenderer.exports.ssrRenderAttrs(vue_cjs_prod.mergeProps({
    class: "flex flex-col w-full min-h-screen gap-4",
    id: "panel"
  }, _attrs))}><h1 class="w-full font-bold text-[3em] my-6 text-center">DostaVista</h1>`);
  _push(serverRenderer.exports.ssrRenderComponent(_component_Navbar, null, null, _parent));
  _push(`<div class="flex flex-col w-full max-w-screen-xl mx-auto">`);
  serverRenderer.exports.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = vue_cjs_prod.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("layouts/panel.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const panel = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
const panel$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": panel
}, Symbol.toStringTag, { value: "Module" }));

export { entry$1 as default };
//# sourceMappingURL=server.mjs.map
